Discovering Unknown But Interesting Items

on Personal Social Network

Juang-Lin Duan, Shashi Prasad, and Jen-Wei Huang

Yuan Ze University,

135 Yuan-Tung Road, Chung-Li, Taiwan 32003, R.O.C.

{s986039,s989112}@mail.yzu.edu.tw,

jwhuang@saturn.yzu.edu.tw

Abstract. Social networking service has become very popular recently.
Many recommendation systems have been proposed to integrate with so-
cial networking websites. Traditional recommendation systems focus on
providing popular items or items posted by close friends. This strategy
causes some problems. Popular items always occupy the recommenda-
tion list and they are usually already known by the user. In addition,
items recommended by familiar users, who frequently communicate with
the target user, may not be interesting. Moreover, interesting items from
similar users with lower popularity are ignored. In this paper, we pro-
pose an algorithm, UBI, to discover unknown but interesting items. We
propose three scores, i.e., Quartile-aided Popularity Score, Social Behav-
ior Score, and User Similarity Score, to model the popularity of items,
the familiarity of friends, and the similarity of users respectively in the
target user’s personal social network. Combining these three scores, the
recommendation list containing unknown but interesting items can be
generated. Experimental results show that UBI outperforms traditional
methods in terms of the percentages of unknown and interesting items
in the recommendation list.

Keywords: recommendation, social network, unknown but interesting.

1

Introduction

With the tremendous success of social networking websites nowadays, diverse
social network services have been vigorous and much popular. Although many
services related to social network websites exist, it is important to set up a stan-
dard which helps users to make a decision if it is worthy of them. In recent
years, many recommendation systems have been proposed to integrate with so-
cial networking websites and been used in many diﬀerent business applications
such as movies, music, books, news, etc. Some popular e-commerce websites such
as Amazon, eBay, and Netﬂix analyze the shopping behavior of users to build
the recommendation list of products to their customers. The online shopping
system recommends each customer the products bought by others who have
similar shopping behavior in the past. In addition, some well-known social net-
working websites, Facebook, Myspace and Twitter provide users to establish

P.-N. Tan et al. (Eds.): PAKDD 2012, Part II, LNAI 7302, pp. 145–156, 2012.
c(cid:2) Springer-Verlag Berlin Heidelberg 2012

146

J.-L. Duan, S. Prasad, and J.-W. Huang

their own personal communities or social networks based on friends. There are
many services for personalized recommendations in social networking websites.
For example, InSuggest1 provides personalized recommendations of bookmarks
originating from the social bookmarking site Delicious2, and Outbrain3 provides
personalized blog recommendations from blogging services. The purpose of these
recommendations are to adapt the contents of the websites to the speciﬁc needs
of the individual user by presenting the most attractive and relevant items to
users.

Traditional recommendation systems usually generate recommendation lists
based on popularity of items and/or analyze the behavior of the target user and
then make further recommendations. However, these systems focus on providing
popular items or items posted by close friends. This leads to problems listed as
follows:

1. Popular items always occupy the recommendation list and they are usually
already known by the user.
2. Items recommended by familiar users, who frequently communicate with the
target user, may not be interesting.
3. Interesting items from similar users with lower popularity are ignored.

Fig. 1 shows the personal social network of the target user U1. Circular nodes
represent users and the link between two users indicates the friend relationship.
The number on the link denotes the number of direct communication between
these two users and MF represents the number of mutual friends between U1
and the other user. In addition, square nodes represent items posted by the
connected user, where the number indicates the number of comments left by all
users and the number of likes, which means other users are interested in the
item. Traditional recommendation systems usually recommend items I4 : 150
and I1 : 100, since I4 is the most popular item and I1 is copied by many users.
However, these items are easily found by the target user and should not occupy
the recommendation list. On the other hand, I9 : 55 from similar user U3 with
lower popularity is easily ignored. New paragraph to remedy these defects, we
propose to discover unknown but interesting items, and design an algorithm to
generate recommendation list on personal social networks. The personal social
network contains the target user and his/her direct friends. We also include items
posted by these users.

Our proposed algorithm not only considers the popularity of items and the
similarity with friends, but also discovers unknown but interesting items through
the target user’s social behavior. We propose three scores to calculate Unknown
But Interesting Score of each item in the target user’s personal social network.
The ﬁrst score is Quartile-aided Popularity Score, which is based on the popu-
larity adjusted by quartiles of items, to ﬁnd out items with lower popularity. The

1 http://insuggest.wordpress.com/
2 http://www.delicious.com/
3 http://www.outbrain.com/

Discovering Unknown But Interesting Items on Personal Social Network

147

Fig. 1. The personal social network of the target user U1

second score is Social Behavior Score, which depends on social interactions on
social network websites and direct communication between users. The third score
is User Similarity Score, which is based on interests between users, to model the
similarity of the target user and his/her friends. Combining these three scores,
we can generate the recommendation list with unknown but interesting items to
the target user.

Finally, to evaluate our approach, we implement our system on a social net-
working website, and collect users’ feedback to compare diﬀerences between tra-
ditional approaches and our proposed algorithm. The experimental results show
that our proposed algorithm can successfully ﬁnd unknown but interesting items
and the satisfaction percentage of our system is higher than compared methods.
The remainder of this paper is organized as follows. In Section 2, a brief survey
of related works is presented. The proposed algorithm is introduced in Section
3. Section 4 presents the experimental results. Finally, we conclude this work in
Section 5.

2 Related Works

2.1 Social Networking

Social networking is the development of social collaborative technologies, and
connected by one or more speciﬁc types of relationship, such as friendship, sim-
ilar interest. In recent year, online social networking has been around in the
world, therefore, many online social networking websites are being generated
which allow users to establish their social network by adding other users to their
friend lists. For example, many users of popular social networking sites such as
Facebook and Twitter. Many research issues of social networking focused on de-
velopment of information techniques and data processing [7], and then extend
to social networking analysis [10], which is a set of methods to discover relations
between nodes in a social network.

148

J.-L. Duan, S. Prasad, and J.-W. Huang

A number of measures in social networking analysis including network size,
degree centrality, betweenness, density etc. are considered. Bird et al. [5] pro-
posed a method to extract social networks from e-mail communication. Agrawal
et al. [3] using web mining techniques to understand the behavior of users in
news group, the proposed the behavior is meaning a newsgroup posting consists
of one or more quoted lines from another posting followed by the opinion of
the author. Adamic et al. [2] developed a method to discover the relationship of
friends and neighbors in the web. Many social networking analysis approaches
have propose similar ideas to ﬁnd neighborhoods and paths with the social net-
work [8], [9]. In our work, we extend the concept of social networking to discover
the unknown but interesting items from social network site.

2.2 Recommendation Systems

Recommendation systems are widely used for personalized information ﬁltering
technology, always used to recommend items that are of interest to users based on
customer demographics, features of items, or user preferences. Therefore, users
should provide their interest proﬁles to recommendation systems in order to
get recommendations. Then recommendation systems can utilize these interest
proﬁles to estimate the ratings of the unrated items for users or predict that items
to be liked by users. In general, recommendation systems are usually classiﬁed
into the following three methods: content-based recommendation, collaborative
ﬁltering and hybrid approaches.

The ﬁrst method is based on contents [12], which analyzes the contents of in-
formation products and user information to produce the recommended method.
This method is mainly dependent on the data description of goods and users
of consumer behavior in the past, for the two meta-analysis to calculate the
characteristics of diﬀerent commodities of the scores for the summary, identify
the items for the user with a higher satisfaction scores in order to establish
recommended.

The second method is based on collaborative ﬁltering [14], which utilizes simi-
larities of user’s preferences to recommend items. Collaborative ﬁltering is a set of
similarity measure methods, as follows: Jaccard’s coeﬃcient of similarity, Cosine
similarity [15], Pearson correlation-based similarities [13]. Many approaches em-
ploy the technique of collaborative ﬁltering, for instance, Bell et al. [4] proposed
novel algorithms for predicting user ratings of items by integrating complemen-
tary models that focus on patterns at diﬀerent scales. Facebook has a feature,
called “People You May Know”, which recommends user to connect with based
on a “friend of a friend” approach [1].

Finally, many recommendation systems use hybrid approaches by combining
content-based methods and collaborative ﬁltering [6], which helps to avoid cer-
tain limitations of content-based and collaborative systems. For example, TAN-
GENT [11] focused on the “surprise me” query, in which a user may be bored
with usual genre of items, and may recommend new genre of items. This research

Discovering Unknown But Interesting Items on Personal Social Network

149

Fig. 2. The architecture of the system

closes to our belief, however, traditional recommendation systems always focus
on high frequency of item with similarity of user. That gives us an inspiration
that we can make use of the impact in our work.

3 Unknown But Interesting Recommendation System

In this section, we illustrate the system architecture and the details of our pro-
posed algorithm, Unknown But Interesting algorithm.

3.1 System Architecture

We build a recommendation system on a social networking platform. The ar-
chitecture of the system is shown in Fig. 2. First, when the target user logs in
to our system, the target user’s social data is collected and is used to generate
the personal social network. The social data includes the target user’s proﬁle,
which contains his/her posts, interests, friends list, and social interactions. From
the friends list, the open information of the target user’s friends is also collected,
which includes the number of mutual friends and direct communication. We only
consider 1-level friends, who have the direct connections to the target user. The
reason is that users are usually not interested in the social behavior of friends of
1-level friends and friends of friends have little inﬂuence power to the target user.
After the collection of the social data, we analyze the personal social network to
calculate three diﬀerent scores of each item and obtain unknown but interesting
score by the proposed algorithm. Finally, we can generate the recommendation
list of items show the results on the social networking website.

3.2 Unknown But Interesting Algorithm

Unknown But Interesting (U BI) algorithm focuses on the popularity of items,
the similarity between users, and the social behavior of the target user. The
proposed algorithm calculate three scores as follows:

150

J.-L. Duan, S. Prasad, and J.-W. Huang

Fig. 3. Example of P Siv, QSiv, and QP Siv

1. Quartile-aided Popularity Score (QP S) of each item.
2. Social Behavior Score (SBS) by considering social interactions of users.
3. User Similarity Score (U SS) of each friend of the target user.

Finally, we combine these three scores to obtain the Unknown But Interesting
Score (U BIS), and provide the recommendation list to the target user. We
explain the formulas and signiﬁcance of each score as follows.

Quartile-Aided Popularity Score. In the social networking website, users
can post messages, photos, videos, and links on their own pages. Other users
are able to leave comments on the posted items or simply click “like” button to
show their interests in the items. Therefore, in our system, the popularity score,
P Siv, is deﬁned as the number of comments and likes of a certain item i posted
by user v.

As we explained earlier, traditional recommendation systems always recom-
mend popular items to users, but these items are well-known and easily noticed
by users themselves. In order to determine a certain degree of popular items,
we use the concept of quartile, Qr = |r (n + 1) /4| , where r determines which
quartile, and n is total number of items. The items are sorted by their popularity
score, P Siv, ascendingly. The upper quartile, Q3(P Siv), represents the popular-
ity of the item with the (cid:2)3 (n + 1)/ 4(cid:3)th rank in the list. In this way, we deﬁne
quartile score, QSiv, to be the popularity score minus the upper quartile.

QSiv = P Siv − Q3 (P Siv)

(1)
Fig. 3 shows the P Siv and QSiv of each item posted by each user in Fig. 1. In this
example, n is 14. Therefore Q3 is the 11th lowest value of P Siv. The respective
QSiv is shown in middle row. Furthermore, in order to ﬁnd items which are
not very popular but still have enough attention, we propose Quartile-aided
Popularity Score, QP Siv.

QP Siv = 1 −

QSiv

M ax (QSiv) + 1

(2)

QP Siv normalizes QSiv by the maximum value and gives the upper quartile the
highest credit. In this way, we can capture the popularity of items adjusted by
the upper quartile.

Social Behavior Score. In addition to adjusting the popularity of items, UBI
considers the social behavior of the target user to further discover unknown

Discovering Unknown But Interesting Items on Personal Social Network

151

Fig. 4. Example of M Fuv, DCuv , and SBSuv

items. In the social networking website, users usually allowed to meet friends
and make connections to one another. Users can easily get information from
the friends they are familiar with. Therefore, UBI includes two factors from the
social behavior, i.e., mutual friends and direct communication. We deﬁne mutual
friend, M Fuv, be the number of mutual friends between user u and user v, and
direct communication of users, DCuv, be the number of direct communication
between user u and user v. For the target user u, the more mutual friends u
and v have the more likely it is that items are spread between those friends. In
addition, the more direct communication there is between u and v, the more
likely it is that items posted by user v are already known by the target user u.
Therefore, in order to ﬁnd unknown items, we deﬁne Social Behavior Score as
follows.
⎞
⎠ ,

⎞
⎠×

M Fuv

DCuv

⎛
⎝1 −

⎛
⎝1 −

SBSuv =

M ax

v∈f riends of u

(M Fuv) + 1

M ax

v∈f riends of u

(DCuv) + 1

(3)
where M ax(M Fuv) represents the maximum value of M Fuv among all friends v
of the target user u, and M ax(DCuv) is the maximum value of DCuv among all
v. SBSuv represents the inverse probability that the items posted by user v are
already known by the target user u. Fig. 4 shows some SBSuv of users in Fig. 1.

User Similarity Score. UBI not only takes popularity of items and familiarity
of users into consideration, but also includes the similarity of users to obtain
interesting items. If the item is recommended by a similar user of the target
user, it is more likely that the target user is interested in the item. At ﬁrst, users
can do diﬀerent actions in the social networking website to show their interest
in some items, e.g., posting a link, commenting on a photo, or liking a video. We
give each action a worth value, W V , indicating how much a user is interested to
some item by performing this action.

(cid:6)

W Vj =

j∈all actions times of action j

times of action j

(4)

For example, the number of articles is 100, the number of comments is 500, and
the number of likes is 1000. We can get the sum of all action as 1600, and we can

152

J.-L. Duan, S. Prasad, and J.-W. Huang

Fig. 5. The score of user’s behavior

calculate the worth value of posting an article to be 16, leaving a comment to
be 3.2, and liking an item to be 1.6. Then, users may have a variety of behavior
on the same item, as shown in Fig. 5. Therefore, we sum up the worth value of
all actions performed on the same item i to get the interesting score, ISi.

(cid:7)

ISi =

W Vj

j∈all actions

(5)

(6)

(7)

Finally, we can deﬁne the user behavior as

U Bu = {ISI1 , ..., ISIn} ,

where ISi is the total interesting score of the user v to the item i. Accordingly,
the User Similarity Score, U SSuv, between user u and user v is computed by the
following equation.

U SSuv =

U Bu · U Bv
(cid:4)U Bu(cid:4) (cid:4)U Bv(cid:4)

From the user behavior listed in Fig. 5, user similarity score between U1 and U3
is 0.5, and U SS between U1 and U19 is 0.21.

Unknown But Interesting Score. Finally, we combine QP S, SBS, and U SS
to calculate the unknown but interesting score for each item on the personal
social network of the target user u. Thus, we deﬁne Unknown But Interesting
Score as follows.

U BISi =

(QP Siv × SBSuv × U SSuv)

(8)

(cid:7)

v

is the sum of same item i among all user v. Consequently, we can
where
generate the recommended list based on U BIS. As shown in Fig. 6, we sort
U BIS and recommend the Top-k items to the target user.

(cid:6)

Discovering Unknown But Interesting Items on Personal Social Network

153

Fig. 6. Example of U BISi

4 Experiments

In this section, the methodology and the performance evaluation are discussed.
The experiment is conducted to measure the percentages of unknown but inter-
esting items in the recommendation list. The methodology is discussed in Section
4.1. The performance evaluation is presented and discussed in Section 4.2.

4.1 Methodology

We implement recommendation system on a popular social networking website,
Facebook, in order to compare our algorithm to traditional recommendation sys-
tems. We can obtain user’s social information easily to discover unknown items.
We generate three recommendation lists each on Facebook, traditional method,
and our algorithm. First, Facebook recommendation list is based on latest up-
dates from user’s posting. Second, traditional method is based on popular items
with user’s preferences on Facebook. In other words, users usually focus on pop-
ularity of items with similarity among users. At last, our algorithm is based on
U BIS which recommends unknown but interesting items. We generate recom-
mendation list which presents Top-20 items to the target user, as shown in the
Fig.7, which is the interface of UBI recommendation system on Facebook, and
we show one of the lists randomly. Furthermore, we show posted user’s name,
content of the item, and each list has two questions for each message, and ques-
tionnaires, which are as follows: unknown or known, and interesting. The ques-
tion about unknown or known represents whether the message is unread or read
by the target user respectively. The question about interesting denotes whether
the target user is interested in the message. We can compare UBI algorithm with
the other two methods based on our questionnaires.

4.2 Performance Evaluation

We randomly invited 355 users to participate in our experiment. Our experi-
ments were conducted in the months starting from July through September of
2011, and 185 active users participated per month. At ﬁrst, we compared three
recommendation lists, and focused on unknown and interesting questions checked
by users. In other words, these two indicators are used to determine the target
user’s satisfaction. Fig. 8 presents percentages of items in the recommendation
lists. Facebook (FB) recommends unknown items better than others, because FB
usually recommends latest items, but users are usually not interested in them.
The percentage of unknown items of traditional method with popularity with

154

J.-L. Duan, S. Prasad, and J.-W. Huang

Fig. 7. System user interface for the recommended list

similarity (PS) is worst than that of other methods whereas the percentage of
interesting items of traditional method with PS is better than that of FB. Be-
cause traditional method recommends items, which are usually already known
to users, based on PS among users. Our UBI algorithm can discover unknown
items almost same as FB does and interesting items is better than FB and PS.
In terms of overall satisfaction with unknown and interesting questionnaires, our
algorithm can recommend unknown but interesting items exactly.

Fig. 8. The percentages of items in the recommendation lists

In addition, we recommend Top-20 items for each recommendation system,
then we compared percentages of Top-5 to Top-20. We want to ensure good
performance of satisfaction for each stage. Fig. 9 represents the percentage of
options checked by users for Top-5 to Top-20. In Fig. 9(a), the UBI algorithm
discovers unknown items almost the same as FB, and the percentage of interest-
ing is higher than FB and PS. Besides, Fig. 9(b), (c), and (d) also show this trend.

Discovering Unknown But Interesting Items on Personal Social Network

155

Fig. 9. The percentages of items in the Top-k list

This phenomenon represents not only Top-20 better UBI recommendations, but
Top-5 to Top-15 also better than FB and PS. Therefore, we can obtain user’s
satisfaction from user’s feedback is better than that of FB and PS. Finally, We
found that our proposed algorithm to discover unknown but interesting items is
better than Facebook and the traditional methods.

5 Conclusions

Traditional systems are based on similarity and popularity. This strategy leads
to some problems. We proposed an algorithm which recommends unknown but
interesting item by utilizing three scores: Quartile-aided Popularity Score, So-
cial Behavior Score, and User Similarity Score. We focus on the communication
among users and mutual friends, and discover the unknown but interesting item
for user. In other words, we not only consider the similarity but also care about
the user’s social interaction. Experimental results show that the performance
of UBI signiﬁcantly outperforms that of traditional methods in terms of the
percentages of unknown and interesting items in the recommendation list. Our
future work could focus on information propagation in social networks, and friend
of friend structure and utilize cloud computing techniques to improve the system
performance.

156

J.-L. Duan, S. Prasad, and J.-W. Huang

References

1. Oﬃcial facebook blog, http://blog.facebook.com/blog.php?post=15610312130
2. Adamic, L., Adar, E.: Friends and neighbors on the web. Social Networks 25(3),

211–230 (2003)

3. Agrawal, R., Rajagopalan, S., Srikant, R., Xu, Y.: Mining newsgroups using net-
works arising from social behavior. In: Proceedings of the 12th International Con-
ference on World Wide Web, WWW 2003, pp. 529–535. ACM (2003)

4. Bell, R., Koren, Y., Volinsky, C.: Modeling relationships at multiple scales to im-
prove accuracy of large recommender systems. In: Proceedings of the 13th ACM
SIGKDD International Conference on Knowledge Discovery and Data Mining,
KDD 2007, pp. 95–104. ACM (2007)

5. Bird, C., Gourley, A., Devanbu, P., Gertz, M., Swaminathan, A.: Mining email
social networks. In: Proceedings of the 2006 International Workshop on Mining
Software Repositories, MSR 2006, pp. 137–143. ACM (2006)

6. Claypool, M., Gokhale, A., Miranda, T., Murnikov, P., Netes, D., Sartin, M.: Com-
bining content-based and collaborative ﬁlters in an online newspaper. In: Proceed-
ings of ACM SIGIR Workshop on Recommender Systems (1999)

7. Fu, F., Liu, L., Wang, L.: Empirical analysis of online social networks in the age of
web 2.0. Physica A: Statistical Mechanics and its Applications 387(2-3), 675–684
(2008)

8. Geyer, W., Dugan, C., Millen, D.R., Muller, M., Freyne, J.: Recommending top-
ics for self-descriptions in online user proﬁles. In: Proceedings of the 2008 ACM
Conference on Recommender Systems, RecSys 2008, pp. 59–66. ACM (2008)

9. Groh, G., Ehmig, C.: Recommendations in taste related domains: collaborative
ﬁltering vs. social ﬁltering. In: Proceedings of the 2007 International ACM Con-
ference on Supporting Group Work, GROUP 2007, pp. 127–136. ACM (2007)

10. Mislove, A., Marcon, M., Gummadi, K.P., Druschel, P., Bhattacharjee, B.: Mea-
surement and analysis of online social networks. In: Proceedings of the 7th ACM
SIGCOMM Conference on Internet Measurement, IMC 2007, pp. 29–42. ACM
(2007)

11. Onuma, K., Tong, H., Faloutsos, C.: Tangent: a novel, ’surprise me’, recommen-
dation algorithm. In: Proceedings of the 15th ACM SIGKDD International Con-
ference on Knowledge Discovery and Data Mining, KDD 2009, pp. 657–666. ACM
(2009)

12. Pazzani, M., Billsus, D.: Content-Based Recommendation Systems. In: Brusilovsky,
P., Kobsa, A., Nejdl, W. (eds.) Adaptive Web 2007. LNCS, vol. 4321, pp. 325–341.
Springer, Heidelberg (2007)

13. Sarwar, B., Karypis, G., Konstan, J., Reidl, J.: Item-based collaborative ﬁltering
recommendation algorithms. In: Proceedings of the 10th International Conference
on World Wide Web, WWW 2001, pp. 285–295. ACM (2001)

14. Schafer, J.B., Frankowski, D., Herlocker, J., Sen, S.: Collaborative Filtering Rec-
ommender Systems. In: Brusilovsky, P., Kobsa, A., Nejdl, W. (eds.) Adaptive Web
2007. LNCS, vol. 4321, pp. 291–324. Springer, Heidelberg (2007)

15. Steinbach, M., Karypis, G., Kumar, V.: A comparison of document clustering tech-

niques. In: KDD-2000 Workshop on Text Mining, pp. 109–111 (2000)


