Discovering Coverage Patterns for Banner

Advertisement Placement

P. Gowtham Srinivas, P. Krishna Reddy, S. Bhargav,

R. Uday Kiran, and D. Satheesh Kumar

International Institute of Information Technology Hyderabad, India
uday rage,satheesh.kumar}@research.iiit.ac.in,

{gowtham.srinivas,bhargav.spg08,

pkreddy@iiit.ac.in

Abstract. We propose a model of coverage patterns and a methodology to ex-
tract coverage patterns from transactional databases. We have discussed how the
coverage patterns are useful by considering the problem of banner advertisements
placement in e-commerce web sites. Normally, advertiser expects that the banner
advertisement should be displayed to a certain percentage of web site visitors. On
the other hand, to generate more revenue for a given web site, the publisher has to
meet the coverage demands of several advertisers by providing appropriate sets
of web pages. Given web pages of a web site, a coverage pattern is a set of pages
visited by a certain percentage of visitors. The coverage patterns discovered from
click-stream data could help the publisher in meeting the demands of several ad-
vertisers. The efﬁciency and advantages of the proposed approach is shown by
conducting experiments on real world click-stream data sets.

Keywords: Click stream mining, online advertising, internet monetization, com-
putational advertising, graphical ads delivery.

1 Introduction

We have proposed a model of data mining pattern, called, “coverage patterns” and a
methodology to discover coverage patterns from transactional databases. Given a set of
data items, a coverage pattern is a set of non-overlapping data items covered by a certain
percentage of transactions. An Apriori-like algorithm [1] called CMine is proposed for
mining coverage patterns.

In the literature, the notion of coverage is being used for solving the set cover prob-
lem [2] in set theory and node cover problem [3] in graphs respectively. In [4], the
notion of coverage and overlap is used to examine the creation of a tag cloud for ex-
ploring and understanding a set of objects. In [5], the notion of coverage and overlap is
used to solve the problem of topical query decomposition. In this paper, we have pro-
posed a different kind of knowledge patterns. The proposed patterns can be employed
in improving the performance of several applications such as banner advertisements.

The research in this paper is motivated with the problem of banner advertisement

placement. The background and problem description is as follows.

Banner advertising is one of the dominant modes of online advertising, in addition to
the contextual and sponsored search advertising. A banner advertisement is described as

P.-N. Tan et al. (Eds.): PAKDD 2012, Part II, LNAI 7302, pp. 133–144, 2012.
c(cid:2) Springer-Verlag Berlin Heidelberg 2012

134

P.G. Srinivas et al.

a hypertext link that is associated with a box containing graphics which is redirected to
a particular web page when a user clicks on the banner [6]. The following three entities
are involved in banner advertising: advertiser, publisher and visitor. An advertiser is
interested in endorsing products through banner advertisements. A publisher manages
a web site or an advertisement network that sells banner advertisement space. Finally, a
visitor visits the web pages of a web site which contains banners.

An advertiser has the goal of spreading his/her advertisement to a certain percentage
of people visiting a web site. The goal of the publisher is to make more revenue by efﬁ-
ciently using the advertising space available in the web pages of a web site and meeting
the demands of multiple advertisers. For a given web site and period, one can analyse
the visitors’ behaviour by processing the transactions generated based on click stream
dataset and identify the sets of web pages that cover a given percentage of visitors’ pop-
ulation. However, the research issue here is to investigate the approaches for discovering
the sets of web pages which can cover a given percentage of visitors’ population based
on transactions extracted from the click stream data.

Most of the research work on online advertisement has been focused on auction
models [7], keyword or phrase identiﬁcation based on user queries [8], contextual ad-
vertising [9] and allocation and scheduling of advertisements [10]. To our knowledge,
not much amount of research work has been carried out on improving the options of-
fered by the publisher to the advertisers.

The proposed model of coverage patterns could help the advertiser by making his
advertisement visible to a certain percentage of web site visitors. With the proposed
approach, it is possible to ensure that the publisher can meet the demands of multi-
ple advertisers by considering several groups of potential pages. Through experimental
results on the real world datasets we show that the proposed model and algorithm is
efﬁcient. It has a potential to improve the performance of banner advertisement place-
ment.

A preliminary approach was presented in [11] to extract coverage patterns for banner
advertisement placement. In this paper we have elaborated the model and presented a
formal model of coverage patterns. We also proposed an efﬁcient algorithm to extract
complete set of coverage patterns and conducted experiments.

The rest of this paper is organized as follows: In section 2, we propose the model and
approach to extract coverage patterns. In section 3, we present experimental results. In
the last section, we present the conclusion and future work.

2 Model of Coverage Patterns

In this section, we ﬁrst explain the model of coverage patterns. Next, we discuss the
computational issues involved in extracting coverage patterns and explain how the no-
tion of sorted closure property can be exploited for efﬁcient extraction of coverage
patterns. Subsequently, we present the algorithm to extract coverage patterns.

2.1 Coverage Patterns

As already mentioned, we identify the issue of banner advertisement placement as one
of the potential application of coverage patterns. For a given e-commerce web site, the

Discovering Coverage Patterns for Banner Advertisement Placement

135

transactions generated from click stream dataset can be used to identify the sets of web
pages that cover a given percentage of visitors’ population. Such a knowledge could
be used to place the banner advertisements assuming similar visitors’ behaviour. The
related issues will be investigated as a part of future work.

To present the model of coverage patterns, we consider transactions generated from
click stream data of a web site. However, the model can be extended to any transactional
data set.
The basic terminology is as follows: Let W = {w1, w2,··· , wn} be a set of iden-
tiﬁers of web pages and D be a set of transactions, where each transaction T is a set
of web pages such that T ⊆ W . Associated with each transaction is a unique trans-
actional identiﬁer called T ID. Let T wi, wi ∈ W be the set of all T IDs in D that
contain the web page wi. A set of web pages X ⊆ W i.e., X = {wp,··· , wq, wr},
1 ≤ p ≤ q ≤ r ≤ n, is called the pattern. A pattern containing k number of web pages
is called a k-pattern. In other words, the length of k-pattern is k.

Example 1. Consider the transactional database shown in Table 1. It contains 10
transactions. The set of pages, W = {a, b, c, d, e, f}. The T IDs containing the web
page ‘a’ are 1, 2, 3, 4 and 10. Therefore, T a = {1, 2, 3, 4, 10}. The set of web pages
‘a’ and ‘b’ i.e., {a, b} is a pattern. Since there are two web pages in this pattern it is a
2-pattern.

Table 1. Transactional database

TID 1
10
Pages a, b, c a, c, e a, c, e a, c, d b, d, f b, d b, d b, e b, e a, b

2

3

4

5

6

7

8

9

The percentage of transactions in D that contain the web page wi ∈ W is known as the
“relative frequency of a web page wi ∈ W ” and denoted as RF (wi).

Deﬁnition 1. (Relative frequency of a web page wi ∈ W .) Let |T wi| indicates the
total number of transactions that contain wi. The relative frequency of wi is denoted as
RF (wi). That is, RF (wi) = |T wi|
|D| .
Note that from the advertisement point of view the pages that are visited by more num-
ber of users are interesting. We capture this aspect with the notion of frequent page.
The frequent web pages are web pages which have relative frequency no less than the
user-speciﬁed threshold value, called minimum relative frequency.
Deﬁnition 2. (Frequent web page.) A web page wi ∈ W is considered frequent if
RF (wi) ≥ minRF , where minRF is the user-speciﬁed minimum relative frequency
threshold.

Example 2. Continuing with the example, the relative frequency of ‘a’ i.e., RF (a) =
|T a|
|D| = 5
10 = 0.5. If the user-speciﬁed minRF = 0.5, then ‘a’ is called a frequent web
page because RF (a) ≥ minRF .

136

P.G. Srinivas et al.

Next, we capture the notion that given a set of web pages how many users visit at least
one web page in the set. It means that if we place an advertisement on all pages in the
set it will guarantee the delivery of advertisement to the users who visit atleast one page.
This aspect is captured through the notion of coverage set.
Deﬁnition 3. (Coverage set of a pattern X = {wp,··· , wq, wr}, 1 ≤ p ≤ q ≤ r ≤ n.)
The set of distinct T IDs containing at least one web page of X is called the coverage
set of pattern X and is denoted as CSet(X). Therefore, CSet(X) = T wp∪···∪T wq ∪
T wr .
A pattern will be interesting if its coverage set contains more than a threshold number
of transactions. This aspect is captured through the notion of coverage support.
Deﬁnition 4. (Coverage-support of a pattern X.) The ratio of size of coverage set of
X to the transactional database size is called the coverage-support of pattern X and is
denoted as CS(X).

CS(X) =

|CSet(X)|

|D|

.

(1)
Example 3. The set of web pages ‘a’ and ‘b’ i.e., {a, b} is a pattern. The set of tids con-
taining the web page ‘a’ i.e., T a = {1, 2, 3, 4, 10}. Similarly, T b = {1, 5, 6, 7, 8, 9, 10}.
The coverage set of {a, b} i.e., CSet({a, b}) = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10}. Therefore,
coverage support of {a, b} i.e., CS({a, b}) = |CSet({a,b})|
For a pattern X, CS(X) ∈ [0, 1]. If CS(X) = 0, no single web page of X has appeared
in the entire transactional database. If CS(X) = 1, every transaction in T contains at
least one web page wj ∈ X.

10 = 1.

= 10

|D|

It can be noted that once a pattern X has certain coverage-support, then adding other
web pages in particular web pages co-occurring with any of the web pages belonging
to X to that pattern may not increase the coverage support signiﬁcantly. From the ad-
vertisement point of view, such a pattern can be uninteresting to the advertiser. This is
because the same users visit the web pages as there is an overlap of coverage set of X
and coverage set of new single web page pattern.
Example 4. In the transactional database shown in Table 1, T {a} = {1, 2, 3, 4, 10}
and T {c} = {1, 2, 3, 4}. The coverage-support of {a, c} i.e., CS({a, c}) = 5
10 = 0.5.
If user-speciﬁed minCS = 0.5, then {a, c} is an interesting pattern. However, this
pattern is uninteresting as the pattern ‘c’ has not increased coverage-support of the
pattern ‘a’.
To capture this aspect, we introduce the notion overlap ratio of the pattern.
Deﬁnition 5. (Overlap ratio of a pattern.) Overlap ratio of a pattern X =
{wp,··· , wq, wr}, where 1 ≤ p ≤ q ≤ r ≤ n and |T wp| ≥ ··· ≥ |T wq| ≥ |T wr|, is
the ratio of the number of transactions common in X − {wr} and {wr} to the number
of transactions in wr. It is denoted as OR(X) and is measured as follows.

OR(X) =

|(T wp ∪ ··· ∪ T wq ) ∩ (T wr )|

|T wr|

(2)

Discovering Coverage Patterns for Banner Advertisement Placement

137
For a pattern X, OR(X) ∈ [0, 1]. If OR(X) = 0, there exists no common transactions
between X − {wr} and {wr}. If OR(X) = 1, wr has occurred in all the transactions
where at least one web page wj ∈ (X − {wr}) has occurred.
Example 5. Continuing with Example 3, the OR({a, b}) = |CSet(b)∩CSet(a)|
0.4.

|CSet(a)|

= 2

5 =

Note that a coverage pattern is interesting if it has high coverage support and low over-
lap ratio. As a result an advertisement is exposed to more number of users by reducing
repetitive display of the advertisement. The deﬁnition of coverage pattern is as follows.

Deﬁnition 6. (Coverage pattern X.) A pattern X is said to be a coverage pattern if
CS(X) ≥ minCS, OR(X) ≤ maxOR and RF (wi) ≥ minRF , ∀wi ∈ X. The
variables, minCS and maxOR represent user-speciﬁed minimum coverage support
and maximum overlap ratio, respectively. A coverage pattern X having CS(X) = a%
and OR(X) = b% is expressed as

X [CS = a%, OR = b%]

(3)

Example 6. If minRF = 0.4, minCS = 0.7 and maxOR = 0.5, then the pattern
{a, b} is a coverage pattern. It is because RF (a) ≥ minRF , RF (b) ≥ minRF ,
CS({a, b}) ≥ minCS and OR({a, b}) ≤ maxOR. This pattern is written as follows:

{a, b} [CS = 1 (= 100%), OR = 0.4 (= 40%)]

Problem statement: Given a transactional database D, set of web pages W , and user-
speciﬁed minimum relative frequency (minRF ), minimum coverage support (minCS)
and maximum overlap ratio (maxOR), discover complete set of coverage patterns such
that
i. If X is a coverage 1-pattern (i.e., k = 1), then RF (wi) ≥ minRF and RF (wi) ≥
ii. Otherwise (i.e., when k > 1), each coverage pattern X must have CS(X) ≥

minCS, ∀wi ∈ X.
minCS, OR(X) ≤ maxOR and RF (wi) ≥ minRF , ∀wi ∈ X.

2.2 Mining Coverage Patterns

A naive approach to ﬁnd the complete set of coverage patterns for a dataset consisting
of n web pages is to generate all possible (2n − 1) combinatorial patterns (CP) from n
web pages. Now, each pattern in CP is added to the coverage pattern set if it satisﬁes
minCS, minRF and maxOR constraints. The problem with this approach is, if n
is large the search space will be large leading to high computational cost. The search
space can be reduced if the coverage pattern satisﬁes downward closure property on
either coverage support or overlap ratio.

Our analysis on coverage patterns states that the measure coverage support does not
satisfy downward closure property. That is, although a pattern satisﬁes minCS, it is
not necessary that all its non-empty subsets will also satisfy minCS value.

P.G. Srinivas et al.

138
Example 7. Consider the patterns {a}, {e} and {a, e}. The coverage supports of these
patterns are 0.5, 0.4 and 0.7, respectively. If the user-speciﬁed minCS = 0.7, then
the pattern {a, e} satisﬁes minCS value. However, its non-empty subsets do not satisfy
minCS value.

The parameter overlap ratio also does not satisfy downward closure property if a pat-
tern is considered as an unordered set of web pages. However, this measure satisﬁes
downward closure property if a pattern is an ordered set, where web pages are sorted
in descending order of their frequencies. This property is known as the sorted closure
property [12].
Property 1. If X ⊂ Y , then CSet(X) ⊆ CSet(Y ).
Property 2. Sorted closure property: Let X = {wp,··· , wq, wr} be a pattern such
that RF (wp) ≥ ··· ≥ RF (wq) ≥ RF (wr) and 1 ≤ p ≤ q ≤ r ≤ n. If OR(X) ≤
maxOR, all its non-empty subsets containing wr and having size k ≥ 2 will also have
overlap ratio less than or equal to maxOR.

Rationale: Let wa, wb and wc be the web pages having RF (wa) ≥ RF (wb) ≥
RF (wc). If OR(wa ∪ wc) > maxOR, then OR({wa ∪ wb}∪ wc) > maxOR because
from P roperty 1

|CSet(wa) ∩ CSet(wc)|

|CSet(wc)|

≤ |CSet({wa ∪ wb}) ∩ CSet(wc)|

|CSet(wc)|

(4)

Deﬁnition 7. (Non-overlap pattern X.) A pattern X is said to be non-overlap if
OR(X) ≤ maxOR and RF (wi) ≥ minRF , ∀wi ∈ X.
Every coverage pattern is a non-overlap pattern, however it is not the same vice versa.
The sorted closure property of non-overlap patterns is used for minimizing the search
space while mining complete set of coverage patterns by designing an algorithm similar
to the Apriori algorithm [1]. The detailed algorithm for mining the complete coverage
patterns is given in next subsection.

2.3 Coverage Pattern Extraction Algorithm

We use the following notations. Let F be a set of frequent items, Ck be a set of can-
didate k-patterns, Lk be a set of coverage k-patterns and N Ok be a set of non-overlap
k-patterns. The proposed algorithm CMine employs a level-wise search to discover the
complete set of coverage patterns. In level-wise search, k-patterns are used to explore
(k + 1)-patterns. The proposed CMine algorithm is different from Apriori algorithm [1]
used for mining frequent patterns. The main reason is as follows: Frequent patterns sat-
isfy downward closure property. Therefore, Apriori algorithm uses frequent k-patterns
to explore (k + 1)-patterns. CMine cannot explore (k + 1)-patterns with coverage k-
patterns as coverage patterns no longer satisfy downward closure property.

Discovering Coverage Patterns for Banner Advertisement Placement

139

The detailed description of the algorithm is as follows: The algorithm CMine begins
with a scan of the database and discovers set of all frequent web pages (denoted as F )
and coverage 1-patterns (denoted as L1). Non-overlap 1-patterns (denoted as N O1) will
be the set of all frequent 1 web pages. Next, web pages in N O1 are sorted in descending
order of their frequencies. This is an exception from Apriori algorithm [1] that has to
be carried out in CMine algorithm to efﬁciently mine coverage patterns. Each web page
wi  N O1 is of the form < wi, T wi > where T wi denote set of transaction ids which
contain the web page wi. Using N O1 as a seed set, candidate patterns C2 are generated
by combining N O1 1 N O1. From C2, the patterns that satisfy minCS and maxOR
are generated as coverage 2-patterns, L2. Simultaneously, all candidate 2-patterns that
satisfy maxOR are generated as non-overlap 2-patterns N O2. Since overlap patterns
satisfy sorted closure property, C3 is generated by combining N O2 1 N O2. From
C3, L3 and N O3 are discovered. At each level ‘k’, a two-step process is followed,
consisting of join and prune actions [13].

1. The join step: To ﬁnd Lk, a set of candidate k-web page sets Ck is generated by
joining N Ok−1 with itself. Let l1 and l2 be web page sets in N Ok−1. Note that the
members of N Ok−1 are join-able if their ﬁrst (k − 2) web pages are in common.
2. The prune step: Ck is a superset of Lk, that is, its members may or may not be
coverage patterns, but all of the coverage k-web page sets are included in Ck. The
number of k-web page sets in Ck, however, can be huge, and so this could involve
heavy computation. To reduce the size of Ck, the Sorted closure property of non-
overlap patterns is used as follows. Any (k − 1)-web page set that is not satisfying
the overlap ratio cannot be a subset of a non-overlap k-web page set. Hence, if any
(k − 1)-ordered subset of a candidate k-web page set is not in N Ok−1, then the
candidate cannot be a non-overlap pattern either and so can be removed from Ck.
This pruning step is used to reduce the search space.

The above process is repeated until no new coverage pattern is found or no new candi-
date pattern can be generated.

The proposed algorithm uses bitwise operations to ﬁnd the complete set of coverage
patterns. So, a single scan of the database (to ﬁnd the bit strings for all single web
page sets) is sufﬁcient for the algorithm to ﬁnd the complete set of coverage patterns.
Generation of bit strings for larger web page sets and computation of CS, OR for a
web page set can be carried out by using simple bitwise AND and OR operations which
makes the algorithm computationally very fast.
We now explain the working of CMine algorithm using the transactional database,
T , shown in Table 1. There are 10 transactions in this database, that is, |T| = 10. Let
the user-speciﬁed minRF , minCS and maxOR be 0.4, 0.7 and 0.5, respectively. The
column titled Bitstring represents binary representation of coverage set of pattern i. For
example, the bit string corresponding to the pattern ”{b,a}” is ”1111111111”. This im-
plies that every transaction of T contains either b or a or both. For binary representation
of TID’s, union of coverage sets of two patterns is equal to boolean OR operation of cor-
responding bit strings. Similarly, intersection of coverage sets of two patterns is equal
to boolean AND operation of corresponding bit strings. We use Figure 1 to illustrate
the CMine algorithm for ﬁnding coverage patterns in T .

140

P.G. Srinivas et al.

Fig. 1. Working of CMine algorithm. The term ‘I’ is an acronym for item set.

i. The algorithm CMine scans all the transactions to generate bit string Bwi and rel-
. |Bwi| denotes
ative frequencies (RF ) of each web page wi  T . RF (wi) =
the number of 1’s in the bit string. Each web page, wi  T is a member of the set of
candidate 1-pattern, C1.

|Bwi|
|T|

ii. From C1, the set of coverage 1-patterns, L1, are discovered if their frequencies
are greater than or equal to minCS. Simultaneously, set of non overlap 1-patterns,
N O1, are discovered if candidate 1-patterns have relative support greater than or
equal to minRF and ﬁnally the web pages in N O1 are sorted in the decreasing
order of their frequencies.

iii. To discover the set of coverage 2-patterns, L2, the algorithm computes the join of

N O1 1 N O1 to generate a candidate set of 2-patterns, C2.

iv. Using Equation 1, coverage support of each candidate pattern is computed by
boolean OR operation. For example, CS(b,a) =
10 =1.0.
Next, overlap ratio for each candidate pattern is computed by boolean AND oper-
5 =0.4. The columns titled
ation. For example, OR(b,a) =
‘CS’ and ‘OR’ respectively show the coverage support and overlap ratio for the
patterns in C2.

|1111111111|

|1000000001|

|Bb∧Ba|

|Ba|

= 10

|Bb∨Ba|

|T|

=

10

=

5

= 2

v. The set of candidate 2-patterns that satisfy maxOR are discovered as non-overlap
2-patterns, denoted as N O2. Simultaneously, the set of candidate 2-patterns that
satisfy both minCS and maxOR are discovered as coverage 2-patterns.
vi. Next, C3 is generated by N O2 1 N O2. That is, C3 = N O2 1 N O2 = {{b, a, c},
{b, a, e},{b, c, e},{a, d, e},{c, d, e}}.

Discovering Coverage Patterns for Banner Advertisement Placement

141

Fig. 2. Number of patterns generated by CMine algorithm at different minCS and maxOR
values for BMS-POS, Mushroom and T40I10D100K datasets

vii. As in step v, we discover non-overlap 3-patterns, N O3, and coverage 3-patterns,
L3. The algorithm stops as no more candidate 4-patterns can be generated from
non-overlap 3-patterns.

3 Experimental Results

For experimental purposes we have chosen four real world datasets and one synthetic
dataset. The detailed description of the datasets are given below.

i. Kosarak dataset is a sparse dataset with 990,002 number of transactions containing

41,270 distinct items [14].

ii. MSNBC dataset contains data from Internet Information Server (IIS) logs for

msnbc.com and news-related portions of msn.com for the entire day of September,
28, 1999 [15]. Requests are at the level of page category. The number of categories
are 17 and the number of transactions are 989,818.

iii. Mushroom dataset is a dense dataset containing 8,124 transactions and 119 distinct

items [14].

iv. BMS-POS dataset contains click stream data of a dotcom company [14]. The dataset

contains 515,597 number of transactions and 1656 distinct items.

v. The synthetic dataset T40I10D100K is generated by the dataset generator [16]. The

dataset contains 100,000 transactions and 941 distinct items.

The CMine algorithm was written in Java and run with Windows XP on a 2.66 GHz
machine with 2GB memory.

142

P.G. Srinivas et al.

3.1 Coverage Pattern Generation

The Figure 2(a) shows the number of patterns generated (y-axis) for BMS-POS dataset
for different values of minCS (x-axis) while minRF and maxOR are ﬁxed at the val-
ues 0.01 and 0.7 respectively. It can be observed from the Figure 2(a) that the number
of coverage patterns decrease with the increase in minCS, and more importantly, the
number of patterns generated are very few when minCS is greater than 0.5. In general,
for a given maxOR, coverage support of coverage patterns increases with the length of
the pattern due to the addition of new frequent items. The length of a coverage pat-
tern increases with increasing levels of iteration for generation of candidate itemsets in
CMine algorithm. However for higher levels of iteration due to overlap ratio constraint,
the number of non-overlap patterns generated is decreased. Therefore, the number of
coverage patterns generated having higher coverage support decreases with increasing
minCS. The relation between the number of coverage patterns generated and minCS
which was apparent in Figure 2(a) is also observed for Figure 2(b) and 2(c). It can
also be observed form Figure 2(c) that no coverage patterns are generated for minCS =
0.35. This implies, that maximum threshold of minCS for minRF = 0.03, maxOR = 0.8
for T40I10D100k dataset is 0.35 since no coverage patterns are generated for minCS
greater than 0.35.

The Figure 2(d) shows number of patterns generated (y-axis) for BMS-POS dataset
for different values of maxOR (x-axis) while minRF and minCS are ﬁxed at the values
0.01 and 0.40 respectively. It can be observed from Figure 2(d) that the gradient of the
curve increases linearly from maxOR = 0.1 to 0.4. For maxOR = 0.4, the gradient of
the curve changes and again increases linearly from maxOR = 0.4 to 0.7. However, the
gradient of the curve from maxOR = 0.4 to 0.7 is greater than the curve for maxOR =
0.1 to 0.4. This implies that the number of patterns generated increases with increasing
maxOR value. As the maxOR value is increased, the number of items of the candidate
sets Ci (i =2,3,4...k-1) are increased which will result in increase of number of coverage
patterns generated. Similar to the Figure 2(d), the phenomenon of increase in generation
of coverage patterns with respect to maxOR value is also observed in Figure 2(e) and
2(f). It can be observed form Figure 2(f) that the number of patterns generated become
constant for maxOR ≥ 0.30. This implies that no new nonoverlap patterns are generated
for higher levels of iteration for generation of candidate item sets in CMine algorithm
such that coverage patterns extracted from non-overlap patterns have coverage support
greater than 0.225.

3.2 Scalability Experiment

We used Kosarak dataset to conduct scalability experiment. We divided the dataset into
ﬁve portions of 0.2 million transactions in each part. We investigated the performance
of CMine Algorithm after cumulatively adding each portion with previous parts and
extracting coverage patterns each time. The values of minRF, minCS and maxOR are
ﬁxed at 0.01, 0.1 and 0.5 respectively. The experimental results are shown in Figure 3.
It is clear from the Figure 3 that as the database size increases, the execution time also
increased linearly.

Discovering Coverage Patterns for Banner Advertisement Placement

143

Fig. 3. Scalability of CMine algorithm

3.3 Usefulness of Coverage Patterns

Table 2 shows some coverage patterns generated by Cmine algorithm for minCS = 0.4
and maxOR = 0.5 and minRF = 0.02 for MSNBC dataset. The names of web page
categories involved in MSNBC are “frontpage”, “news”, “tech”, “local”, “opinion”,
“on-air”, “misc”, “weather”, “health”, “living”, “business”, “sports”, “summary”, “bbs”
(bulletin board service), “travel”, “msn-news”, and “msn-sports”. From Table 2, it can
be observed that any of the six coverage patterns ensure about 40 percent coverage. The
result indicates how the proposed approach provides ﬂexibility to the publisher to meet
the demands of multiple advertisers by considering different sets of web pages.

Table 2. Sample coverage 3-patterns extracted from MSNBC dataset [15]

S.No Coverage Pattern
1
2
3

CS S.No Coverage Pattern
{local, misc, f rontpage}
0.42 4
{news, health, f rontpage} 0.43 5
{tech, opinion, f rontpage} 0.41 6

CS
{on-air, news, misc}
0.40
{tech, weather, on-air} 0.41
{sports, misc, opinion} 0.43

4 Conclusions and Future Work

In this paper we have proposed a new data mining pattern called “coverage pattern” and
proposed an efﬁcient methodology to extract the same from transactional databases. We
have explained how coverage patterns could be useful by considering the issue of banner
advertisement placement. By conducting experiments on different kinds of datasets, we
have shown that the proposed model and methodology can effectively discover coverage
patterns.

As a part of the future work, we are going to investigate how both frequent and cov-
erage pattern knowledge can be used for efﬁcient banner advertisement placement. In
addition we are planning to investigate how the content of the web page and search
query can be exploited to explore content speciﬁc coverage patterns. We are also ex-
ploring how the notion of coverage patterns can be extended to other domains like
bio-informatics for extracting potential knowledge patterns.

144

P.G. Srinivas et al.

References

1. Agrawal, R., Srikant, R.: Fast algorithms for mining association rules in large databases. In:
VLDB 1994: Proceedings of the 20th International Conference on Very Large Data Bases,
pp. 487–499. Morgan Kaufmann Publishers Inc. (1994)

2. Chvatal, V.: A greedy heuristic for the set-covering problem. Mathematics of Operations

Research, 233–235 (1979)

3. Garey, M.R., Johnson, D.S., Stockmeyer, L.: Some simpliﬁed np-complete problems. In:
Proceedings of the Sixth Annual ACM Symposium on Theory of Computing, STOC 1974,
pp. 47–63. ACM (1974)

4. Venetis, P., Koutrika, G., Garcia-Molina, H.: On the selection of tags for tag clouds. In:
Proceedings of the Fourth ACM International Conference on Web Search and Data Mining,
WSDM 2011, pp. 835–844. ACM (2011)

5. Bonchi, F., Castillo, C., Donato, D., Gionis, A.: Topical query decomposition. In: Proceed-
ings of the 14th ACM SIGKDD International Conference on Knowledge Discovery and Data
Mining, KDD 2008, pp. 52–60. ACM (2008)

6. Amiri, A., Menon, S.: Efﬁcient scheduling of internet banner advertisements. ACM Trans.

Internet Technol. 3(4), 334–346 (2003)

7. Ghosh, A., Rubinstein, B.I., Vassilvitskii, S., Zinkevich, M.: Adaptive bidding for display
advertising. In: WWW 2009: Proceedings of the 18th International Conference on World
Wide Web, pp. 251–260. ACM (2009)

8. Wu, X., Bolivar, A.: Keyword extraction for contextual advertisement. In: WWW 2008: Pro-
ceeding of the 17th International Conference on World Wide Web, pp. 1195–1196. ACM
(2008)

9. Chakrabarti, D., Agarwal, D., Josifovski, V.: Contextual advertising by combining relevance
with click feedback. In: WWW 2008: Proceeding of the 17th International Conference on
World Wide Web, pp. 417–426. ACM (2008)

10. Alaei, S., Arcaute, E., Khuller, S., Ma, W., Malekian, A., Tomlin, J.: Online allocation of dis-
play advertisements subject to advanced sales contracts. In: ADKDD 2009: Proceedings of
the Third International Workshop on Data Mining and Audience Intelligence for Advertising,
pp. 69–77. ACM (2009)

11. Sripada, B., Reddy, P.K., Kiran, R.U.: Coverage patterns for efﬁcient banner advertisement

placement. In: WWW (Companion Volume), pp. 131–132 (2011)

12. Liu, B., Hsu, W., Ma, Y.: Mining association rules with multiple minimum supports. In:
KDD 1999: Proceedings of the Fifth ACM SIGKDD International Conference on Knowledge
Discovery and Data Mining, pp. 337–341. ACM (1999)

13. Han, J., Kamber, M.: Data mining: concepts and techniques. Morgan Kaufmann (2006)
14. Fimi: Frequent itemset mining implementations repository (July 2010),

http://fimi.cs.helsinki.fi/

15. Frank, A., Asuncion, A.: UCI machine learning repository (2010),

http://archive.ics.uci.edu/ml

16. Agrawal, R., Imieli´nski, T., Swami, A.: Mining association rules between sets of items in
large databases. In: Proceedings of the 1993 ACM SIGMOD International Conference on
Management of Data, SIGMOD 1993, pp. 207–216. ACM (1993)


