Spread of Information in a Social Network

Using Inﬂuential Nodes

Arpan Chaudhury, Partha Basuchowdhuri(cid:2), and Subhashis Majumder

Heritage Institute of Technology,

Department of Computer Science and Engineering,

Chowbaga Road, Anandapur, Kolkata 700107, WB, India

{parthabasu.chowdhuri,subhashis.majumder}@heritageit.edu

arpanchaudhury@gmail.com,

Abstract. Viral marketing works with a social network as its backbone,
where social interactions help spreading a message from one person to
another. In social networks, a node with a higher degree can reach larger
number of nodes in a single hop, and hence can be considered to be
more inﬂuential than a node with lesser degree. For viral marketing with
limited resources, initially the seller can focus on marketing the product
to a certain inﬂuential group of individuals, here mentioned as core. If k
persons are targeted for initial marketing, then the objective is to ﬁnd
the initial set of k active nodes, which will facilitate the spread most
eﬃciently. We did a degree based scaling in graphs for making the edge
weights suitable for degree based spreading. Then we detect the core
from the maximum spanning tree (MST) of the graph by ﬁnding the top
k inﬂuential nodes and the paths in MST that joins them. The paths
within the core depict the key interaction sequences that will trigger the
spread within the network. Experimental results show that the set of k
inﬂuential nodes found by our core ﬁnding method spreads information
faster than the greedy k-center method for the same k value.

Keywords: spread of information, social network analysis, maximum
spanning tree, k -center problem.

1

Introduction

1.1 Motivation

A social network is a graph that represents relationships and interactions be-
tween a group of individuals. It acts as a medium through which information,
innovations and inﬂuence spread among its members. An idea forked up from a
community or an individual can either disappear with passage of time or inﬂu-
ence a signiﬁcant number of members in the network. For industry-based market
analysts, the most interesting feature about a social network is that when people
start recommending a new product to their friends, the product gains popularity

(cid:2) Corresponding author.

P.-N. Tan et al. (Eds.): PAKDD 2012, Part II, LNAI 7302, pp. 121–132, 2012.
c(cid:2) Springer-Verlag Berlin Heidelberg 2012

122

A. Chaudhury, P. Basuchowdhuri, and S. Majumder

very quickly. The strategy of marketing a product by targeting a small number
of individuals, which trigger brand awareness [1] among all the members of the
network through self-replicating viral diﬀusion of messages, is known as viral
marketing [2,3,4]. Viral marketing can be much more cost eﬀective than tradi-
tional methods since it employs the customers themselves to accomplish most
of the promotional eﬀort. Further, as people trust recommendations from their
friends more than the manufacturing company itself, viral marketing pays oﬀ
handsomely. The only challenge we face while utilizing word-of-mouth [5,6] ad-
vertisement is that we need to pick out a set of customers that maximizes the
information ﬂow within a network. For example, suppose we have a social net-
work where the extent to which individuals inﬂuence one another is known and
we want to endorse a new product in the network. We have a limited budget
which is suﬃcient to convince at most k members to adopt the product. These
k members of the network having the information are referred to as the initial
active node set S and the rest of the nodes, who do not have the information
yet, are called inactive nodes. The inﬂuence spreads from one node to another
with time and the active node set grows (similarly inactive node set decreases)
until further spread is not possible.

The problem mentioned above is known as the inﬂuence maximization prob-
lem, which was ﬁrst introduced by Kempe et al. [7,8] as a discrete optimization
problem. In this paper, we put forward an eﬃcient heuristic which improves
existing algorithms for inﬂuence maximization from two complementary direc-
tions. One is to propose a new heuristic that spreads the inﬂuence to maximum
number of nodes within minimum amount of time and the second is to improve
the greedy algorithm to further reduce its run-time. In this section we provide a
brief introduction to the problem that we have solved and we also discuss some
of the important works related to spread of information that is relevant to our
work. In the next section, we have discussed our approach for an eﬃcient spread
of information in a network and describe our algorithm elaborately. In the third
section, we have discussed about the experimental results describing the per-
formance of our algorithm compared to pre-existing algorithms, we conclude by
highlighting our contributions in the section thereafter.

1.2 Literature Review

It is a widely accepted fact that with proper choice of inﬂuential mediators [9] in-
formation can circulate within the network in minimum time. The optimization
problem of ﬁnding such inﬂuential nodes in a social network was ﬁrst introduced
by Domingos and Richardson [2,3]. Motivated by its application in viral market-
ing, Kempe et al. [7,8] studied the inﬂuence maximization problem, considering
two fundamental propagation models - linear threshold model (LT) and inde-
pendent cascade model (IC). They showed that inﬂuence maximization problem
is NP-hard and a simple greedy algorithm of successively selecting inﬂuential
mediators approximates the optimum solution within a factor of (1 − 1
e ).

Later, Even-Dar and Shapira extended the study of spread maximization set
problem where the underlying social network behaves like the voter model. In

Spread of Information in a Social Network Using Inﬂuential Nodes

123

their paper [10], they proposed an algorithm that gives an exact solution to the
abovementioned problem, when all nodes have the same cost (cost of introducing
a person to a new technology/product), and also provided a fully polynomial time
approximation scheme for the more general case in which diﬀerent nodes may
have diﬀerent costs. Kimura and Saito proposed shortest path based inﬂuence
cascade models [11] and provided eﬃcient algorithms to compute spread of in-
ﬂuence under these models. Recently, Kimura et al. [12] proposed an alternative
method for ﬁnding a good approximate solution to the inﬂuence maximization
problem on the basis of bond percolation and graph theory. Using large-scale
real networks including blog networks they experimentally demonstrated that
the method proposed by them is much more eﬃcient than the conventional
methods.

Another well-studied problem that we refer to in this paper is the k -center
problem [13,14,15,16]. It is deﬁned as a facility location problem where the objec-
tive is to ﬁnd appropriate locations for the facilities such that maximum distance
from any client to its nearest facility is minimized. A close observation on k -
center problem shows that it is very much similar to the inﬂuence maximization
problem, as in both the cases we try to ﬁnd a set of nodes which facilitate the
service or information spread. In our paper, we show that selecting inﬂuentials
based on their degrees can produce even better result than existing algorithms
and that too in much less time. Knowledge of the related works mentioned in this
section gives us an overview of spread of information. However, the algorithm
that we have presented in this paper, approaches the problem diﬀerently from
the existing models.

2 Maximizing Inﬂuence Spread

2.1 Problem Deﬁnition

Assuming each member of a social graph spreads information to its neighbors
with probability 1, we aim at solving the following problem,

Problem 1: Given a social network graph G = (V, E) with a weight vector
W indicating the extent to which individuals inﬂuence one another, ﬁnd a set S
of inﬂuential mediators of cardinality at most k, such that the objective function
is deﬁned as,

and is minimized where,

r = max
v∈V

d(v, S)

d(v, S) =

k

min
i=1

d(v, si)

and d(a, b) is the shortest distance between nodes a and b.

(1)

(2)

2.2 Our Approach

In this paper, our primary objective is to ﬁnd an initial set of active nodes
in a social graph which maximizes propagation of a new innovation within the

124

A. Chaudhury, P. Basuchowdhuri, and S. Majumder

Fig. 1. Correlation between the degree of nodes in a network and the time it takes
to spread the information throughout the network (AS relationship data, with 6474
nodes and 13895 edges), if the spread is simulated assuming that initial active node
set consists of that node only

network in minimum time. For example, adoption of new drug within the med-
ical profession, use of cell phone among school students, etc. For a social graph
G = (V, E), we consider the problem of ﬁnding a subgraph Gc = (Vc, Ec), where
Vc ⊆ V and Ec ⊆ E, through which maximum information ﬂow is likely to
happen. We deﬁne this region as core of the graph. Initially we scale the weight
of an edge e ∈ E, by the average of the degrees of the two nodes connected to
e. Based on the notion that greater the degree of a node, higher the inﬂuence
it imparts on the social network due to its ability to reach greater number of
nodes (refer to Fig 1). It is desirable to use the edges that are incident on nodes
having higher degree. Hence we use this average degree value as a multiplicative
factor to the existing edge weights. In case of unweighted graphs, initial edge
weights for all edges are taken to be 1 and for weighted graphs, some existing
edge weights are assumed to be provided. These initial edge weights have been
denoted as weightold(eij) in equation 3. The basic idea is to include high-degree
nodes within the initial active node set, so that reachability to other nodes within
one hop is maximized from the very ﬁrst step of the spread. Hence, it is also
important to track the interactions or the edges between nodes with high inﬂu-
ence. To track such edges, we deﬁne an objective function to scale the weight of
each edge of the graph with the average degree of the nodes connected by that
edge.
Deﬁnition 1: Given a social network graph G = (V, E), where ∀eij ∈ E,
eij denotes an unordered pair of nodes (vi, vj), and vi, vj ∈ V . We denote the
existing weight of eij by weightold(eij), and then we deﬁne the revised weight of
an edge to be

weight(eij) = weightold(eij) × degree(vi) + degree(vj)

2

(3)

Spread of Information in a Social Network Using Inﬂuential Nodes

125

After scaling the edge weights of the graph, we aim to ﬁnd the maximum cost
spanning tree of the weighted graph. This problem is same as ﬁnding a minimum
cost spanning tree of an isomorphic graph Giso that has a one to one mapping for
all the nodes and edges in G, where the edge weights are of same absolute value
but with negative signs. Prim’s algorithm for ﬁnding minimum cost spanning
tree is quite popular and is used on Giso. This minimum cost spanning tree
generated from Giso gives us the tree, which can be re-mapped to the labels in
G and hence the maximum cost spanning tree of G can be found.

The above representation gives us edge weights based on the inﬂuence of the
nodes. The function used for deﬁning weights of the edges was motivated by the
fact that ﬁnding a maximum spanning tree from the weighted graph would give
us the path by which a node is connected to its neighbor with highest degree.
Hence the maximum spanning tree would generate the path that is most likely
to be followed if the inﬂuence starts to spread from the nodes with highest degree.

Deﬁnition 2: The maximum spanning tree of a graph G is a connected subgraph
GT = (V, ET ), where ET ⊆ E and ∀eTi ∈ ET ,
|Ek|(cid:2)

|ET |(cid:2)

weight(eTi) ≥

weight(eki)

(4)

i=1

i=1

for any Ek, where Ek ⊆ E and ∀eki ∈ Ek, forming a spanning tree. The
edge weights here essentially denote the strength of interactions between adja-
cent nodes. So, we essentially scale the existing weight based on the topological
structure of the graph and include the signiﬁcance of the degree of vertices
within the edge weights. Attributed graph may have diﬀerent edge weights for
the same edge based on diﬀerent features. As for example, in a zonal call graph
of a cellular service provider, interactions between any two users can be judged
by the number of calls or the number of SMSs or some other mode of interac-
tions between them. Strength of such interactions can be judged by the number
of calls/week or number of SMSs/week basis. As long as a single composite edge
weight based on some objective function can be deduced from the edge weights
for each feature, we can also use this method for attributed graphs. However,
the ways of ﬁnding such composite edge weights, remains out of the scope of this
paper. If the edge weights are only determined by some apriori information, the
eﬀects of the graph topological structure can be ignored. Hence, in order to take
into account both the externally collected information as well as the knowledge
of the graph topological structure, we scale the initial edge weights to convert
them into new edge weights.

It should be noted that in case of disconnected graphs, if we try to get the
maximum spanning tree, not all the nodes will be included in the tree. So,
it would only be meaningful to pick the largest connected component of the
original graph as the graph, where the spread of information is observed and
ﬁnd the maximum spanning tree from it. Here, G is considered as the largest

126

A. Chaudhury, P. Basuchowdhuri, and S. Majumder

connected component of the original graph. Usually for social graphs, largest
connected components consist of around 95% (or more) of the nodes in the graph.
After selecting the largest connected component and extracting the maximum
spanning tree from it, we will have a unique path between any pair of nodes.

The maximum spanning tree, at this stage, consists of a subset of the edge set
E using which maximum amount of information ﬂows, but it still consists of all
the nodes as in V. For social graphs with fairly large number of actors(nodes),
inﬂuencing all the nodes immediately requires huge marketing expenses. So, our
objective is to select a few nodes with topmost degrees of the network, target
to market the product to those inﬂuential nodes so that they could spread the
inﬂuence in as less number of steps as possible. Finding the core of the graph
provides us with a trade-oﬀ between the budget and the time of spread. It does
not require the product to be marketed to everyone i.e, the nodes with lower
inﬂuence can be ignored. Hence, this model can work with a restricted budget.
But at the same time instead of inﬂuencing everyone in one step, it takes more
number of steps to reach all the nodes in the graph. The number of steps to
reach all or the majority of the nodes needs to be optimized by suitably choosing
the top k inﬂuential individuals. We follow some rudimentary graph coarsening
techniques to reduce the number of nodes so that we can follow the behavior
of the cores with various inﬂuence limits and become aware of their structures.
In order to coarsen the graph, we pick a certain degree threshold based on the
point where the degree distribution plot of the nodes in V has the least slope.
If the degree threshold is denoted by dth then the ﬁnal graph that represents
a core for the threshold dth is denoted by Gx = (Vx, Ex) where ∀vxi ∈ Vx,
degree(vxi) ≥ dth. Higher the value of dth, lower will be the cardinality of Vx.
In some cases, where coarsening the graph results in formation of a discon-
nected core, we introduce bridge nodes to join the components. Addition of
bridge nodes in inﬂuential node set enhances the chance of knowledge propaga-
tion between inﬂuentials and hence diﬀerent communities and thereby increases
the spread within the network [17]. Inﬂuential nodes may exist in disjoint clus-
ters in diﬀerent parts of the network. In that case, these bridge nodes work as
brokers of information from one of those clusters to another. For example, in
ancient or medieval age epidemic break-outs stayed within a geographic location
as communication between geographic regions was restricted, therefore restrict-
ing the brokers. But recently, during spread of swine ﬂu, which generated from
Mexico, some individuals (here brokers) helped its spread to even geographically
distant locations like eastern Asia. Intuitively, these brokers should have higher
edge betweenness values than other nodes in the network.

Note that, in this model we are assuming that a node, who gets activated at
time-stamp t, always transmits the information to its neighbors and the inactive
neighbors accept the information to become activated at time-stamp t+1. If ac-
ceptance of information by the neighbors becomes probabilistic, then the model
becomes probabilistic too. We plan to follow-up this work with a probabilistic
model of inﬂuence spread using the core as a seed for the spread.

Spread of Information in a Social Network Using Inﬂuential Nodes

127

2.3 Detecting the core

In this section, we explain the algorithm for ﬁnding the core, as deﬁned in
the previous section. Given the graph G and modiﬁed weight vector W we ﬁnd
the core Gc using this algorithm. In line 1, we use Prim’s algorithm to ﬁnd the
maximum spanning tree and store it as GT . The vertex and edge set of Gc are
initialized in line 3. In lines 4-13, we get the nodes with degree value higher than
degree threshold(dth) and connect the maximum spanning tree edges between

Algorithm 1. Detecting the core of a graph
Input : G(V ,E) the social network, weight(eij) ∈ W,∀eij ∈ E
Output: The core Gc = (Vc, Ec)

algorithm

1 GT (V, ET ) ← M ST P rim(G, weightij)
2 //M ST P rim(G, weightij) ﬁnds the maximum spanning tree of G using Prim’s
3 Vc ← ∅, Ec ← ∅
4 for each vertex v ∈ V do
if degree(v) ≥ dth then
then Vc ← Vc ∪ {v}

5

6

7

end

8 end
9 for each vertex eij ∈ ET do
then Ec ← Ec ∪ {eij}

if u, v ∈ Vc then

10

11

12

end

13 end
14 // In MST, path between any pair of nodes vi, vj gives us a tree, deﬁned as
Gpath(i,j) = (Vpath(i,j), Epath(i,j))
15 Gcc ← DepthF irstSearch(Gc)
16 // If Gc is disconnected, let Gcc = {Gcc1 ∪ Gcc2 ∪ Gcc3 ∪ ... ∪ Gccp}, where
17 // Given i, j, where i < j, vi ∈ Vcci, vj ∈ Vccj, Gcci, Gccj ∈ Gcc
18 repeat
19

foreach pair Gcci, Gccj ∈ Gcc do

if ∃k, Vcck ⊆ Vcc and ∃vl (cid:10) vl ∈ Vcck, Vpath(i,j), vl /∈ Vcci, Vccj then

Gcci = (Vcci, Ecci)

Vcci ← Vcci ∪ Vccj ∪ Vpath(i,j) ∪ Vcck1 ∪ Vcck2 ∪ ... ∪ Vcckr
Ecci ← Ecci ∪ Eccj ∪ Epath(i,j) ∪ Ecck1 ∪ Ecck2 ∪ ... ∪ Ecckr
Vcc ← Vcc − Vccj − Vcck1 − Vcck2 − ... − Vcckr
Ecc ← Ecc − Eccj − Ecck1 − Ecck2 − ... − Ecckr
Vcci ← Vcci ∪ Vccj ∪ Vpath(i,j)
Ecci ← Ecci ∪ Eccj ∪ Epath(i,j)
Vcc ← Vcc − Vccj
Ecc ← Ecc − Eccj

else

end

20

21

22

23

24

25

26

27

28

29

30

end

31
32 until Gcc consists of only Gcc1;

128

A. Chaudhury, P. Basuchowdhuri, and S. Majumder

them. In this way, we get the inﬂuential nodes but the broker nodes are yet to be
accounted for. Also, such that the core at this stage may be disconnected. So we
run depth ﬁrst search (DFS) on Gc and store the components in Gcc. In essence,
Gc and Gcc are same. If Gc is disconnected, then Gcc would be union of multiple
disjoint graph components. In lines 18-32, we keep merging the components until
one single connected component is produced. In this process, for all pair of com-
ponents we select any node from each of them and try to ﬁnd the path between
them from ET . While adding, any node external to Vc might be added. Note
that the path between the two components may go through other components.
In those cases, all these components are merged into one. The process contin-
ues until Gc becomes one connected component. Due to the use of maximum
spanning tree for its generation, the ﬁnal core turns out to be a tree (refer to
Fig 2 and Fig 3). The run-time of the algorithm is dominated by the step where
Prim’s algorithm (using binary heap) is being called i.e. O(|E|log|V |).

(a) Dolphin
network
with 62 vertices and 159
edges

(b) Maximum spanning
tree of Dolphin network

(c) Core of Dol-
phin
network,
with k = 7

Fig. 2. Diagrams of the original dolphin interaction network, its maximum spanning
tree and core with k =7. The coloring of nodes depicts communities within the network
and its purpose is to generate a better visualization.

3 Experimental Results

We have tested the quality of inﬂuence maximization set generated by our
method on a number of social networks which have been studied by several
authors [18,17,19]. We executed our algorithm for core ﬁnding and spread of
information on a desktop PC with 2.0 GHz Intel core duo processor, 3 GB RAM
and LINUX Ubuntu 10.10 OS. We also compared the accuracy of our heuristic
with a popular spread maximization method. For graph visualization we used
Gephi [20], an open source software for exploring and manipulating networks.
All the programs developed for experiment purpose, have been written in C++
and was compiled with GNU g++ 4.6.0 compiler.

Spread of Information in a Social Network Using Inﬂuential Nodes

129

(a) AS relationship net-
work with 6474 nodes
and 13895 edges

(b) Maximum spanning
tree of AS relationship
network

(c) Core of AS
relationship net-
work, with k = 18

Fig. 3. Diagrams of the smaller AS relationship network, its maximum spanning tree
and core with k =18 (dth=50). The coloring of nodes depicts communities within the
network and its purpose is to generate a better visualization.

Table 1. Core ﬁnding method performs better than greedy k -center overall. Higher
the number of k, better the performance of core ﬁnding method over k -center method.

Data

Number of k Hops to spread information
to 99% of the network nodes
greedy k -center core ﬁnding

Zachary’s Karate Club
Dolphin Network
ArXiv GrQc collaboration

AS relationship network (small)

AS relationship network (large)

3
7
9
6
18
10
3
30
12
6

2
4
7
7
4
4
4
4
4
4

2
3
7
7
3
3
4
3
4
4

We have performed the experiments on a total of ﬁve diﬀerent social network
datasets of diﬀerent size. The ﬁrst one, is Zachary’s karate club data, a social
network of friendships between 34 members of a karate club at a US university
in the 1970s [18]. The second one is an undirected social network of frequent
associations between 62 dolphins in a community living oﬀ a coastal region of
New Zealand. The third dataset, GR-QC (General Relativity and Quantum Cos-
mology) collaboration network, is from the e-print arXiv and covers co-author
relationships between scientists, who submitted their papers to the General Rel-
ativity and Quantum Cosmology category between 1993 to 2003. It consists
of 5242 nodes and 28980 edges. The other two datasets are, AS-relationship

130

A. Chaudhury, P. Basuchowdhuri, and S. Majumder

(a) Spread using k -center

(b) Spread using core

Fig. 4. Visual representation of the spread of information in the dolphin interaction
network. Initial active node set is denoted by blue colored nodes. The nodes getting the
information at ﬁrst hop are colored green/cyan, the nodes at second hop are colored
yellow, the nodes at third hop are colored pink and the nodes getting the information
at the fourth and ﬁnal step are colored white.

datasets from CAIDA website [19]. AS-relationships are important for routing
policies and has implications on network robustness, traﬃc engineering, macro-
scopic topology measurement strategies. We use two AS-relationship datasets
of diﬀerent size, to observe how our algorithm performs on network of similar
structure but of diﬀerent size. One of these two datasets has 6474 nodes and
13895 edges and the other has 16301 nodes and 32955 edges.

We have compared our method with k -center problem, which is also a facility
location problem and distributes the facilities within the network in such a way
so that the maximum distance from all the nodes to its nearest facility is min-
imized. This is essentially another way to model the spread where the facility
locations could be selected for initiating the spread. For all the instances of our
experiments, we have seen that the core ﬁnding method works faster or at least
as fast as the greedy solution for the k -center problem. In core ﬁnding, value
of k is determined by dth. From Table 1, it seems that with higher value of k,
core ﬁnding performs better than the greedy solution for the k -center problem.
Comparative performance between these two methods for some k and dth com-
binations using all ﬁve datasets have been shown in Table 1, Fig 4 and Fig 5. An
important observation from the experimental results is that, even if we increase
the value of k, number of steps to reach the information to 99% of the nodes
in the network does not necessarily reduce. Say, due to budget constraints, we
want to choose k to be 7. Based on input value of k, say, by using the algorithm,
we get the number of hops to reach every node in a network from its core to be
4. From another observation, we may also get to see that in that same network

Spread of Information in a Social Network Using Inﬂuential Nodes

131

(a) Rate of spread in ArXiv GrQc
collaboration network

(b) Rate of spread in AS relation-
ship network (large)

Fig. 5. Comparative study between the rates of spread of information using k-center
method and core ﬁnding method, in CA-GrQc and AS-relationship(large) datasets

we can achieve the spread to all nodes with 4 hops for k =5 too. In that case, we
need to ﬁnd the lowest value of k for which the number of hops still remain the
same as in case of the input k value. In such a situation, remaining within the
budget constraints, no faster spread will be possible but it will be possible that
not all the budget will be used up for initial marketing or creating the initial
active set of nodes. Hence, a lower number of nodes may also be able to spread
the information in same time. We want to extend our work by eﬃciently ﬁnding
the lowest k values for all set of hops.

4 Conclusion

In this paper, we have presented an eﬃcient method for spread of information by
selecting the inﬂuential nodes based on degree. We have proposed a technique
of scaling existing edge weights based on the degree of the two nodes on which
the edge is incident. Using the new scaled edge weights, we have proposed a
method to ﬁnd an important set of nodes from the network and have named it
as core. We have selected this core as the seed or the initial set of active nodes
for the spread of information and have shown that the spread using the core
works faster than greedy k -center method.

References

1. Kiss, C., Bichler, M.: Identiﬁcation of inﬂuencers - measuring inﬂuence in customer

networks. Decision Support Systems 46, 233–253 (2008)

2. Domingos, P., Richardson, M.: Mining the network value of customers. In: KDD,

pp. 57–66 (2001)

3. Richardson, M., Domingos, P.: Mining knowledge-sharing sites for viral marketing.

In: KDD, pp. 61–70 (2002)

132

A. Chaudhury, P. Basuchowdhuri, and S. Majumder

4. Leskovec, J., Adamic, L.A., Huberman, B.A.: The dynamics of viral marketing.

TWEB 1(1) (2007)

5. Goldenberg, J., Libai, B., Muller, E.: Talk of the network: A complex systems look
at the underlying process of word-of-mouth. Marketing Letters 12, 211–223 (2001)
6. Goldenberg, J., Libai, B., Muller, E.: Using complex systems analysis to ad-
vance marketing theory development: Modeling heterogeneity eﬀects on new prod-
uct growth through stochastic cellular automata. Academy of Marketing Science
Review, 118 (2001)

7. Kempe, D., Kleinberg, J.M., Tardos, ´E.: Maximizing the spread of inﬂuence

through a social network. In: KDD, pp. 137–146 (2003)

8. Kempe, D., Kleinberg, J.M., Tardos, ´E.: Inﬂuential Nodes in a Diﬀusion Model
for Social Networks. In: Caires, L., Italiano, G.F., Monteiro, L., Palamidessi, C.,
Yung, M. (eds.) ICALP 2005. LNCS, vol. 3580, pp. 1127–1138. Springer, Heidelberg
(2005)

9. Li, C.-T., Lin, S.-D., Shan, M.-K.: Finding inﬂuential mediators in social networks.

In: WWW (Companion Volume), pp. 75–76 (2011)

10. Even-Dar, E., Shapira, A.: A Note on Maximizing the Spread of Inﬂuence in Social
Networks. In: Deng, X., Graham, F.C. (eds.) WINE 2007. LNCS, vol. 4858, pp.
281–286. Springer, Heidelberg (2007)

11. Kimura, M., Saito, K.: Tractable Models for Information Diﬀusion in Social Net-
works. In: F¨urnkranz, J., Scheﬀer, T., Spiliopoulou, M. (eds.) PKDD 2006. LNCS
(LNAI), vol. 4213, pp. 259–271. Springer, Heidelberg (2006)

12. Kimura, M., Saito, K., Nakano, R., Motoda, H.: Extracting inﬂuential nodes on
a social network for information diﬀusion. Data Min. Knowl. Discov. 20, 70–97
(2010)

13. Hochbaum, D.S., Shmoys, D.B.: A best possible heuristic for the k-center problem.

Mathematics of Operations Research 10, 180–184 (1985)

14. Gonzalez, T.F.: Clustering to minimize the maximum intercluster distance. Theor.

Comput. Sci. 38, 293–306 (1985)

15. Mihelic, J., Robic, B.: Solving the k-center problem eﬃciently with a dominating

set algorithm. CIT 13, 225–234 (2005)

16. Berger-Wolf, T.Y., Hart, W.E., Saia, J.: Discrete sensor placement problems in dis-
tribution networks. Mathematical and Computer Modelling 42, 1385–1396 (2005)
17. Lusseau, D., Newman, M.E.J.: Identifying the role that individual animals play in

their social network. Proc. R. Soc. London B 271, S477 (2004)

18. Zachary, W.W.: An information ﬂow model for conﬂict and ﬁssion in small groups.

Journal of Anthropological Research 33, 452–473 (1977)

19. Dimitropoulos, X., Hyun, Y., Krioukov, D., Fomenkov, M., Riley, G., Huﬀaker, B.:

As relationships: Inference and validation. Comput. Commun. Rev. (2007)

20. Bastian, M., Heymann, S., Jacomy, M.: Gephi: An open source software for explor-
ing and manipulating networks. In: International AAAI Conference on Weblogs and
Social Media (2009)


