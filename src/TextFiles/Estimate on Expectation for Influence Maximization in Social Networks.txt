Estimate on Expectation for Inﬂuence

Maximization in Social Networks(cid:2)

Yao Zhang, Qing Gu(cid:2)(cid:2), Jun Zheng, and Daoxu Chen

State Key Lab. for Novel Software and Technology,

Nanjing University, Nanjing 210093, China

zhangyao.cs@gmail.com, junzheng@smail.nju.edu.cn,

{guq,cdx}@nju.edu.cn

Abstract. Finding the most inﬂuential nodes is an important issue in
social network analysis. To tackle this issue, Kempe et al. proposed the
natural greedy strategy, which, although provides a good approximation,
suﬀers from high computation cost on estimating the inﬂuence function
even if adopting an eﬃcient optimization. In this paper, we propose a
simple yet eﬀective evaluation, the expectation, to estimate the inﬂuence
function. We formulate the expectation of the inﬂuence function and
its marginal gain ﬁrst, then give bounds to the expectation of marginal
gains. Based on the approximation to the expectation, we put forward a
new greedy algorithm called Greedy Estimate-Expectation (GEE), whose
advantage over the previous algorithm is to estimate marginal gains via
expectation rather than running Monte-Carlo simulation. Experimental
results demonstrate that our algorithm can eﬀectively reduce the running
time while maintaining the inﬂuence spread.

1 Introduction

Information diﬀusion is one of the most important issues in social network anal-
ysis. A problem in this ﬁeld is to ﬁnd a k-nodes subset S that nodes in S can
inﬂuence the largest number of nodes in the whole network. This problem, re-
ferred as inﬂuence maximization problem, can be applied to many areas such as
product marketing and application promotion in online communities.

Domingos and Richardson [1][2] ﬁrst investigated the inﬂuence propagation
in the area of viral marketing [3][4]. Then, Kempe et al. [5] formulated the inﬂu-
ence maximization problem. They proposed a natural greedy algorithm to solve
the inﬂuence maximization problem, which provided a (1− 1/e)-approximation.
However, their greedy algorithm was quite time-consuming to evaluate the in-
ﬂuence spread, as it needed to run random process for a large amount of times
to guarantee an accurate estimate on the inﬂuence spread.

(cid:2) This work is supported in part by the National High-Tech Research and Development
Plan of China (863) under Grant No. 2006AA01Z177, the 973 Program of China
under Grant No. 2009CB320705, the NSFC Project under Grant No. 60873027 and
Jiangsu Provincial NSF Project under Grant No. BK2006115.

(cid:2)(cid:2) Corresponding author.

M.J. Zaki et al. (Eds.): PAKDD 2010, Part I, LNAI 6118, pp. 99–106, 2010.
c(cid:2) Springer-Verlag Berlin Heidelberg 2010

100

Y. Zhang et al.

Recent researches have focused on solving this drawback, and several im-
provements have been proposed. Leskovec et al. put forward an optimization
called Cost-Eﬀective Lazy Forward (CELF) [6]; Kimura and Saito posed a bond-
percolation based improvement [7] and a model called SPM (Shortest Path
Model) [8]; Chen et al. [9] studied the inﬂuence maximization from two com-
plementary directions: one was to improve the simple greedy algorithm, and the
other was to design new eﬃcient heuristics.

In this paper, we propose a novel evaluation, the expectation, to the inﬂuence
spread, whose advantage is that it avoids running Monte-Carlo simulation. We
formulate the expectation of inﬂuence function and its marginal gain, and give
bounds to the expectation of marginal gains in theory. Then, we show that a
good estimate on the expectation can be obtained by graph-based algorithms,
and furthermore, a pruning technique is proposed for estimating the expectation.
Based on the expectation, a new greedy algorithm, referred as GEE (Greedy
Estimate-Expectation), is put forward for the inﬂuence maximization problem.
Experimental results demonstrate that GEE is well-performed in the inﬂuence
spread and running time for both independent cascade (IC) model and weighted
cascade (WC) model compared to the simple greedy algorithm with CELF op-
timization (10-140 times faster in running time and only at most 2.4% lower in
inﬂuence spread). And moreover, the running time would be even faster if we
apply CELF optimization to our GEE algorithm.

The main contributions of this paper can be concluded as follows: ﬁrst, we
provide a novel evaluation, the expectation, to estimate the inﬂuence function,
which, to the best of our knowledge, is the ﬁrst time that using expectation to
circumvent a large amount of computation on running random process; second,
we give a theoretical explanation to the eﬀectiveness of SPM (Shortest Path
Model) [8]; third, we put forward the ﬁrst expectation-based greedy algorithm
and demonstrate its eﬀectiveness on real-life networks.

2 Background

Inﬂuence Maximization Problem. We deﬁne σ(S) as the number of nodes
that are inﬂuenced by k-nodes set S, then the inﬂuence maximization problem
is formulated as ﬁnding a subset ˆS in V, where | ˆS| = k, to maximize σ( ˆS). The
computation of σ(S) is based on information diﬀusion models.
Information Diﬀusion Models. We discuss two information diﬀusion models:
independent cascade model and weighted cascade model [5]. In both of them,
node v is inﬂuenced by its neighbor u with a probability pu,v. In IC model, pu,v
is an independent parameter, and in WC model, pu,v is assigned to 1/dv.
The information diﬀusion process for two models is described below [5]. First,
the initiate set S is given. We call nodes in S active nodes, while nodes in V \S
inactive. Nodes can transform from active state to inactive state, but can not
switch verse vice. When node u ﬁrst becomes active at step t, it provides only
a single chance to activate each currently inactive neighbor v with probability
pu,v. If u succeeds, v will become active at step t + 1, and u can not activate

Estimate on Expectation for Inﬂuence Maximization in Social Networks

101

v any more after step t. If v has multiple active neighbors at step t, neighbors’
activations are sequenced in an arbitrary order. The diﬀusion process stops when
there are no more activities in the network.
General Greedy Algorithm. Kempe et al. proposed a simple greedy algorithm
to approximate the solution [5], which starts with an empty set S = ∅, and
iteratively, selects a node u for set S to maximize the marginal gain δs(u) =
σ(S ∪ {u}) − σ(S), then the algorithm stops until |S| = k.

σ(S) is computed by simulating the random process for R times (R could be
very large in order to guarantee eﬃciency). Leskovec et al. [6] proposed a CELF
optimization, which can get the same result but is much faster than Kempe et
al.’s algorithm, for its great reduction of computing δs(u). But it still costs for
hours on large-scale networks.

3 Proposed Method

In this section, we use expectation to estimate the inﬂuence function σ(S) and
the marginal gain δs(u), and give an approximation to the expectation of δs(u).
Then we propose an algorithm called Greedy Estimate-Expectation(GEE) for the
inﬂuence maximization problem.

3.1 Estimate on Expectation

We denote p(S, v) as the propagation probability that v is inﬂuenced by Set S.
Suppose the probabilities that other nodes inﬂuence node v are independent,
according to information diﬀusion models described above, we have p(S, v) =
1 − (cid:2)

∀u∈S (1 − p(u, v)).

The expectation of σ(S), formulated as E(σ(S)), is:
(cid:3)

(cid:3)

p(S, v)

(1)

E(σ(S)) =

∀v∈V

p(S, v) ∗ |{v}| =

∀v∈V

According to δs(u) = σ(S ∪ {u}) − σ(S) and the above equations, we have
∀v∈V (1 − p(S, v)) ∗ p(u, v). Suppose R(u, G) is the set of nodes

(cid:4)

E(δs(u)) =
which are reachable from u, so:

E(δs(u)) =

(cid:3)

v∈R(u,G)

(1 − p(S, v)) ∗ p(u, v)

(2)

We denote ppathi(u, v) as the propagation probability from u to v through
path i. Let ˆp(u, v) = max{ppathi(u, v)|v ∈ R(u, G)}, and λu = max{λu,v|v ∈
R(u, G)}, where λu,v is the number of paths from u to v.
Theorem 1. For IC model and WC model, if p(S, v) is given, then:

(cid:4)

v∈R(u,G) (1 − p(S, v)) ∗ ˆp(u, v) ≤ E(δs(u))
v∈R(u,G) (1 − p(S, v)) ∗ ˆp(u, v)}.

≤ min{1, λu

(cid:4)

102

Y. Zhang et al.

We deﬁne ku,v as the distance(shortest path) from u to v, and then, for IC

If we denote ti as the number of path whose length is i from node u to node
tipi, where l is the maximum length of

model with uniform propagation probability p, we have ˆp(u, v) = pku,v.
v, then in IC model, p(u, v) ≤ (cid:4)l
paths from u to v.
Theorem 2. For IC model with uniform propagation probability p, if p(S, v) is
given, and t = max(tku,v , tku,v +1, ..., tl), then:

i=ku,v

E(δs(u)) ≤ t ∗ pn−1−1
p−1

(cid:4)

v∈R(u,G) (1 − p(S, v))pku,v .

Theorem 1 gives bounds to the expectation of δs(u) for both IC model and
WC model. Theorem 2 provides an upper bound that is closer to the expectation
of δs(u) for IC model. In a sparse graph with a small value of p, t pn−1−1
is
p−1
v∈R(u,G) (1 − p(S, v))pku,v
close to 1, which means E(δs(u)) can be estimate by
eﬀectively. It is an amazing result that theoretically interprets why Shortest Path
Model (SPM: the model where each node is activated only through the shortest
paths) [8] works well.

(cid:4)

(cid:4)

v∈R(u,G) (1 − p(S, v))ˆp(u, v).

Theorem 1 and Theorem 2 show that the expectation of δs(u) can be esti-
mate by computing ˆp(u, v). Suppose ˆE(σ(S)) is the estimate of E(σ(S)) through
estimating p(u, v) by ˆp(u, v), then ˆE(δs(u)) =
According to the equation that p(S ∪ {u}) = p(S, v) + (1 − p(S, v))p(u, v),
p(S ∪ {u}, v) can be estimated by previous p(S, v) in a greedy approximate
algorithm. The value of p(u, v) can be eﬀectively approximated by ˆp(u, v). For
IC model, we are able to obtain ˆp(u, v) by ku,v through Breadth-First Search
(BFS), which takes O(n(n + m)) time. For WC model, the algorithm to get
ˆp(u, v) is resemble to shortest-path algorithm in a weighted graph, such as the
Dijkstra Algorithm. Using Fibonacci heap, the running time is O(n(n log n+ m)).
We denote du,max as the maximum degree of node v ∈ R(u, G). Let z =
p ∗ (du,max − 1).
Theorem 3. For IC model with uniform propagation p, if z < 1, ∀ε > 0, ∃K =
(cid:9)logz (ε ∗ 1−z

dup + zn)(cid:10), for all node v ∈ R(u, G) and ku,v ≤ K, then

ˆE(δs(u)) − (cid:4)

(1 − p(S, v))pku,v < ε.

v∈R(u,G)
ku,v≤K

Theorem 3 suggests that under the condition of z < 1, ˆE(δs(u)) in IC model
can be approximated eﬀectively in the case that ku,v ≤ K, which means BFS for
computing ˆp(u, v) can be terminated within K layers! We call this BFS pruned
BFS. For those networks whose K are not large, pruned BFS makes progress in
running time compared to original BFS that takes O(n(n + m)) time.

3.2 GEE Algorithm

We put forward an algorithm called Greedy Estimate-Expectation(GEE) for in-
ﬂuence maximization problem. There are two phases in GEE: calculating ˆp(u, v)
and greedily obtaining the set Sk.

Estimate on Expectation for Inﬂuence Maximization in Social Networks

103

Algorithm 1. Greedy Estimate-Expectation Algorithm
Phase One
1: If MODEL=IC, then Get ˆp(u, v) for all (u, v) by full BFS or pruned BFS
2: If MODEL=WC, then Get ˆp(u, v) for all (u, v) by Fibonacci heap or pruned BFS
Phase Two
1: Input ˆp(u, v) for all (u,v)
2: Initialize S := ∅, and p(S, v) := 0 Foreach v ∈ V
3: for i := 1 to k do
4:
5:
6:
7:
8:
9: end for
10: return S

Foreach u ∈ V \S, ˆE(δs(u)) :=
Select a node u with maximum ˆE(δs(u))
S := S ∪ {u}
p(S, u) := 1
Foreach v ∈ V \S, update p(S, v) := p(S, v) + ˆp(u, v)(1 − p(S, v))

(cid:4)|V |

v=0 ˆp(u, v)(1 − p(S, v)), if ˆp(u, v)! = 0

The running time of the ﬁrst phase depends on its implementation. As men-
tioned above, ˆp(u, v) for all nodes (u,v) can be obtained by running BFS or
pruned BFS with O(n(n + m)) time or O(n ¯dK−1
¯d−1 ) time, and by using Fibonacci
heap with O(n(n log n + m)) time. We also take pruned BFS as a complement
for WC model, and it performances well in our experiments.

The second phase of GEE is to get a node u for Sk once at a time with
the maximum ˆE(δs(u)). Instead of running random process for suﬃcient times,
Phrase Two takes O(kn2) in running time, and if we only consider K layers in
BFS, the average running time could be O(kn ¯dK−1
¯d−1 ). Moreover, we can also use
the CELF optimization to accelerate Phrase Two.
ˆE(σ(S)), the estimate function of E(σ(S)), is a submodular function, which
means GEE algorithm provides a (1−1/e)-approximation according to the prop-
erty of submodular function [10].

4 Experiments

We employ two collaboration networks from paper-lists in sections of the e-
print arXiv. The ﬁrst network is from the ”General Relativity and Quantum
Cosmology” (Gr-Qc) section with 5242 nodes and 28980 edges1. The second
network is from the ”High Energy Physics - Theory” (Hep) section with 15233
nodes and 58891 edges [9]. All experiments are implemented on a PC with Intel
2.20GHz Pentium Dual E2200 processor and 4GB memory.
Table 1 lists algorithms used in our experiments. Degree and Distance are simple
heuristics used in [5]. Note that in GEE with pruned BFS, if initializing ε = 10−8
and using ¯d, then we have K = 6 in Gr-Qc graph and K = 5 in Hep graph. To make
experiment results convincing, we simulate the random process for R = 20000

1 http://snap.stanford.edu/data/ca-GrQc.html

104

Y. Zhang et al.

Table 1. Algorithms used in experiments

Algorithm

Degree
Distance

Greedy with CELF

GEE with pruned BFS

GEE with full BFS

GEE with Fibonacci heap

Applied Model

Description

IC, WC
IC, WC
IC, WC
IC, WC

IC
WC

Degree heuristic
Distance heuristic

CELF optimization(R = 20000)

Algorithm 1 (ε = 10

−8)

Algorithm 1
Algorithm 1

(a) IC Model for Gr-Qc Graph

(b) IC Model for Hep Graph

(c) WC Model for Gr-Qc Graph

(d) WC Model for Hep Graph

Fig. 1. Inﬂuence spread. (a) IC model for Gr-Qc graph. (b) IC model for Hep graph.
(c) WC model for Gr-Qc graph. (d) WC model for Hep graph.

times (the same as times in [9]), and then, take the average of the inﬂuence spread
numbers as the inﬂuence spread results for each algorithm.

In IC model, we mainly discuss experiments with an uniform p = 0.01. We
also consider p = 0.02. We do not report its result as its trends on inﬂuence
performance and running time are similar to the situation that p = 0.01.
Inﬂuence spread. In all ﬁgures, we discuss about percentages of inﬂuence
spread for the case of k = 40. Figure 1(a)(b) demonstrate the inﬂuence spread
results of diﬀerent algorithms with probability p = 0.01 in IC model. Our GEE
with pruned BFS and GEE with full BFS, performs quite well. They are only
about 1.5% and 2.4% lower than the Greedy with CELF in the Gr-Qc graph
and Hep graph respectively. And the diﬀerences between two GEE algorithms
are less than 1%, which means our pruning technique works well as we expect.

Estimate on Expectation for Inﬂuence Maximization in Social Networks

105

(a) Gr-Qc Graph

(b) Hep Graph

Fig. 2. Running time(sec.). (a) Gr-Qc graph. (b) Hep graph.

Figure 1(c)(d) demonstrate the inﬂuence spread results of diﬀerent algorithms
in WC model. The performance of our GEE with pruned BFS and GEE with
Fibonacci heap are quite close to Greedy with CELF. GEE with Fibonacci heap
is only 1.4% and 2.3% lower than the Greedy with CELF in the Gr-Qc graph
and Hep graph respectively. It is surprising that GEE with pruned BFS with
much faster running time, outperforms GEE with Fibonacci heap for some value
of k when k < 40.
Running time. Figure 2 demonstrates the running time of various algorithms.
We do not list running times of Degree and Distance for their poor performances
on the inﬂuence spread. Our GEEs run orders of magnitude faster compared to
Greedy with CELF. Speciﬁcally, when k = 40, GEE with Fibonacci heap is 11
times and 19 times faster than Greedy with CELF in the Gr-Qc and Hep graph
respectively, and GEE with full BFS is 119 times and 43 times faster than Greedy
with CELF in the Gr-Qc and Hep graph respectively. GEE with pruned BFS,
for its pruning technique, impressively saves the running time for about 80 to
140 times in the Gr-Qc and Hep graph!

5 Discussion

Our GEEs show very impressive experiment results for both IC model and WC
model: they further improve the running time (range from 10 times to 140 times
faster when 40 nodes is selected), while almost match the inﬂuence spread of
Greedy with CELF (only 1.4% to 2.4% lower).

There are other well-performed algorithms for the inﬂuence maximization
problem: shortest path model(SPM) [8], bond-percolation based algorithm(BP)
[7], and degree discount heuristic [9]. We do not list these experimental results
for the following reasons: degree discount heuristic, although almost matches the
inﬂuence spread in much faster time compared to the simple greedy algorithm,
is only limited to the IC model; BP is similar to the improvement of the greedy
algorithm discussed in [9], which costs as much time as the CELF optimization;
SPM can only apply to IC model, and moreover, it can get the similar result as
our GEE with full BFS in slower time due to the implementation of SPM.

106

Y. Zhang et al.

6 Conclusion

In this paper, we propose a new evaluation, the expectation, to estimate the inﬂu-
ence function and its marginal gain for the inﬂuence maximization problem. We
give bounds to the expectation of δs(u), and further, theoretically interpret the
eﬀectiveness of Shortest Path Model(SPM) [8]. Then we put forward an expec-
tation based algorithm called Greedy Estimate-Expectation(GEE). Using two
collaboration networks, we experimentally demonstrate that our GEE algorithm
impressively shortens the running time while maintaining the inﬂuence results
that obtained by the simple greedy algorithm with the CELF optimization.

Future research will try to use the expectation to estimate the inﬂuence func-
tion on other diﬀusion models. Another direction is to explore the internal struc-
tures of networks to improve the inﬂuence spread.

References

1. Domingos, P., Richardson, M.: Mining the network value of customers. In: KDD,

pp. 57–66 (2001)

2. Richardson, M., Domingos, P.: Mining knowledge-sharing sites for viral marketing.

In: KDD, pp. 61–70 (2002)

3. Goldenberg, J., Libai, B., Muller, E.: Talk of the networks: a complex systems look

at the underlying process of word-of-mouth. Marketing Letters 12 (2001)

4. Leskovec, J., Adamic, L.A., Huberman, B.A.: The dynamics of viral marketing.

TWEB 1(1) (2007)

5. Kempe, D., Kleinberg, J., Tardos, E.: Maximizing the spread of inﬂuence through

a social network. In: KDD, pp. 137–146 (2003)

6. Leskovec, J., Krause, A., Guestrin, C., Faloutsos, C., VanBriesen, J., Glance, N.S.:

Cost-eﬀective outbreak detection in networks. In: KDD, pp. 420–429 (2007)

7. Kimura, M., Saito, K., Nakano, R.: Extracting inﬂuential nodes for information

diﬀusion on a social network. In: AAAI, pp. 1371–1376 (2007)

8. Kimura, M., Saito, K.: Tractable models for information diﬀusion in social net-
works. In: F¨urnkranz, J., Scheﬀer, T., Spiliopoulou, M. (eds.) PKDD 2006. LNCS
(LNAI), vol. 4213, pp. 259–271. Springer, Heidelberg (2006)

9. Chen, W., Wang, Y., Yang, S.: Eﬃcient inﬂuence maximization in social networks.

In: KDD, pp. 199–208 (2009)

10. Nemhauser, G., Wolsey, L., Fisher, M.: An analysis of the approximations for
maximizing submodular set functions. Mathematical Programming 14, 265–294
(1978)


