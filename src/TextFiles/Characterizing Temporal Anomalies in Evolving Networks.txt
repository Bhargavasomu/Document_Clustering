Characterizing Temporal Anomalies

in Evolving Networks

N.N.R. Ranga Suri1, M. Narasimha Murty2, and G. Athithan1,3

1 Centre for AI and Robotics (CAIR), Bangalore, India

{rangasuri,athithan.g}@gmail.com

2 Dept of CSA, Indian Institute of Science (IISc), Bangalore, India

3 Presently working at Scientiﬁc Analysis Group (SAG), Delhi, India

mnm@csa.iisc.ernet.in

Abstract. Many real world networks evolve over time indicating their
dynamic nature to cope up with the changing real life scenarios. Detec-
tion of various categories of anomalies, also known as outliers, in graph
representation of such network data is essential for discovering diﬀerent
irregular connectivity patterns with potential adverse eﬀects such as in-
trusions into a computer network. Characterizing the behavior of such
anomalies (outliers) during the evolution of the network over time is crit-
ical for their mitigation. In this context, a novel method for an eﬀective
characterization of network anomalies is proposed here by deﬁning var-
ious categories of graph outliers depending on their temporal behavior
noticeable across multiple instances of a network during its evolution.
The eﬃcacy of the proposed method is demonstrated through an exper-
imental evaluation using various benchmark graph data sets.

Keywords: Mining network data, Evolving networks, Anomaly detec-
tion, Graph anomalies, Temporal outliers.

1

Introduction

Graph based representation of network structure gave rise to the rapid pro-
liferation of research work on social network analysis. Similarly, graph based
representation is preferred for modeling the dynamism inherent to many real
life applications. Thus, graph mining plays an important role in any meaningful
analysis of the network data. An emerging research problem related to graph
mining is to discover anomalies [4,1], also known as outliers, in graph represen-
tation of the network data. Due to the networked nature of the data pertaining
to many real life applications such as computer communication networks, social
networks of friends, the citation networks of documents, hyper-linked networks
of web pages, etc [7], anomaly/outlier detection in graphs [1,3,12] turns out to be
an important pattern discovery activity. It provides the basis for realizing certain
application speciﬁc tasks such as fraud detection in on-line ﬁnancial transactions,
intrusion detection in computer networks, etc [4].

V.S. Tseng et al. (Eds.): PAKDD 2014, Part I, LNAI 8443, pp. 422–433, 2014.
c(cid:2) Springer International Publishing Switzerland 2014

Characterizing Temporal Anomalies in Evolving Networks

423

In case of IP networks comprising of several individual entities such as routers
and switches, the behavior of the individual entities determines the ensemble be-
havior of the network [15]. In this context, network anomalies typically refer to
circumstances when network operations deviate from normal behavior, resulting
in many unusual traﬃc patterns noticeable in such network data. These traﬃc
patterns arise due to diﬀerent types of network abuse such as denial of service at-
tacks, port scans, and worms; as well as from legitimate activity such as transient
changes in customer demand, ﬂash crowds, or occasional high-volume ﬂows [10].
These traﬃc anomalies happen to be the major security concern to the net-
work administrators and detecting such anomalies in evolving networks [14,11]
is essential for ensuring a healthy operational status of these networks.

Connected with any dynamic network, the underlying graph representation
undergoes time dependent changes in its connectivity structure. This will have a
consequence on the local connectivity and thus inﬂuences the temporal behavior
of various graph entities such as nodes, edges and sub-graphs. As a result, a
graph entity that qualiﬁes to be an outlier (irregular connectivity pattern) at
the current instance may no more continue to be the same at a later point of
time due to the changes in connectivity structure of the graph. Additionally,
some new irregularities may arise in a diﬀerent portion of the graph hinting at
the presence of some new outliers. If the graph connectivity structure is altered
further, some intermediate outliers may cease to exist and further new types of
outliers may start appearing in the graph. Thus, it is important to track such
evolving scenarios for a subjective analysis of the graph representation towards
understanding and characterizing the outlier dynamics. Accordingly, study of
evolving graphs/networks has been an active research problem as evident from
some recent eﬀorts in this direction [2,14].

Motivated by the above discussion, a novel framework for characterizing tem-
poral anomalies in evolving networks is envisaged here. This involves identi-
fying various graph outliers and characterizing their dynamics across multiple
instances of the graph representation of a dynamic network at various points
of time during its evolution. Accordingly, a novel algorithm is proposed in this
paper for detecting various temporal outliers in a dynamic graph and for pro-
ducing a semantic categorization of the detected outliers by deﬁning diﬀerent
categories of temporal outliers.
Highlights of the work reported in this paper are as follows:

– The problem of detecting anomalies in dynamic network data is an active

research area [11,14].

– Characterizing temporal anomalies (outliers) is essential in many application

contexts such as ensuring the security of information networks.

– A thorough exploration of the temporal behavior of graph outliers by deﬁning

various categories of temporal outliers based on their occurrence patterns.

– A novel algorithm for eﬀective detection of various temporal outliers and for

analyzing their dynamics.

The rest of the paper is organized in four sections. Section 2 gives a brief
discussion on the relevant literature. Subsequent section describes the proposed

424

N.N.R. Ranga Suri, M. Narasimha Murty, and G. Athithan

method for the study of outlier dynamics in evolving networks/graphs. An exper-
imental evaluation of the proposed method is furnished in Section 4 bringing out
its empirical ﬁndings. Finally, Section 5 concludes this paper with a discussion
and a few directions for future work on this problem.

2 Related Literature

A method for spotting signiﬁcant anomalous regions in dynamic networks has
been proposed [11] recently. According to this method, the anomalous score
of a weighted edge in an undirected connected graph is determined based on
a statistical measure. The aim is to ﬁnd contiguous regions having adjacent
anomalous edges forming large regions of higher score, named as Signiﬁcant
Anomalous Regions (SAR) in a dynamic network. The anomaly score of such a
region is quantiﬁed by aggregating the scores of the participating edges. Given
an edge-weighted graph G = (V, E, W ), the anomaly score of a temporal network
(cid:3)
) is a connected sub-graph of G, in the
region R = (G
time interval [i, j] is given by

(cid:3)
, [i, j]), where G

(cid:3)

(cid:3)

= (V

, E

scoreG(R) =

(cid:2)

j(cid:2)

e∈E(cid:2)

t=i

wt(e)

(1)

where wt(e) is anomaly score associated with an edge e at time point t.

This method is basically an edge-centric approach where the anomalous scores
of edges determine the anomalous regions in a graph. Also, computing aggregate
score over time may not highlight the temporal characteristics of the primitive
outliers such as node/edge outliers in a graph.

In another recent eﬀort, a multi-graph clustering method [13] was proposed ex-
ploiting the interactions among diﬀerent dimensions of a given network. Though
the multi-graph scenario is conceptually diﬀerent from multiple instances of an
evolving graph, establishing a relationship between these two problem settings
may enable leveraging the methods developed for one setting in eﬀectively solv-
ing the other. Similarly, other recent eﬀorts [2,14] on dynamic graphs are aimed
at modeling some speciﬁc time varying properties of such graphs in a meaning-
ful manner. A substructure-based network behavior anomaly detection approach,
named as Weighted Frequent Sub-graphs method, was proposed [6] to detect the
anomalies present in large-scale IP networks. According to this method, patterns
of abnormal traﬃc behavior are identiﬁed using multivariate time series motif
association rules mining procedure.

A method to capture the evolving nature of abnormal moving trajectories was
proposed in [5] considering both current and past outlierness of each trajectory.
Such a method is intended to explore the behaviors of moving objects as well as
the patterns of transportation networks. It identiﬁes the top-k evolving outlying
trajectories in a real time fashion by deﬁning an appropriate outlier score func-
tion. Unlike the method described in [11] computing a simple summation of the
anomalous scores over time, this particular method utilizes a decay function in

Characterizing Temporal Anomalies in Evolving Networks

425

determining the evolving outlier score so as to mitigate the inﬂuence of the past
trajectories.

2.1 Outlier Detection in Graphs

As mentioned in the previous section, the essential graph mining task here is
to detect various anomalies/outliers present in the graph representation of a
dynamic network at a speciﬁc point of time, i.e. detecting outliers in a single
graph instance. Among the methods available in the literature addressing this
requirement, the method proposed in [12] is an early one using the minimum
description length (MDL) principle. The main idea of this method is that sub-
graphs containing many common sub-structures are generally less anomalous
than sub-graphs with few common sub-structures. Thus, it is suitable mainly for
applications involving many common sub-structures such as the graphs describ-
ing the atomic structure of various chemical compounds. Similarly, the method
proposed in [3] is meant for anomalous link (edge) discovery deﬁning a novel
edge signiﬁcance measure.

A recent work on anomaly detection in graph data [1], known as ‘OddBall’,
makes use of the notation of egonet of a node deﬁned as the induced sub-graph
of its 1-step neighbors. According to this method, the number of nodes Ni and
the number of edges Ei of the egonet Gi of node i in a graph G = (V, E) follow a
power law relationship, named the Egonet Density Power Law (EDPL) deﬁned
as

Ei ∝ N α

i , 1 ≤ α ≤ 2.

(2)

Consequently, two types of anomalous egonets, named as near cliques and near
stars, are determined by measuring the amount of deviation from the power law
relationship. Thus, the outlierness score of an egonet sub-graph Gi is computed
as the distance to the least squares ﬁtting line as deﬁned in [1].

out score(Gi) =

max(Ei, CN α
i )
min(Ei, CN α
i )

log(|Ei − CN α

i | + 1)

(3)

Finally, the anomalous sub-graphs are indicated in a scatter plot, referred to as
EDLP plot, showing their deviation from the ﬁtting line.

The spectral approach for detecting subtle anomalies in graphs [16] is a more
recent method, which is of relevance to our work. This approach detects the
anomalous sub-graphs in the input graph by exploring the minor eigenvectors of
the adjacency matrix of the graph. The underlying assumption is that there exist
some minor eigenvectors with extreme values on some entries corresponding to
the anomalies in the graph.

3 Proposed Method

Given the graph representation of network data, there may exist various types of
graph outliers in the form of node outliers, edge outliers and sub-graph outliers as

426

N.N.R. Ranga Suri, M. Narasimha Murty, and G. Athithan

discussed in the previous section. The process of graph evolution over time results
in some interesting observations in terms of these graph outliers. A framework for
capturing this phenomenon is proposed here as shown in Figure 1. The rationale
behind this setting is to explore various types of outliers present in a graph at
various points of time independently and then to characterize them based on
their appearance at diﬀerent points of time during the network evolution.

Graph Evolution with Time

Time:

t

1

N
G                         G                            G

2

...

...

1

t

2

t

 N

Detect Graph

Outliers

Detect Graph

Outliers

Detect Graph

Outliers

Determine the Grand Set of Outliers 

Compute Cumulative Outlier Scores

Identify Various Categories of Outliers 

Lebeled Temporal Outliers

Fig. 1. Proposed framework for detecting temporal outliers

3.1 Preliminaries

The mathematical notation along with some deﬁnitions required for developing
a novel algorithm for temporal outlier detection is introduced here. We use the
two terms ‘outliers’ and ‘anomalies’ in an interchanging manner as they both
indicate the data objects deviating from the normal data. Likewise, the two
terms ‘network’ and ‘graph’ are used to refer to the same data object.

Let G = {G1, G2, . . . , GN} be a dynamic graph data set comprising of N
instances of an evolving graph corresponding to the analysis time period [t1, tN ]
consisting of N discrete points of time. Similarly, let Ψi = {ψi,1, ψi,2, . . . , ψi,k}
Si = {si,1, si,2, . . . , si,k} be their outlier scores respectively.

denote the top-k outliers present in the graph instance Gi at time point ti and

Deﬁnition 1 (Temporal outlier). A graph-based outlier that is present in one
or more instances of an evolving network/graph.

Deﬁnition 2 (Cumulative outlier score). The cumulative outlier score of a
temporal outlier is computed using its outlier scores at diﬀerent points of time
during the analysis.

Characterizing Temporal Anomalies in Evolving Networks

427

The exact computation of the cumulative outlier score depends upon the
speciﬁc algorithmic logic considered based on the application context. The set of
temporal outliers detected by the proposed algorithm is indicated by Ω and Φ =

{φ1, φ2, . . .} represents the cumulative outlier scores of the detected temporal

outliers.

In our characterization of the dynamics of the temporal outliers, we resort to a
categorization of them based on their time varying characteristics. To this end,
every category of temporal outlier that is noticed during the graph evolution
is assigned an explicit label to mark it distinctly depending on its behavior.
In order to capture various behavioral patterns of the temporal outliers and to
convey the underlying semantics associated with each such pattern, we deﬁne
the following ﬁve categories of temporal outliers noticeable in dynamic graphs.

Deﬁnition 3 (Halting outlier). A temporal outlier OH that may cease to exist
over time during the network evolution.

∃ tj ∈ [t3, tN ] s.t. (OH ∈ Ψp, ∀tp ∈ [t1, tj)) ∧ (OH /∈ Ψj).

Deﬁnition 4 (Emerging outlier). A temporal outlier OE that starts appear-
ing at some point of time.

∃ ti, tj ∈ [t2, tN ] s.t. (OE /∈ Ψp, ∀tp ∈ [t1, ti]) ∧ (OE ∈ Ψq, ∀tq ∈ [ti+1, tj]) ∧
(tj > ti+1).

Deﬁnition 5 (Alternating outlier). A temporal outlier OA that is noticed at
diﬀerent points of time intermittently.
∃ ti, tj, tk ∈ [t1, tN ] s.t. (OA ∈ Ψi) ∧ (OA /∈ Ψj) ∧ (OA ∈ Ψk) ∧
(OA ∈ Ψp, ∀tp ∈ (ti, tj)) ∧ (OA /∈ Ψq, ∀tq ∈ (tj , tk)) ∧ (tk > tj > ti).

Deﬁnition 6 (Repeating outlier). A temporal outlier OR that keeps appear-
ing at all points of time during the network evolution.

OR ∈ Ψi,∀ ti ∈ [t1, tN ].

Deﬁnition 7 (Transient outlier). A temporal outlier OT that exists only at
one point of time.

∃ ti ∈ [t1, tN ] s.t. (OT ∈ Ψi) ∧ (OT /∈ Ψj, ∀tj ∈ [t1, tN ]) ∧ (tj (cid:8)= ti).

It is important to note that a halting outlier is diﬀerent from a transient
outlier, where the former one disappears after being present for more than one
time point, while the later one exists precisely at one point of time. Also note
that the set of top-k outliers Ψi present in a graph instance Gi may consist of
one or more categories of temporal outliers deﬁned above.

In view of the ﬁve categories of temporal outliers deﬁned above, the pro-
posed framework is named as NetHEART indicating that the detection of var-
ious network anomalies, by way of discovering Halting, Emerging, Alternating,
Repeating and Transient (HEART) categories of outliers in dynamic networks,
is essential for an eﬀective management of these networks such as ensuring the
security of the IP networks.

428

N.N.R. Ranga Suri, M. Narasimha Murty, and G. Athithan

Algorithm 1. Detecting temporal outliers in evolving graphs
Input: A dynamic graph G with its N instances at diﬀerent points of time.
Output: A ranked list Ω of temporal outliers and their scores Φ.
1: For each graph instance Gi perform the following steps.

(a) Construct the corresponding edge list Li .
(b) Apply the graph outlier detection procedure described in [1] on Li.
(c) Determine the set of top-k outliers Ψi along with their scores Si.

2: Determine the grand set of outliers across all graph instances as

Ω = Ψ1 ∪ Ψ2 ∪ ··· ∪ ΨN

3: For each temporal outlier Oj ∈ Ω, determine its cumulative outlier score as

where

φj =

N(cid:2)

i=1

1
N

ξi,j

(cid:3)

si,p

0

ξi,j =

if ∃p s.t. Oj = ψi,p
otherwise.

4: Determine the set of repeating outliers that exist across all graph instances as

Ω∗

= Ψ1 ∩ Ψ2 ∩ ··· ∩ ΨN

5: Similarly, determine all other categories of outliers based on the Ψi’s.
6: For each outlier Oj ∈ Ω, label it as per the category it belongs to.
7: Arrange the set Ω of temporal outliers in descending order of their scores.

(4)

(5)

(6)

3.2 Proposed Algorithm for Temporal Outlier Detection

According to the framework shown in Fig. 1, the initial task is to detect outliers
present in a single graph instance. Though this task can be accomplished using
any one of the established methods like [1,16], we have considered the method
described in [1]. The rest of the framework deals with collating the instance
speciﬁc outliers and characterizing their dynamics across multiple instances of a
dynamic graph. Accordingly, a novel method for detecting various categories of
temporal outliers in evolving graphs is proposed here as per the steps presented
in Algorithm 1.
As per Equation 4, the grand set of outliers (Ω) consists of at most N ∗ k ele-
ments and at least k elements. Similarly, Equation 5 determines the cumulative
outlier score of a temporal outlier by computing the average of its scores corre-
sponding to various graph instances. Unlike the other recent methods [11,5], the
detection of a temporal outlier is not aﬀected by its cumulative outlier score.
However, this score indicates the signiﬁcance of a temporal outlier over all the
graph instances.

Characterizing Temporal Anomalies in Evolving Networks

429

The execution time of the proposed algorithm is mainly contributed by the
time required to complete the ﬁrst step. For a small k value with a reasonably
small analysis time period (N ≤ 10), the rest of the steps can be completed
in a constant amount of time. Therefore, the computational complexity of the
proposed algorithm is determined by that of the speciﬁc method employed for
performing the ﬁrst step, such as the method described in [1].

4 Experimental Evaluation

To demonstrate the eﬃcacy of the proposed algorithm, an experimental evalua-
tion has been carried out considering two real life dynamic graph data sets. For
ease of illustration and simplicity in describing the results, only three graph in-
stances (N = 3) have been considered corresponding to each one of these graph
data sets as described below.

4.1 Data Sets

The DBLP Computer Science Bibliography from the University of Trier contains
millions of bibliographic records bundled in a huge XML ﬁle [9]. Various sub-sets
of these records concerned with AAAI publications have been considered here,
denoted as DBLP-AAAI data set, as per the details furnished in Table 1.

Table 1. Details of the dynamic graph data sets

Data Set Name

DBLP-AAAI

AS-2000

G1
G2
G3
G1
G2
G3

as19991231.txt
as20000101.txt
as20000102.txt

Instance # Nodes # Edges Graph Instance Details
Publications upto 2008
Publications upto 2010
Publications upto 2012

5,581
6,219
7,551
2,107
3,570
6,474

25,276
28,622
35,628
8,979
14,783
26,467

The graph of routers comprising the Internet can be organized into sub-graphs
called Autonomous Systems (AS). Each AS exchanges traﬃc ﬂows with some
neighbors (peers). It is possible to construct a communication network of who-
talks-to-whom from the BGP (Border Gateway Protocol) logs. The experiments
in this paper have been carried out on three most recent graph ﬁles taken from
the Autonomous Systems collection [8] as per the details furnished in Table 1,
denoted as AS-2000 data set hereafter.

4.2 Outlier Detection and Characterization

As per the ﬁrst step of the proposed algorithm, various node-based outliers
present in each graph instance were detected using ‘oddball’ method [1]. The

430

N.N.R. Ranga Suri, M. Narasimha Murty, and G. Athithan

resulting top-k (=10) outliers on the DBLP-AAAI graph instances are shown
in Fig. 2 indicated using node IDs along with their outlier scores. Subsequently,
the grand set consisting of 13 temporal outliers (|Ω| = 13) was determined (as
per Equation 4) and the cumulative outlier score of each temporal outlier has
also been computed accordingly (as per Equation 5). Then, various categories
of temporal outliers (as deﬁned in Section 3.1) present in this graph data set
were identiﬁed as listed in Table 2, and the same have been depicted in Fig. 2
using a diﬀerent line style for representing each category. Finally, a ranked list
of labeled temporal outliers is produced as the output.

Similarly, the AS-2000 graph data set was also subjected to the computational
steps listed in Algorithm 1, and various categories of temporal outliers thus
detected have been furnished in Table 2 for completeness.

209 (4.944)

1 (4.872)

92 (4.829)

482 (4.775)

180 (4.763)

99 (4.669)

30 (4.469)

769 (4.452)

68 (4.437)

247 (4.312)

G   at t

1

1

209 (5.788)

482 (5.502)

1 (5.433)

99 (5.238)

1089 (5.223)

92 (5.094)

30 (5.020)

576 (5.014)

67 (4.992)

769 (4.961)

G   at t

2

2

209 (4.002)

99 (3.782)

1 (3.567)

576 (3.535)

92 (3.430)

67 (3.359)

1089 (3.289)

482 (3.203)

68 (3.194)

30 (3.114)
G   at t 3

3

Fig. 2. Time varying characteristics of graph outliers in DBLP-AAAI data set

Table 2. Various categories of temporal outliers identiﬁed in dynamic graph data sets

Graph File Repeating Transient

Outliers Outliers

Halting
Outliers

Emerging Alternating
Outliers

Outliers

DBLP-AAAI 209, 1, 92, G1:180, 247

769

1089, 576, 67

68

482, 99, 30 G2: —
G3: —

AS-2000

4006, 4544 G1: 2551, 2041 721, 3847
1746, 3563 145, 6467

6113, 668

—

G2: 6261, 701
G3: 5779, 5000
11329, 2828

Characterizing Temporal Anomalies in Evolving Networks

431

It is important to note that the temporal behavior observed in this experi-
mentation may vary with the number of top ranked outliers (k) considered cor-
responding to each graph instance and the number of instances (N ) considered
in each graph data set, as the outlier ranking is basically a relative measure.

4.3 Exploring the Outlier Dynamics

As brought out in Section 2.1, an EDPL plot [1] indicates two types of node-
based anomalies, namely the near-star anomalies appearing below the ﬁtting
line and the near-clique anomalies above the ﬁtting line. Accordingly, the EDPL
plots obtained corresponding to diﬀerent instances of the DBLP-AAAI data set
are shown in Fig. 3. A keen observation at these plots indicates that as more and
more new edges get added during the graph evolution from G1 to G3, one can
notice the gradual appearance of more near-clique type of anomalies (triangle
points marked in the upper portion of the plot) as shown in Fig. 3(b).

|

G
1

E

|

103

102

101

100

 
100

AAAI−G1

1.8948x + (−0.38333) = y
1.1927x + (−0.24971) = y
2.1927x + (−0.55074) = y

|

G
1

E

|

|V

101
|
1G

(a) Outliers in G1

103
 

102

101

100
 
102
100

AAAI−G3

 

1.789x + (−0.41913) = y
1.2021x + (−0.26083) = y
2.2021x + (−0.56186) = y

|V

101
|
1G

(b) Outliers in G3

102

Fig. 3. Top 100 outliers detected in DBLP-AAAI data set

Temporal outliers present in an evolving graph are expected to highlight the
inherent semantics of the graph connectivity patterns causing these outliers. To
illustrate these semantic aspects, a few of the detected node-based outliers, in the
form of egonet sub-graphs, are depicted in Table 3. The number of nodes and the
number of edges present in each such sub-graph are also furnished along side in
the same table. It is important to note that with the evolution of the graph over
time, the underlying egonets have also undergone corresponding change in their
connectivity structure. Though there is not any signiﬁcant change expected in
the node-based anomalous sub-graphs individually, their relative position in the
top-k outlier rank list may change across various graph instances (refer to Fig. 2)
due to the modiﬁed connectivity structure of the graph during evolution. For

432

N.N.R. Ranga Suri, M. Narasimha Murty, and G. Athithan

Table 3. Sub-graphs of various node outliers in diﬀerent graph instances

Graph File

Egonet in
G1 at t1

Egonet in
G2 at t2

Egonet in
G3 at t3

DBLP-AAAI
Node ID: 209 nodes=18, edges=20 nodes=20, edges=22 nodes=22, edges=24

AS-2000

Node ID: 3847 nodes=10, edges=37 nodes=10, edges=37 nodes=14, edges=44

example, the egonet of the node with ID 209 in DBLP-AAAI data set continues
to be among the top-10 outliers through out the analysis period. On the other
hand, the egonet of the node with ID 3847 in AS-2000 data set ceases to exist
among the top-10 outliers at time point t3.

5 Conclusion and Future Work

The problem of characterizing temporal anomalies (outliers) in evolving network
(graph) data has been addressed here by proposing a novel framework for explor-
ing their time varying behavior. The proposed method has its merit in deﬁning
various categories of temporal outliers taking into account their dynamics. An
experimental evaluation of the proposed algorithm for temporal outlier detec-
tion has been carried out using two benchmark dynamic graph data sets. The
experimental observations conﬁrm the presence of various categories of temporal
outliers as deﬁned in this paper, demonstrating the eﬀectiveness of the proposed
method.

Employing alternative methods, such as the one described in [16], for discov-
ering the anomalies present in the individual instances of an evolving graph and
exploring their temporal behavior. Enhancement to the proposed categorization
of temporal outliers by involving some graph in-variants may be other interesting
direction to consider.

Characterizing Temporal Anomalies in Evolving Networks

433

Acknowledgments. The authors would like to thank Director, CAIR for sup-
porting this work.

References

1. Akoglu, L., McGlohon, M., Faloutsos, C.: Oddball: Spotting anomalies in weighted
graphs. In: Zaki, M.J., Yu, J.X., Ravindran, B., Pudi, V. (eds.) PAKDD 2010.
LNCS, vol. 6119, pp. 410–421. Springer, Heidelberg (2010)

2. Anagnostopoulos, A., Kumar, R., Mahdian, M., Upfal, E., Vandin, F.: Algorithms
on evolving graphs. In: ACM ITCS, Cambridge, Massachussets, USA, pp. 149–160
(2012)

3. Chakrabarti, D.: AutoPart: Parameter-free graph partitioning and outlier detec-
tion. In: Boulicaut, J.-F., Esposito, F., Giannotti, F., Pedreschi, D. (eds.) PKDD
2004. LNCS (LNAI), vol. 3202, pp. 112–124. Springer, Heidelberg (2004)

4. Chandola, V., Banerjee, A., Kumar, V.: Anomaly detection: A survey. ACM Com-

puting Surveys 41(3) (2009)

5. Ge, Y., Xiong, H., Zhou, Z.H., Ozdemir, H., Yu, J., Lee, K.C.: TOP-EYE: Top-k
evolving trajectory outlier detection. In: ACM CIKM, Toronto, Canada, pp. 1733–
1736 (2010)

6. He, W., Hu, G., Zhou, Y.: Large-scale ip network behavior anomaly detection
and identiﬁcation using substructure-based approach and multivariate time series
mining. Telecommunication Systems 50(1), 1–13 (2012)

7. Kim, M., Leskovec, J.: Latent multi-group memebership graph model. In: ICML,

Edinburgh, Scotland, UK (2012)

8. Leskovec, J.: Stanford large network dataset collection (2013),

http://snap.stanford.edu/data/index.html

9. Ley, M.: Dblp - some lessons learned. PVLDB 2(2), 1493–1500 (2009)

10. Li, X., Bian, F., Crovella, M., Diot, C., Govindan, R., Iannaccone, G., Lakhina,
A.: Detection and identiﬁcation of network anomalies using sketch subspaces. In:
ACM IMC, Rio de Janeiro, Brazil (2006)

11. Mongiovi, M., Bogdanov, P., Ranca, R., Singh, A.K., Papalexakis, E.E., Faloutsos,
C.: Netspot: Spotting signiﬁcant anomalous regions on dynamic networks. In: SDM,
Austin, Texas, pp. 28–36 (2013)

12. Noble, C.C., Cook, D.J.: Graph-based anomaly detection. In: Proc. SIGKDD,

Washington, DC, USA, pp. 631–636 (2003)

13. Papalexakis, E.E., Akoglu, L., Ienco, D.: Do more views of a graph help? community
detection and clustering in multi-graphs. In: Fusion, Istanbul, Turkey, pp. 899–905
(2013)

14. Rossi, R.A., Neville, J., Gallagher, B., Henderson, K.: Modeling dynamic behavior

in large evolving graphs. In: WSDM, Rome, Italy, pp. 667–676 (2013)

15. Thottan, M., Ji, C.: Anomaly detection in ip networks. IEEE Trans. on Signal

Processing 51(8), 2191–2204 (2003)

16. Wu, L., Wu, X., Lu, A., Zhou, Z.: A spectral approach to detecting subtle anomalies

in graphs. Journal of Intelligent Information Systems 41, 313–337 (2013)


