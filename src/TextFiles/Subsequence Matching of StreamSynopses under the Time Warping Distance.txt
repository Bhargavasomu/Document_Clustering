Subsequence Matching of Stream Synopses

under the Time Warping Distance

Su-Chen Lin1, Mi-Yen Yeh2, and Ming-Syan Chen1

1 Dept. of Electrical Engineering, National Taiwan University, Taipei, Taiwan

2 Institute of Information Science, Academia Sinica, Taipei, Taiwan

sclin@arbor.ee.ntu.edu.tw, miyen@iis.sinica.edu.tw, mschen@cc.ee.ntu.edu.tw

Abstract. In this paper, we propose a method for online subsequence
matching between histogram-based stream synopsis structures under the
dynamic warping distance. Given a query synopsis pattern, the work
continuously identiﬁes all the matching subsequences for a stream as the
histograms are generated. To eﬀectively reduce the computation time, we
design a Weighted Dynamic Time Warping (WDTW) algorithm which
computes the warping distance directly between two histogram-based
synopses. Our experiments on real datasets show that the proposed
method signiﬁcantly speeds up the pattern matching by sacriﬁcing a
little accuracy.

1 Introduction

Subsequence matching is a popular application in a data stream environment
such as sensor network monitoring and ﬁnancial data analysis. When given a
query sequence, users would have great interests in continuously monitoring
similar subsequences when a data stream keeps evolving. Therefore, a real-time
and space-saving approach is required.

The similarity measurement is an important factor of the subsequence match-
ing. Compared with the Euclidean distance, the dynamic time warping (DTW) [1]
distance is more robust since it oﬀers elastic scaling and shifting capabilities in
time axis. To match two sequences of length M and N respectively, an intuitive
solution is to compute the DTW distances of all possible matchings. However,
the time complexity of this method is O(M N 3) since it costs O(M N ) to obtain
a DTW distance.

Various types of DTW algorithms on subsequence matching have been pro-
posed [2, 3]. However, it is impractical for stream applications to preprocess the
whole data in advance as these methods did. Hence, Sakurai et al. [4] develop
an online subsequence matching algorithm named SPRING, which is based on
the DTW algorithm with relaxed boundary constraints. Given a query sequence
of length M , SPRING spends O(M ) time to identify a matching subsequence at
each data point of a stream. However, for a stream of length N , the total time
cost of SPRING is O(M N ), which is heavy especially when N and M are large.
Searching for a better solution, we notice a growing interest in synopsis tech-
niques [5] which meet the real-time requirement with a small accuracy loss in

stream applications. Similarly, synopsis structures for speeding up the DTW al-
gorithm are discussed. Keogh et al. proposed the PDTW algorithm which used a
piecewise aggregate approximation (PAA) approach with equal-width histogram-
based synopses to speeding up DTW [6]. In addition, synopsis structures with
arbitrary-width histograms are designed for better approximation accuracy. Ex-
amples include the adaptive piecewise constraint approximation (APCA) [7] and
the Haar wavelet reconstruction [8]. Chan et al. proposed a Haar wavelet-based
approximation method under the time warping distance, but the method cannot
deal with subsequences and has much overestimation [9].

For the above reasons, we present a new subsequence matching method under
the dynamic time warping distance for data streams that are summarized with an
arbitrary-width histogram-based synopsis structure. Each histogram contains a
value and a timestamp indicating the end of this histogram as shown in Fig. 1(a).
Given a query sequence Q with length M that summarized with m histograms,
we want to continuously report subsequences of stream with distances to Q not
greater than the threshold ǫ. We propose the Weighted Dynamic Time Warping
(WDTW) algorithm that derives these matching subsequences. In order not to
overestimate the warping distance, which could happen when one histogram of a
stream synopsis matches multiple histograms of the other one, we have designed
a method to lower the overestimated distance. The WDTW algorithm is shown
to have O(m) complexity in both time and space at the coming of each histogram
of the stream. After processing n histograms, the total time complexity of our
method is O(mn), where m ≪ M and n ≪ N for synopsis streams.

To evaluate the WDTW algorithm, we conduct two experiments using a real
dataset of time series. For comparisons, we implemented two other subsequence
matching methods, referred to as Synopsis-DTW and MicroCell-DTW. The ex-
perimental results show that, when compared with MicroCell-DTW, our method
and Synopsis-DTW have far low computational time costs. However, our method
has only a little trade-oﬀ in accuracy, which is not true for Synopsis-DTW.

2 Preliminaries

Dynamic Time Warping (DTW) is a widely used distance measurement in time
series applications. It can compute the distance between two series of diﬀerent
lengths since it solves the problem of shifting and scaling in the time axis. In
essence, the DTW distance between two series X = {xi|1 ≤ i ≤ N } and Y =
{yj|1 ≤ j ≤ M } is computed as follows. First, the distance between two data
points is deﬁned as d(i, j) = kxi −yjk. If xi matches yj, we deﬁne it as a matching
pair (i, j). A sequence of all matching pairs from (1,1) to (N,M) between series
X and Y is called a warping path W . Then, a warping distance for the path W

is Distance(W ) = P(i,j)∈W kxi − yjk.

Obviously, there exists multiple warping paths between X and Y . The DTW
distance between X and Y is deﬁned as the warping path with the smallest
Distance(W ), which we deﬁned as the optimal warping path. The dynamic

Xv

1

Xv

2

Xv

3

Xv

4

Q

2

1

5

2

6

3

7

1

50 54

56

2

6

24

3

2

X

3

4

Xt

1

Xt

2

Xt

3

Xt

4

time axis

(a)

16 6

(b)

(c)

Fig. 1. (a)Histogram-based synopsis stream, (b)Accumulated distance matrix, (c)The
dark shaded micro cells are overestimated distance area in directly accumulating dis-
tance

programming technique can solve the optimal warping path problem in O(M N )
time complexity. Please refer to [1] for more details.

3 Subsequence Matching over Stream Synopses

3.1 Problem Deﬁnition

Given a data stream of length N , an online stream is summarized as a se-
quence of histograms X = {x1, x2, .., xn}, each of which has a height xvi and
an endpoint xti as shown in Fig. 1(a). We can denote a stream synopsis as
X = {hxv1, xt1i , ..., hxvn, xtni}. X[ts : te] is deﬁned as a synopsis subsequence
which starts from time ts and ﬁnishes at te, where both ts and te have to be
endpoints of histograms of X. For ease of exposition, we denote a synopsis sub-
sequence as X[[i] : [j]] to mean that it starts from the ith to the jth histograms
of X. Given the notations, we now deﬁne the subsequence matching problem.

Deﬁnition 1 (Synopsis Subsequence Matching). Given an online running
stream synopsis X, a query synopsis subsequence Q, and a threshold ǫ, the goal
of synopsis subsequence matching is to locate all the subsequences X[ts : te] that
satisfy Dtw(X[ts : te], Q) ≤ ǫ

3.2 WDTW: A Weighted Algorithm for Dynamic Time Warping

To solve the above issue, we propose Weighted Dynamic Time Warping (WDTW)
method. When the distance between the stream synopsis X = {x1, x2, ..., xn}
and the query sequence Q = {q1, q2, ..., qm} is derived, an accumulated distance
matrix of n × m cells will be created to keep the histogram mapping informa-
tion sequentially. As Fig. 1(b) shows, each cell is divided by the bold-solid lines
according to width of each histogram. The cell (i, j) is constructed by the ith
histogram of X and jth histogram of Q. The size of each cell is diﬀerent due to

j-1

j

j-1

j

j-1

j

i-1

i

Dd

i-1

i

Dl

i-1

i

Du

(a) Case1: diagonal cell

(b) Case2: left cell

(c) Case3: up cell

Fig. 2. Three alternatives for each matching procedure

the diﬀerent width of each histogram. Therefore, each cell can be further divided
into multiple square micro cells with side lengths equal to one time unit. For
example, in Fig. 1(b), the shaded cell (3, 3) contains 4 × 2 micro cells. Later we
will show that in fact only the latest two rows of these cells need to be kept.

Similar to DTW, WDTW also works in a dynamic programming way. Intu-
itively, the warping distance at each cell is directly derived from three neighbor
cells of various sizes in the matching procedure. However, this will result in over-
estimated distance. Using Fig. 1(c) as an example, if we directly compute the
accumulating warping distance of the cell (3,3) from the cell (3,2), all the light
and dark shaded micro cells will be counted in. In fact, the distance contributed
by the dark shaded micro cells are redundant and should be eliminated.

To lower the overestimated distance, our WDTW works as follows. First, we
deﬁne D(i, j) as the minimum accumulated distance between X[[s] : [i]] and
Q[[1] : [j]], s = 1, 2, ..., i,

D(i, j) = 


0,
∞,
min{Dd(i, j), Dl(i, j), Du(i, j)}, otherwise.

if j = 0,
if i = 0, j 6= 0,

(1)

where Dd(i, j), Dl(i, j), and Du(i, j) denote the minimum distances for cell
(i, j) with warping paths through the cell (i − 1, j − 1), (i, j − 1), and (i − 1, j)
respectively. We now discuss how to compute these distances case by case.
Case 1: Minimum Distance Path from the Diagonal Cell

In this case, the warping path comes from the cell (i − 1, j − 1) to the current
cell (i, j) as Fig. 2(a) shows. The path implies that the histogram xi−1 matches
the histogram qj−1 and xi matches qj. The distance Dd(i, j) can de obtained
from sum of D(i − 1, j − 1) and the distance of the cell (i, j).

The sub-optimal path of the current cell (i, j) passes max{lxi, lqj} micro
cells, where lxi and lqj are the length of histogram xi and qj respectively.
The micro cells passed by the sub-optimal path are called steps in the rest
of this paper. Consequently, we can obtain the accumulated distance Dd(i, j) =
D(i − 1, j − 1) + di,j × max{lxi, lqj}, where di,j = kxvi − qvjk. For example
in Fig.1(b), the D(3, 3) in the shaded area can be computed as: Dd(3, 3) =
D(2, 2) + d3,3 × max{lx3, lq3} = 6 + (4 − 6)2 × 4 = 22.
(cid:4)

Case 2: Minimum Distance Path from the Left Cell

Q
j-1

j

s

Q
j-1

j

s

X

i

Q

s

j

X

i

t

i

X

s

Q

j

X

t

i

(a) lxi ≤ Pj

k=s lqk

(b) lxi > Pj

k=s lqk

(c) Ev(i, j − 1) = 0

(d) Ev(i, j −1) 6= 0

Fig. 3. (a)(b) are two kinds of cell combinations, and (c)(d) are examples used in case
2. The shaded areas are passed by warping paths and the dark shaded areas stand for
Ev for each cell.

The warping path from the cell (i, j − 1) to cell (i, j), as shown in Fig. 2(b),
denotes that xi matches the consecutive histograms qj−1 and qj. We use a com-
bined calculation of the consecutive histograms in a row to lower the overesti-
mated distance of Dl(i, j). Without loss of generality, we assume that the start
histogram of these consecutive ones is qs. Our major insight is that the consec-
utive histograms that match the same histogram xi can be combined. In other
words, the consecutive cells (i, s) to (i, j), where s < j, will be considered as a
cell combination, where the sub-optimal warping path Ω goes from the upmost-
leftmost micro cell of (i, s) to the bottommost-rightmost micro cell of (i, j).

Deﬁnition 2 (The Adjustable Distance in the Vertical Direction). For
the warping path passes from the cell (i, s) to the cell (i, j), where s is the smallest
index of these consecutive ones as a combination, the value Ev(i, j) is deﬁned to
represent the adjustable distance of cell (i, j) in the vertical direction as follows.

Ev(i, j) = (cid:26) 0

min{di,s, ..., di,j} × (lxi −Pj

,if lxi ≤ Pj

k=s lqk) ,otherwise

k=s lqk

(2)

Lemma 1. The total distance of the sub-path, in a cell combination from (i, s)

k=s (di,k × lqk) + E(i, j).

k=s lqk} steps (micro cells). If Pj

to (i, j), of any warping path that contains it is: Pj
max{lxi,Pj
distance of the sub-path would be Pj
lxi > Pj
to pass further lxi −Pj
lxi −Pj
Therefore, the total distance of the sub-path is Pj

Proof. Based on case 1, the sub-optimal path of the cell combination passes
k=s lqk ≥ lxi as Fig.3(a) shows, the
k=s (di,k × lqk) and Ev(i, j) would be 0. If
k=s lqk as Fig.3(b) shows, in addition to the diagonal steps, the path has
k=s lyk vertical steps. In order to obtain the optimal path,
the vertical steps must be in the cell which has minimum di,k, where k is from
s to j. In this condition, the adjustable distance in vertical direction is dmin ×
k=s lyk = Ev(i, j), which is the dark shaded area in Fig.3(b) for example.
k=s (di,k × lqk) + Ev(i, j). (cid:3)

In sum, Lemma 2 shows how to calculate the value of Dl(i, j).

Lemma 2. The accumulated distance Dl(i, j), where the path comes from the
cell (i, j − 1), can be obtained with following equation in O(1) time.

Dl(i, j) = D(i, j − 1) − Ev(i, j − 1) + di,j × lqj + Ev(i, j)

(3)

Proof. Without loss of generality, for the sub-path from the cell (t, s) to the
cell (i, j), where t ≤ i and s < j, there are two cases of Ev(i, j − 1). When
Ev(i, j − 1) = 0 as Fig. 3(a) and 3(c) show, no adjustable distance in the vertical
direction should be distributed to the next cell. Hence, Ev(i, j) is also equal to
0, and Eq. (3) is obtained in this case.

When Ev(i, j − 1) 6= 0, as the dark shaded area shown in Fig. 3(b) and 3(d),
the vertical steps in the previous cells can be distributed to the cell (i, j). With
Lemma 1 and Deﬁnition 2, Dl(i, j) can be obtained as follows.

Dl(i, j) = D(t − 1, s − 1) +

i−1

Xk=t

(dk,s × lxk) +

j

Xk=s

(di,k × lqk) + Ev(i, j)

= D(i, j − 1) − Ev(i, j − 1) + di,j × lqj + Ev(i, j)

(cid:3)

Based on Lemma 2, the information required to calculate Dl(i, j) is only
stored in cell (i, j) and (i, j − 1). Since the computation time of El(i, j) and
El(i, j − 1) is constant, Dl(i, j) is obtained in constant time. We give an example
of this case. In Fig. 1(b), Ev(3, 3) = min{d3,2, d3,3} × (lx3 − lq2 − lq3) = 1 × (3 −
2) = 1, Dl(3, 3) = D(3, 2)−Ev(3, 2)+d3,3×lq3+Ev(3, 3) = 6−3+4×2+1 = 12. (cid:4)

Case 3: Minimum Distance Path from the Up Cell

In this case, the warping path passes through cell (i − 1, j) as Fig.2(c) shows.
Since this case is similar to case 2 despite the consecutive cells are in a col-
umn, Du(i, j) can also be derived in constant time. In Fig. 1(b), Eh(3, 3) = 0,
Du(3, 3) = D(2, 3) − Eh(2, 3) + d3,3 × lx3 + Eh(3, 3) = 24 − 0 + 1 × 4 + 0 = 28. (cid:4)

After deriving the distance values of the three cases, the minimum accu-
mulated distance can be obtained. Continuing the previous example, D(3, 3) =
min{Dd(3, 3), Dl(3, 3), Du(3, 3)} = min{22, 12, 28} = 12.

We now describe how WDTW identiﬁes matching subsequences. For each
synopsis histogram xi arriving at time ti, WDTW computes the ith row of
the accumulated distance matrix D(i, j) where j = 1, 2, ..., m. Then, the warp-
ing distance of the most similar subsequence, X[ts : ti], to Q is Dtw(X[ts :
ti], Q) = D(i, m). To get the start time ts, each cell (i, j) keeps the start time
index where the warping distance comes from in the matrix S(i, j). Therefore,
when constructing the warping path, the start and end time of the most sim-
ilar subsequence are kept in the last cell (i, m) of this path. For example, in
Fig. 1(b), ts = S(3, 2) = S(2, 1) = t2. Hence, X[t2 : t3] is reported at t3 if
Dtw(X[t2 : t3], Q) ≤ ǫ.

Notice that as we compute D(i, j), S(i, j) is also obtained. Since the com-
putation cost of each D(i, j) and S(i, j) is O(1), the computation time of m
histograms is O(m). Also, only the information of cell(i − 1, j − 1),(i, j − 1), and
(i − 1, j) is used. Therefore, WDTW only needs to keep the latest two rows of
cells, i.e., O(2 × m) = O(m) in space.

Error Rate

WDTW
MicroCell−DTW
Synopsis−DTW

0.2

0.15

0.1

0.05

e
t
a
r
 
r
o
r
r

E

x 104

Execution Time

 

WDTW
MicroCell−DTW
Synopsis−DTW

3

2

1

)
s
m

i

(
 
e
m
T
n
o

 

i
t

u
c
e
x
E

0

1

0.8

0.6
0.4
Synopsis rate

0.2

0

0

 
1

0.8

0.6

0.4

Synopsis rate

0.2

Fig. 4. Error rate and execution time at diﬀerent synopsis rates

4 Performance Evaluation

4.1 Experiment Setup and Performance Metrics

The real datasets are downloaded from the UCR Time Series Classiﬁcation /
Clustering Archive [10]. We choose time series in the posture dataset. The ﬁrst
pattern in each series was used as the query patterns with length M = 1024,
while the rest part of the series as data streams with length N = 32768. The
synopsis histograms in the following experiments were built by Haar wavelet
decomposition with varied synopsis rate [8], which is deﬁned as a ratio of the
number of histograms to the number of points in the original stream.

We compared our algorithm with two methods: MicroCell-DTW and Synopsis-
DTW. MicroCell-DTW divided each histogram into multiple one-time-unit his-
tograms. It computed the warping distance based on micro cells, not the cells,
and the matching problem was solved using the SPRING method [4]. On the
other hand, Synopsis-DTW computed warping distance directly on the cells as
WDTW did, but was regardless of handling the overestimated distance.

4.2 Experimental Results

The ﬁrst experiment examined the accuracy of WDTW and Synopsis-DTW.
The subsequences produced by MicroCell-DTW were regarded as the benchmark
since it produced the correct warping distance based on the synopsis histograms.
The error rate is deﬁned as the ratio of the sum of false alarms and misses to
the number of correct subsequences and the reported subsequences by either
WDTW or Synopsis-DTW. For each missed or false alarmed subsequence, the
penalty is the ratio of the time interval of the false alarmed/missed part to the
whole length of itself.

The results were shown in Fig. 4(a). When the synopsis rate decreased, the
error rate of Synopsis-DTW increased signiﬁcantly. In contrast, the error rate of
WDTW increased much slightly. For example, the error rate of WDTW is 2.2%
while that of Synopsis-DTW is up to 19.7% when the synopsis rate is 0.06. This
shows the importance of dealing with the overestimated distance.

The second experiment examined the speed of the three algorithms. The
results are in Fig. 4(b). MicroCell-DTW was independent of the synopsis rate
since it examined each micro cells of a stream, where the number is equal to
the original stream length. Under the synopsis rate of 0.06, MicroCell-DTW can
only process 0.85 histograms each millisecond. In contrast, WDTW can pro-
cess 141 histograms under the same synopsis rate, which is 165 times faster
than MicroCell-DTW did. In other words, WDTW processed the online subse-
quence matching 165 times faster than MicroCell-DTW did. On the other hand,
WDTW and Synipsis-DTW had almost the same computation cost, which de-
creased along with the synopsis rates. This shows that the processing time of
the overestimated distance is very small. Concluded from Fig. 4(a) and 4(b),
WDTW processes the online subsequence matching eﬃciently while sacriﬁcing
only a very little accuracy.

5 Conclusion

We presented WDTW, an eﬃcient online subsequence matching algorithm un-
der dynamic time warping in a streaming environment. Once a various-width
synopsis histogram of a stream is generated, according to the query sequence,
WDTW reports all the matching subsequences. The experimental results show
that when compared with MicroCell-DTW and Synopsis-DTW, WDTW has a
low computation cost to meet the time and space constraints of streams, with a
little trade-oﬀ in accuracy.

References

1. Sakoe, H.: Dynamic programming algorithm optimization for spoken word recog-

nition. IEEE Transactions on Acoustics, Speech, and Signal Processing (1978)

2. Chen, Y., Nascimento, M.A., Chin, B., Anthony, O., Tung, K.H.: Spade: On shape-

based pattern detection in streaming time series. Proc. of ICDE (2007)

3. Han, W.S., Lee, J., Moon, Y.S., Jiang, H.: Ranked subsequence matching in time-

series databases. Proc. of VLDB (2007)

4. Sakurai, Y., Faloutsos, C., Yamamuro, M.: Stream monitoring under the time

warping distance. Proc. of ICDE (2007)

5. Aggarwal, C.C., Yu, P.S.: A survey of synopsis construction in data streams.

Advances in Database Systems (2009)

6. Keogh, E., Pazzani, M.: Scaling up dynamic time warping for datamining appli-

cations. Proc. of the SIGKDD (2000)

7. Keogh, E., Chakrabarti, K., Mehrotra, S., Pazzani, M.: Locally adaptive dimen-
sionality reduction for indexing large time series databases. Proc. of SIGMOD
(2001)

8. Burrus, C.S., Gopinath, R.A., Guo, H.:

Introduction to wavelets and wavelet

transforms: A primer. Prentice Hall (1997)

9. Chan, F.K.P., chee Fu, A.W., Yu, C.: Haar wavelets for eﬃcient similarity search

of time-series: with and without time warping. IEEE TKDE (2003)

10. Keogh, E., Xi, X., Wei, L., Ratanamahatana, C.A.: Ucr time series classiﬁca-

tion/clustering archive. http://www.cs.ucr.edu/∼eamonn/time series data/


