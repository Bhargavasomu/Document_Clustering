Spatial Clustering with Obstacles Constraints  

by Dynamic Piecewise-Mapped and  

Nonlinear Inertia Weights PSO 

Xueping Zhang1, Haohua Du2, and Jiayao Wang1,3 

1 School of Information Science and Engineering, Henan University of Technology,  

2 School of Computer Science and Engineering, Beihang University,Beijing 100191, China 

3 School of Surveying and Mapping, PLA Information Engineering University,  

Zhengzhou 450052, China 

Zhengzhou 450052, China 

zhang_xpcn@yahoo.com.cn 

Abstract.  Spatial  clustering  with  constraints  has  been  a  new  topic  in  spatial 
data mining. A novel Spatial Clustering with Obstacles Constraints (SCOC) by 
dynamic piecewise-mapped and nonlinear inertia weights particle swarm opti-
mization is proposed in this paper. The experiments show that the algorithm can 
not only give attention to higher local constringency speed and stronger global 
optimum search, but also get down to the obstacles constraints and practicalities 
of  spatial  clustering;  and  it  performs  better  than  PSO  K-Medoids  SCOC  in 
terms of quantization error and has higher constringency speed than Genetic K-
Medoids SCOC. 

Keywords: Spatial Clustering with Obstacles Constraints, Particle Swarm Op-
timization, Dynamic Piecewise Linear Chaotic Map, Dynamic Nonlinear Inertia 
Weights. 

1   Introduction 

Spatial clustering with constraints has been a new topic in spatial data mining. Spatial 
clustering with constraints has two kinds of forms [1]. One kind is Spatial Clustering 
with  Obstacles  Constraints  (SCOC),  such  as  bridge,  river,  and  highway  etc.  whose 
impact  on  the  result  should  be  considered  in  the  clustering  process  of  large  spatial 
data. Ignoring the constraints leads to incorrect interpretation of the correlation among 
data points. The other kind is spatial clustering with handling operational constraints, 
it consider some operation limiting conditions in the clustering process. In this paper, 
we mainly discuss SCOC. 

Since K.H.Tung put forward a clustering question COE (Clustering with Obstacles 
Entities) [2] in 2001, a new studying direction in the field of clustering research have 
been  opened  up.  To  the  best  of  our  knowledge,  only  four  clustering  algorithms  
for  clustering  spatial  data  with  obstacles  constraints  have  been  proposed  very  re-
cently:  COD-CLARANS  [2]  based  on  the  Partitioning  approach  of  CLARANS, 

M.J. Zaki et al. (Eds.): PAKDD 2010, Part I, LNAI 6118, pp. 254–261, 2010. 
© Springer-Verlag Berlin Heidelberg 2010 

 

SCOC by Dynamic Piecewise-Mapped and Nonlinear Inertia Weights PSO 

255 

AUTOCLUST+  [3]  based  on  the  Graph  partitioning  method  of  AUTOCLUST, 
DBCluC  [4-5]  based  on  the  Density-based  algorithm,  and  GKSCOC  [6]  based  on  
Genetic  algorithms  (GAs)  and  Partitioning  approach  of  K-Medoids.  Although  these 
algorithms  can  deal  with  some  obstacles  in  the  clustering  process,  many  questions 
exist in them [6].  

PKSCOC  based  on  Particle  Swarm  Optimization  (PSO)  and  K-Medoids  is  pre-
sented [7] by us. However, the performance of simple PSO depends on its parameters, 
it often getting into local optimum and fails to converge to global optimum. A lot of 
improved  methods  were  presented  by  many  scholars,  e.g.  the  paper  [8-9]  presented 
the Quantum PSO algorithm, and the paper [10-12] presented the Chaotic PSO algo-
rithm.  Recently,  Dynamic  Piecewise-mapped  and  Nonlinear  Inertia  Weights  PSO 
(PNPSO)  is  proposed  in  [13].  Experiments  and  comparisons  demonstrated  that 
PNPSO outperformed several other  well-known improved  PSO algorithms on  many 
famous benchmark problems in all cases. 

This  article  developed  a  novel  spatial  clustering  with  obstacles  constraints  by 
PNPSO to cluster spatial data with obstacles constraints, which called PNPKSCOC. 
The contrastive experiments show that PNPKSCOC is better than PKSCOC in terms 
of quantization error and has higher constringency speed than GKSCOC. 

The remainder of the paper is organized as follows. Section 2 introduces PNPSO 
algorithm.  Section  3  presents  PNPKSCOC.  The  performances  of  PNPKSCOC  are 
showed in Section 4, and Section 5 concludes the paper. 

2   Dynamic Piecewise-Mapped and Nonlinear Inertia Weights PSO 

2.1   Classical PSO  

i

1

PSO is a population-based optimization method first proposed by Kennedy and Eber-
hart. The mathematic description of PSO is as the following. Suppose the dimension 
the  searching  space 
of 
is  n.  Vector 
is  D, 
=
represents 
and 
(
)
x
X
i
=
is its best position searched by now, and the whole particle 
)
,
pbest
i
swarm's 
position 
.Vector 
is the position change rate of the  thi particle. Each particle updates 
,
V
v v
i
i
i
its position according to the following formulas: 

,
,
x
K
2
i
(
,
p
p
1
2
i
i
best 
,
,
v
iD

the  number  of 
position 

the  particles 
of 

the 

represented 

thi particle 

x
iD
,

K

 
p
iD

gbest

g

)D

(

g g
1

,

2

,

2

K

,

K

=

(

as

=

1

)

,

the 

is 

v
id

(
t

+ =
1)

wv
id

( )
t

+

c

1

rand

()[

p t
id

( ) -

x
id

( )]  +
t

c

rand

()[

2

g t

( ) -

d

x
id

( )]
t

        (1) 

x
id

(
t

+ =
1)

x
id

( )
t

+

v
id

(
t

+

1) ,  1

≤ ≤

i

,  1
n

≤ ≤

d D

                           (2) 

where 

c and 
1

c are positive constant parameters, 

2

Rand  is a random function with 

()

the range [0, 1], and  w  is the inertia weight. Eq.1 is used to calculate the particle's 
new velocity, the particle flies toward a new position according to Eq.2.  

256 

X. Zhang, H. Du, and J. Wang 

2.2   Coordinate PSO with Dynamic Piecewise Linear Chaotic Map and Dynamic 

Nonlinear Inertia Weights 

2.2.1   Dynamic Piecewise Linear Chaotic Map 
The well-known Piecewise linear chaotic map is defined as follows [10]: 

x
t

+
1

⎧= ⎨ −
⎩

(1

/
x
p
c
t
) / (1
x
t

,
−

∈
x
t
),
p
c

(0,
x
t

)
p
c
∈
(
p
c

,1)

                                (3) 

cp  is the control parameter and  X  is a variable. Although Eq.3 is determinis-
where 
. The newly in-
tic, it exhibits chaotic dynamics in (0, 1) when
troduced  dynamic  Piecewise  linear  chaotic  map  [14]  is  incorporated  into  the  PSO 
inertia weight which is described in equations (4) and (5). 

(0, 0.5)

(0.5,1)

cp ∈

∪

=

α α

  

max

−

α

(

max

−

α

)

min

⎛
⎜
⎝

iter
iter

max

⎞
⎟
⎠

                                  (4) 

= + −

w α

(1

α Pmap
)

                                                    (5) 

where  α  is the dynamic chaotic inertia weight adjustment factor,  maxα
 rep-
resent the maximum and minimum values of  α  respectively,  iter  is the current itera-
tion number, 
Piecewise linear chaotic map. 

 is the maximum iteration number, and  Pmap  is the result of 

 and  minα

iter

max

2.2.2   Dynamic Nonlinear Equations 
To  achieve  trade-off  between  exploration  and  exploitation,  two  types  of  dynamic 
nonlinear inertia weights are introduced [13]. In this paper, the first type is proposed 
in equations (6) and (7): 

                   

dnl

=

dnl

min

+

(

dnl

max

−

dnl

min

)

⎛
⎜
⎝

iter
iter

max

⎞
⎟
⎠

                         (6) 

=

 

w w

min

+

(

w

max

−

w

min

)

⎛
⎜
⎝

iter

−

iter

max
iter

max

dnl

⎞
⎟
⎠

                             (7) 

where  dnl represents the dynamic nonlinear factor,  w  represents  the inertia  weight, 
maxw  and  minw  represent the maximum and minimum value of  w  respectively, 
 
max
  represent  the  maximum  and  minimum  value  of  dnl   respectively, 
and 
iter represents the current iteration number, and 
 represents the maximum itera-
tion number. 

iter

dnl

dnl

max

min

2.2.3   Parallel Inertia Weight Adjustment 
To  avoid  the  premature  convergence  problem  and  to  achieve  the  balance  between 
global exploration and local exploitation, dynamic Piecewise linear chaotic map and 
dynamic  nonlinear  equations  are  used  in  parallel  to  dynamically  adjust  PSO  inertia 
weight w, which is described as follows[13]: 
 

 

SCOC by Dynamic Piecewise-Mapped and Nonlinear Inertia Weights PSO 

257 

Initialize all the parameters. 
repeat 

Evaluate the fitness values of all the particles 

if 

 

ff

f
i
Equations (4), (5), (1) and (2) are employed 

avg

Elseif 

f

i

f≤

 

avg

Equations (6), (7), (1) and (2) are employed 

endif 

until (a termination criterion is met) 

if is the fitness value of particle  i  and 

where 
whole population. 

f

avg

 is the average fitness value of the 

3   Spatial Clustering with Obstacles Constraints by PNPSO  

3.1   Motivating Concepts 

To  derive  a  more  efficient  algorithm  for  SCOC,  the  following  definitions  are  first 
introduced. 

Definition 1 ( Visibility graph). Given a set of m obstacle,
bility graph is a graph 
sponding node in  V , and two nodes  1v and 
only if the corresponding vertices they represent are visible to each other. 

,the visi-
 such that each vertex of the obstacles has a corre-
2v  in  V are joined by an edge in  E if and 

O o o
2

VG V E

)m
o

K

,

1

)

,

=

(

,

,

=

(

To generateVG , we use VPIA (VGRAPH Point Incorporation Algorithm) as pre-

sented in [14].  

Definition 2 (Obstructed distance). Given point p and point q , the obstructed distance 
od p q is  defined  as  the  length  of  the  shortest  Euclidean  path  between  two 
points p and  q  without cutting through any obstacles. 

( , )

We can use Dijkstra Algorithm to compute obstructed distance. The simulation re-

sult is in Fig.1 and the red solid line represents the obstructed distance we got. 

v1 

v2 

O1 

v3 

p 

 

O2 

v4 

v5 

v1 

v2 

O1 

q

p

  

v3 

O2 

v4 

v5 

q 

 

Fig. 1. Visibility graph and Obstructed distance 

258 

X. Zhang, H. Du, and J. Wang 

3.2   Spatial Clustering with Obstacles Constraints by Improved K-Medoids 

K-Medoids algorithm is adopted for SCOC to avoid cluster center falling on the ob-
stacle. Square-error function is adopted to estimate the clustering quality, and its defi-
nition can be defined as: 

                      

Nc
= ∑ ∑
= ∈
1
p C j
where  N c is the number of cluster C j ,  m
the direct Euclidean distance between the two points p and q . 

(
d p m j

))

E

2

j

(

j

,

                                    (8) 

is the cluster centre of cluster C j , 

d p q  is 

( , )

To  handle  obstacle  constraints,  accordingly,  criterion  function  for  estimating  the 

quality of spatial clustering with obstacles constraints can be revised as: 

  

E

o

N
c
= ∑
=

j

∑
∈
p C

1

j

(

d

o

(

p m

,

2

))

j

                                           (9) 

where 

od p q is the obstructed distance between point p and point q . 

( , )

The method of IKSCOC is adopted as follows [4]. 
1. Select  N c objects to be cluster centers at random;  
2. Assign remaining objects to nearest cluster center; 
3. Calculate oE according to Eq.9; 
4. While (
5.   Select a not centering point to replace the cluster center  m

oE changed) do {Let current

E E=

;  

o

 randomly;  

j

6.   Assign objects to the nearest center; 
7.   Calculate E according to Eq.8; 
8.   If  E > current E , go to 5;  
9.   Calculate oE ; 
10.   If 

oE < current E , form new cluster centers}. 

While IKSCOC still inherits two shortcomings, one is selecting initial value randomly 
may  cause  different  results  of  the  spatial  clustering  and  even  have  no  solution,  the 
other is that it only gives attention to local constringency and is sensitive to an outlier.  

3.3   Spatial Clustering with Obstacles Constraints Based on PNPSO and 

Improved K-Medoids  

In the context of clustering, a single particle represents the  N c cluster centroid. That 
is, each particle 

iX  is constructed as follows: 
                      
m
ij

,...,

m
1
i

=

X

(

i

,...,

ijm refers to the 

where 
objective function is defined as follows: 

thj cluster centroid of the 

m
iN
thi

)

                                          (10) 

c

 particle in cluster

ijC . Here, the 

 

SCOC by Dynamic Piecewise-Mapped and Nonlinear Inertia Weights PSO 

259 

                           

=

1

(
f x
i

)

J

i

                                                  (11) 

                      

∑
∈
p C
ij
The PNPKSCOC is developed as follows. 

1

J

j

i

N
c
= ∑
=

d

o

(

,
p m

)  

j

                                  (12) 

1. Execute the IKSCOC algorithm to initialize one particle to contain  N c  selected 

cluster centroids; 

2.  Initialize  the  other  particles  of  the  swarm  to  contain  N c   selected  cluster  cen-

troids at random; 
1t =  to 

3.  For 

t

max

do { 

=

min

∀ =
c

1,...,

N
c

{
d p m
o
ic

( ,

}
)

; 

Update particles using equations (4), (5), (1) and (2);  
f≤

Update particles using equations (6), (7), (1) and (2) ; 

4.    For  i = 1 to no_of_particles do { 
5.       For each object p do { 
d p m ;  
6.         Calculate
7.   Assign object p  to cluster 

(

)

,

ij

o

i

i

f

avg

( ,

d p m
o
ij

ijC  such that 

)
8.       Evaluate fitness of particle according to Eq.11; 
9.       if 
ff
avg
10.      Elseif 
f
11.      Update  Pbest  ; 
12.      Update  Pgbest ; 
13.      If  ||v|| 
14.   Select two other particles j  and  k  ( i
15.   Optimize new individuals using IKSCOC} 
16. Output. 

, terminate } 

ε≤

≠ ≠ ) randomly; 

k

j

where 

t

max

is the maximum number of iteration for PNPSO. STEP 16 is to improve 

the local constringency speed of PNPSO. 

4   Results and Discussion  

2

t

=

c
1

 , 

50

100

c=

n =

= ,  max
2

We  have  made  experiments  separately  by  K-Medoids,  IKSCOC,  GKSCOC, 
. Fig.2 shows the results 
PKSCOC, and PNPKSCOC.
on real Dataset. Fig.2 (a) shows the original data with river obstacles. Fig.2 (b) shows 
the  results  of  4  clusters  found  by  K-Medoids  without  considering  obstacles  con-
straints. Fig.2(c) shows 4 clusters found by IKSCOC. Fig.2(d) shows 4 clusters found 
by GKSCOC. Fig.2 (e) shows 4 clusters found by PNPKSCOC. Obviously, the results 
of the clustering illustrated in Fig.2(c), Fig.2 (d) , and Fig.2(e) have better practicali-
ties than that in Fig.2 (b), and the ones in Fig.2 (e) and Fig.2 (d) are both superior to 
the one in Fig.2(c). So, it can be drawn that PNPKSCOC is effective and has better 
practicalities. 

260 

X. Zhang, H. Du, and J. Wang 

Fig.3  is  the  value  of  J showed  in  every  experiment  on  Dataset1  by  IKSCOC, 
PKSCOC,  and  PNPKSCOC  respectively.  It  is  showed  that  IKSCOC  is  sensitive  to 
initial value and it constringes in different extremely local optimum points by starting 
at different initial value while PNPKSCOC constringes nearly in the same optimum 
points at each time, and PNPKSCOC is better than PKSCOC.  

Fig.4 is the constringency speed in one experiment on Dataset1. It is showed that 
PNPKSCOC  constringes  in  about  12  generations  while  GKSCOC  constringes  in 
nearly  25  generations.  So,  it  can  be  drawn  that  PNPKSCOC  is  effective  and  has 
higher constringency speed than GKSCOC.  

Therefore, we can draw the conclusion that PNPKSCOC has stronger global con-

stringent ability than PKSCOC and has higher convergence speed than GKSCOC. 

(a)                                                     (b)                                                    (c) 

    

    

 (d)                                                      (e)                                                    (f) 

   

  

 

      

Fig. 2. Clustering Dataset 

Fig. 3. PNPKSCOC vs. IKSCOC, PKSCOC        Fig. 4. PNPKSCOC vs. GKSCOC 

  

 

5   Conclusions 

In  this  paper,  we  developed  a  novel  spatial  clustering  with  obstacles  constraints  by 
dynamic piecewise-mapped and nonlinear inertia weights particle swarm optimization 
to  cluster  spatial  data  with  obstacles  constraints.  The  proposed  method  is  also  

 

SCOC by Dynamic Piecewise-Mapped and Nonlinear Inertia Weights PSO 

261 

compared  with  some  other  algorithms  to  demonstrate  its  efficiency  and  the  experi-
mental results are satisfied. 

 

Acknowledgments.  This  work  is  partially  supported  by  Program  for  New  Century 
Excellent Talents in University (NCET-08-0660),the Supporting Plan of Science and 
Technology 
(Number: 
2008HASTIT012),and the Opening Research Fund of Key Laboratory of Spatial Data 
Mining & Information Sharing of Ministry of Education (Number:200807). 

Innovation  Talent  of  Colleges 

in  Henna  Province 

References 

1.  Tung,  A.K.H.,  Han,  J.,  Lakshmanan,  L.V.S.,  Ng,  R.T.:  Constraint-Based  Clustering  in 
Large Databases. In: Van den Bussche, J., Vianu, V. (eds.) ICDT 2001. LNCS, vol. 1973, 
pp. 405–419. Springer, Heidelberg (2000) 

2.  Tung, A.K.H., Hou, J., Han, J.: Spatial Clustering in the Presence of Obstacles. In: Pro-
ceedings  of  International  Conference  on  Data  Engineering  (ICDE  2001),  Heidelberg,  
Germany, pp. 359–367 (2001) 

3.  Estivill-Castro, V., Lee, I.J.: AUTOCLUST+: Automatic Clustering of Point-Data Sets in 
the  Presence  of  Obstacles.  In:  Proceedings  of  the  International  Workshop  on  Temporal, 
Spatial and Spatial-Temporal Data Mining, Lyon, France, pp. 133–146 (2000) 

4.  Zaïane,  O.R.,  Lee,  C.H.:  Clustering  Spatial  Data  When  Facing  Physical  Constraints.  
In:  Proceedings  of  the  IEEE  International  Conference  on  Data  Mining  (ICDM  2002), 
Maebashi City, Japan, pp. 737–740 (2002) 

5.  Wang, X., Hamilton, H.J.: Gen and SynGeoDataGen Data Generators for Obstacle Facili-

tator Constrained Clustering (2004)  
http://Ftp.cs.uregina.ca/Research/Techreports/2004-08.pdf 

6.  Zhang, X., Wang, J., Wu, F., Fan, Z., Li, X.: A Novel Spatial Clustering with Obstacles 
Constraints  Based  on  Genetic  Algorithms  and  K-Medoids.  In:  Proceedings  of  the  Sixth  
International  Conference  on  Intelligent  Systems  Design  and  Applications  (ISDA  2006),  
Jinan Shandong, China, pp. 605–610 (2006) 

7.  Zhang, X., Wang, J.: A Novel Spatial Clustering with Obstacles Constraints Based on Par-
ticle  Swarm  Optimization  and  K-Medoids.  In:  Zhou,  Z.-H.,  Li,  H.,  Yang,  Q.  (eds.) 
PAKDD 2007. LNCS (LNAI), vol. 4426, pp. 1105–1113. Springer, Heidelberg (2007) 

8.  Sun,  J.,  Feng,  B.,  Xu,  W.:  Particle  Swarm  Optimization  with  particles  having  Quantum 
Behavior.  In:  Proceedings  of  Congress  on  Evolutionary  Computation,  Portland  (OR, 
USA), pp. 325–331 (2004) 

9.  Mikki,  S.M.,  Kishk,  A.A.:  Quantum  Particle  Swarm  Optimization  for  Electromagnetics. 

IEEE transactions on antennas and propagation 54(10), 2764–2775 (2006) 

10.  Baranovsky, A., Daems, D.: Design of one-dimensional chaotic maps with prescribed sta-
tistical properties. International Journal of Bifurcation and Chaos 5(6), 1585–1598 (1995) 
11.  Liu, B., Wang, L., Jin, Y.-H., Tang, F., Huang, D.-X.: Improved particle swarm optimiza-

tion combined with chaos. Chaos, Solitons and Fractals 25, 1261–1271 (2005) 

12.  Xiang,  T.,  Liao,  X.F.,  Wong,  K.W.:  An  improved  particle  swarm  optimization  algorithm 
combined with piecewise linear chaotic map. Appl. math. and Compute., 1637–1645 (2007) 
13.  Liu,  H.,  Su,  R.,  Gao,  Y.:  Coordinate  Particle  Swarm  Optimization  with  Dynamic  Piece-
wise-mapped  and  Nonlinear  Inertia  Weights.  In:  Proceedings  of  the  2009  International 
Conference on Artificial Intelligence and Computational Intelligence (AICI 2009), Shang-
hai, China, pp. 124–128 (2009) 

14.  Tokuta, A.: Extending the VGRAPH Algorithm for Robot Path Planning, 

http://wscg.zcu.cz/wscg98/papers98/Tokuta_98.pdf 


