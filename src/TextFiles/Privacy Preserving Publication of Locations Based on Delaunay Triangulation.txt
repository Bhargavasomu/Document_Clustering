Privacy Preserving Publication of Locations

Based on Delaunay Triangulation(cid:2)

Jun Luo1,2, Jinfei Liu3, and Li Xiong3

1 Shenzhen Institutes of Advanced Technology, Chinese Academy of Sciences, China

2 Huawei Noah’s Ark Laboratory, Hong Kong, China

3 Department of Mathematics & Computer Science, Emory University, Atlanta, USA

jun.luo@siat.ac.cn, jinfei.liu@emory.edu,

lxiong@mathcs.emory.edu

Abstract. The pervasive usage of LBS (Location Based Services) has caused
serious risk of personal privacy. In order to preserve the privacy of locations,
only the anonymized or perturbated data are published. At the same time, the
data mining results for the perturbated data should keep as close as possible to
the data mining results for the original data. In this paper, we propose a novel
perturbation method such that the Delaunay triangulation of the perturbated data
is the same as that of the original data. Theoretically, the Delaunay triangulation
of point data set presents the neighborhood relationships of points. Many data
mining algorithms strongly depend on the neighborhood relationships of points.
Our method is proved to be effective and efﬁcient by performing several popular
data mining algorithms such as KNN, K-means, DBSCAN.

Keywords: Privacy Preserving, Location, Delaunay Triangulation, Data Mining.

1 Introduction

Due to the rapid development of location sensing technology such as GPS, WiFi, GSM
and so on, huge amount of location data through GPS and mobile devices are pro-
duced every day. The ﬂood of location data provides the numerous opportunities for
data mining applications and geo-social networking applications. For example, mining
the trajectories of ﬂoating car data (FCD) in a city could help predict the trafﬁc conges-
tion and improve urban planning. For individual driver, we can analyze his/her driving
behavior to improve his/her proﬁt. Moreover, many popular mobile device applications
are based on locations such as FourSquare1, Google Latitude2, etc.

However, exposing location data of individuals could cause serious risk of personal
privacy. For example, Buchin et al. [1] provide an algorithm to ﬁnd the commuting
pattern for an individual by clustering his/her daily trajectories. With some extra in-
formation such as timestamps, we can easily identify his/her home and working place.

(cid:2) This research has been partially supported by NSF of China under project 11271351 and

AFOSR under grant FA9550-12-1-0240.

1 https://foursquare.com/
2 http://www.google.com/latitude

V.S. Tseng et al. (Eds.): PAKDD 2014, Part I, LNAI 8443, pp. 594–605, 2014.
c(cid:2) Springer International Publishing Switzerland 2014

Privacy Preserving Publication of Locations Based on Delaunay Triangulation

595

Another real world example about the risk of revealing location information in social
networking application is that thieves planned home invasions according to user’s loca-
tion information and his/her planned activity published in Facebook3.

The goals of data mining and privacy protection are often conﬂicting with each other
and can not be satisﬁed simultaneously. On the one hand, we want to mine meaningful
results from the dataset which requires the dataset to be precise. On the other hand, in
order to protect privacy, we usually need to modify the original dataset. There are two
widely adopted ways for modifying location data:

– cloaking, which hides a user’s location in a larger region.
– perturbation, which is accomplished by transforming one original value to another

new value.
A widely used privacy principle for cloaking is k-anonymity. A dataset is said to
satisfy k-anonymity [14] [13] if each record is indistinguishable from at least k−1 other
records with respect to certain identifying attributes. In the context of location cloaking,
k-anonymity guarantees that given a query, an attack based on the query location cannot
identify the query source with probability larger than 1/k among other k − 1 users.
The location anonymizer removes the ID of the user and transforms his location by a k-
anonymizing spatial region (k-ASR or ASR), which is an area that encloses the user that
issued the query, and at least k − 1 other users [7]. The cloaking based on k-anonymity
has the following shortcomings:

1. The location point is cloaked to a region. This causes trouble for point based data
mining algorithms such as k-means [9], Density Based Spatial Clustering of Ap-
plications with Noise (DBSCAN [4]), K-Nearest Neighbor (KNN [2]) and so on.
2. The result of cloaking based on k-anonymity could be a very large region even for
a rather small k if some points are in a sparse region, which could sacriﬁce the
accuracy of data mining results.

3. k-anonymity only protects the anonymity of the users, but may in fact disclose the

location of the user, if the cloaked area is small.

Perturbation [11] [15] has a long history in statistical disclosure control due to its
simplicity, efﬁciency and ability to preserve statistical
information. The method
proposed in this paper for privacy preserving data mining of location data falls in the
category of perturbation. Possible transformation functions include scaling, rotating,
translation, and their combinations [8]. All previous works on perturbation used the
same transformation function for all points. This is not reasonable for nonuniform dis-
tributed points (almost all real life location data are nonuniform distribution). For ex-
ample, one way is to perturb each point p by randomly moving it to another point p(cid:2)
inside a disk with radius r and center p. In this way, if the distance between two points is
less than 2r, after perturbation, those two points could change topological relationship
(left point becomes right point and right point becomes left point). This could cause se-
rious problem for point based data mining algorithms since the results of most of those
algorithms depend on the relative topological relationships.

3 http://www.wmur.com/Police-Thieves-Robbed-Homes-Based-On-

Facebook-Social-Media-Sites/-/9858568/11861116/-/
139tmu4/-/index.html

596

J. Luo, J. Liu, and L. Xiong

Delaunay triangulation has been widely used in computer graphics, GIS, motion
planning and so on. The Delaunay triangulation of a discrete point set P corresponds
to the dual graph of the Voronoi diagram for P [3]. The Voronoi diagram of n points
is the partition of plane into n subdivisions (called cells) such that each cell contains
one point (called site) and the closest site for all point in one cell is the site in that cell.
The relationship between Delaunay triangulation and Voronoi diagram is shown in Fig-
ure 1: there is an edge in Delaunay triangulation between two sites if and only if the two
cells corresponding to those two sites have common edge in Voronoi diagram (in other
words, two cells are neighbors). Since the Voronoi diagram captures the topological
relationships of points, the Delaunay triangulation also presents the neighborhood re-
lationships of points. Intuitively, if we can keep the Delaunay triangulation unchanged
after perturbation, the results of data mining algorithms based on neighborhood rela-
tionships of points will not change or have a very small change. That is the key idea
for our perturbation method. On the other hand, we want to maximize the size of the
perturbation region, i.e. the uncertainty of the user’s exact location, for maximum pri-
vacy protection given the constraint of maintaining Delaunay triangulation. The formal
deﬁnition of the problem we want to solve is as follows:
Problem 1. Given a set of n points S = {p1, p2, ..., pn}, we want to compute a con-
tinuous region Ri (perturbation region) as large as possible for each point such that for
i ∈ Ri, the topology structure of the Delaunay triangulation of the new point
any point p(cid:2)
= {p(cid:2)
set S(cid:2)
1, p(cid:2)
), is the same as that of the original point
set S, denoted as DT (S). We use DT (S) ∼ DT (S(cid:2)
) to denote the topology structure
of DT (S(cid:2)

) is the same as the topology structure of DT (S).

2, ..., p(cid:2)

n}, denoted as DT (S(cid:2)

pk

pi

pj

p(cid:2)

i

diagonal ﬂip

pl
(a)

p(cid:2)

j

p(cid:2)

k

p(cid:2)

l

(b)

Fig. 1. Delaunay triangulation (solid lines) is
the dual graph of Voronoi diagram (dashed
lines)

Fig. 2. Illustration of diagonal ﬂip from (a) to
(b)

The contributions of our paper are three-fold:

1. We present a novel perturbation method that guarantees the Delaunay triangula-
tion of the point set does not change, which means we can guarantee the utility of
privacy preserving data ming algorithms.

2. In our method, the perturbation region for all points are not uniform. Each point has
its own distinctive perturbation region that depends on the surrounding situation of
that point. Basically, if a point is located in a dense area, its perturbation region
will be much smaller than the point in a sparse area. This is different from existing
perturbation method that applies a uniform perturbation to each point.

Privacy Preserving Publication of Locations Based on Delaunay Triangulation

597

3. Since our method is point perturbation, it can be used in any point based data min-

ing algorithms.

The rest of this paper is organized as follows. Section 2 presents the algorithms of our
perturbation method and the analysis of the algorithms. Section 3 covers comprehensive
experiment evaluations. Finally, section 4 concludes and points out future directions for
research.

2 Algorithms for Computing Perturbation Area Ri and

Perturbated Point p(cid:2)
i.

In this section, we explain how to compute the perturbation area Ri for each point pi
and how to pertubate pi to p(cid:2)
i. First we solve Problem 1 for the simple case of four points
in section 2.1 and then give the solution for n points case in section 2.2. In section 2.3,
we show how to compute p(cid:2)

i based on Ri.

2.1 A Simple Case: Four Points

The reason why we choose four points is that four points is the simplest case that could
have diagonal ﬂip4. The analysis of n > 4 cases are based on the analysis of the simplest
case.
Suppose we only have four points S = {pi, pj, pk, pl} and they are in convex po-
sition. Without loss of generality, we assume pipj is the edge (diagonal) of Delau-
nay triangulation (see ﬁgure 2(a)). Now the problem is to ﬁnd a value r such that if
l) ≤ r, then DT (S) ∼ DT (S(cid:2)
d(pi, p(cid:2)
)
l} and d(., .) is the Euclidean distance between two points.
where S(cid:2)
Note the continuous region Ri for each point pi is the disk with the center pi and radius
r.

j) ≤ r, d(pk, p(cid:2)
i) ≤ r, d(pj, p(cid:2)
j, p(cid:2)
i, p(cid:2)
k, p(cid:2)

k) ≤ r and d(pl, p(cid:2)

= {p(cid:2)

In order to let DT (S) ∼ DT (S(cid:2)

), we need to prevent the diagonal ﬂip case (see ﬁg-
ure 2). That means we need to compute the largest r such that there is no diagonal ﬂip
(or to compute the smallest r that causes diagonal ﬂip). Therefore, for two adjacent tri-
angular faces pipjpk and pipjpl, we want to compute the smallest r that makes the four
points cocircular. This is equivalent to compute the circle that minimizes the maximum
distance to the four points, or to compute the annulus of minimum width containing
the points. It has been shown [5] [12], that the annulus of minimum width containing
a set of points has two points on the inner circle and two points on the outer circle,
interlacing angle-wise as seen from the center of the annulus (see ﬁgure 3). Therefore,
the center will be the intersection of the bisectors of pipj and pkpl. Obviously the value
of r can be computed in O(1) time.

2.2 n Points
For n points set S, there is simple solution based on the above algorithm. First we can
compute the DT (S). For each pair of adjacent triangle faces, we compute one radius as

4 Diagonal ﬂip means the topology structure or neighborhood relationship is changed (see ﬁgure

2). For more details, please refer to the computation geometry book [3].

598

J. Luo, J. Liu, and L. Xiong

pk

pi

pj

p(cid:2)

i

pi

pl

C3
C2

C1

p(cid:2)

j

pj

pk

p(cid:2)

k

p(cid:2)

l

pl

Fig. 3. The annulus of minimum width contain-
ing the four points

Fig. 4. The worst case scenario for four points

above such that no diagonal ﬂip happens if four points are perturbated within the circle
with that radius. Then for each point, there will be several radii. After computing all
radii for all pairs of adjacent triangle faces, we get the smallest radius r. Since this is
the smallest radius among all radii, no diagonal ﬂip happens if all points are perturbated
within the circle with radius r. In this way, all points have the uniform perturbation
radius. But actually, except for those four points which produces the smallest radius r,
all other points could be perturbated in a larger area. Notice for a point p ∈ S with
m incident edges in DT (S), there are at most 2m ways such that p is a vertex of one
pair of adjacent triangle faces, which means there are at most 2m radii for p. We can
get the smallest radius from those 2m radii for the radius of p. In this way, we can still
guarantee there is no diagonal ﬂip.

k , Dr1

l

and C2 be p(cid:2)

k , Dr1

i , Dr1
j , Dr1
k, p(cid:2)
j, p(cid:2)

Furthermore, we can improve the perturbation area for each point because in above
analysis, we assume the worst case scenario. For example, in Figure 4, suppose the
inner circle is C1 and the outer circle is C3 for the minimum width annulus contain-
ing four points pi, pj, pk, pl. Let the median axis of the annulus be the circle C2. Let
i , Dr1
four disks with radius r1 and center points pi, pj, pk, pl be Dr1
j , Dr1
l and the
k, p(cid:2)
j, p(cid:2)
i, p(cid:2)
tangent points between Dr1
l. Then only when
pi, pj, pk, pl move to p(cid:2)
i, p(cid:2)
l respectively, there is diagonal ﬂip. In other words,
pi, pj can not move out of C2 and pk, pl can not move into C2. Now if there is another
disk Dr2
k for point pk where r2 > r1 which is produced by other pair of adjacent tri-
k ∩ D2 such that there is no
angles, then we know pk can move inside Dr2
diagonal ﬂip (see Figure 5), where D2 is the disk corresponding to C2 and D2 is the
area outside of D2. Similarly, we can compute the larger perturbation area for pi, pj, pl.
There is only one small difference for pi, pj since pi, pj are in D2 while pk, pl are out-
i ∩ D2 where r3 is the
side of D2. Therefore we need to use Dr3
larger radius than r1 for pi which is produced by other pair of adjacent triangles related
to pi.
For a point p, if there are m cocentric disks with center p and radii r1, r2, ..., rm and
their corresponding media axis disks are D1, D2, ..., Dm, suppose r1 ≤ r2 ≤ ... ≤ rm
and the largest disk with radius rm and center p is D, then the perturbation area R for
p is

i ∩ D2 instead of Dr3

k \ D2 = Dr2

R = D ∩ D1(or D1) ∩ D2(or D2) ∩ ... ∩ Dm(or Dm)

Privacy Preserving Publication of Locations Based on Delaunay Triangulation

599

pk

Dr2
k

pi

pj

pl

D4

D

r4

D1

r3

r2
r1

p

D3

D2

Fig. 5. The larger perturbation area (shaded
area)

Fig. 6. The perturbation area (shaded area) for
p

If p ∈ Di, then we use Di in above formula, otherwise Di is used. See Figure 6 for
example. The perturbation area is much larger than the smallest disk with radius R.

The algorithm for computing Ri is shown in Algorithm 1.

Algorithm 1. Algorithm for computing Ri
Require:

The original point set S = p1, p2, ..., pn;

Ensure:

The cloaking regions R1, R2, ..., Rn;

Compute DT(S);
FOR each pair of adjacent triangles in DT(S) with vertices pi, pj , pk, pl and diagonal pipj

Compute the minimum width annulus containing pi, pj , pk, pl and the median axis disk Dmedian;

Compute corresponding perturbation disks Dr
ENDFOR
FOR each point pi

i , Dr

j , Dr

k, Dr

l with the same radius r;

Sort the m cocentric perturbation disks around pi according their radius and get the largest radius disk D;
Get the m median axis disks D1, D2, ..., Dm corresponding to m cocentric perturbation disks;
Compute Ri = D ∩ D1(or D1) ∩ D2(or D2) ∩ ... ∩ Dm(or Dm);

ENDFOR

Theorem 1. For any point p, the perturbation area R is larger than 0.
Proof. Since R = D ∩ D1(or D1) ∩ D2(or D2) ∩ ... ∩ Dm(or Dm) (i = 1, ..., m),
and p ∈ D and p ∈ Di(or Di), then at least p ∈ R. Actually, R at least includes the
(cid:2)
smallest disk with radius r1.

Theorem 2. The perturbation areas R1, R2, ..., Rn for a set of n points
S = {p1, p2, ..., pn} can be computed in O(n2) time.
Proof. The Delaunay triangulation of S can be computed in O(n log n) time [3]. For
each pair of adjacent faces in DT (S), the perturbation disks and corresponding one
medial axis disk for four points can be computed in O(1) time. Since there are O(n)
pairs of adjacent faces, there are O(n) perturbation disks and O(n) medial axis disks.

600

J. Luo, J. Liu, and L. Xiong

Each Ri is one face of arrangement of O(n) perturbation disks and O(n) medial axis
disks. The arrangement for O(n) disks can be computed in O(n log n+k) expected time
by using randomized incremental algorithm [6], where k is the number of intersection
points in the arrangement. In worst case, k = O(n2). But in reality, k could be much
(cid:2)
smaller (even linear, see Figure 11(b)).

Figure 7 shows the perturbation area for 12 points. Figure 8 shows the Delaunay
triangulations for original 12 points (solid lines) and for perturbated 12 points (dashed
lines).

Fig. 7. The perturbation area for 12 points

Fig. 8. The Delaunay triangulations for original
12 points (solid lines) and for perturbated 12
points (dashed lines)

2.3 Point Perturbation
After get perturbation region Ri, we need to perturbate pi inside Ri for publication. In
order to achieve maximum privacy protection, we perturbate pi to the boundary of Ri
as follows: choose a random angle θ ∈ [0, 2π], shoot a ray with angle θ and ﬁnd the
intersection point p(cid:2)
i be the perturbated point
(see Figure 9).

i of this ray with boundary of Ri, and let p(cid:2)

3 Experimental Evaluation

3.1 Data Set
We use three datasets from University of Eastern Finland’s clustering datasets5: Flame
(240 points), R15 (600 points) and Jain (373 points) for testing our method’s utility on
KNN, K-means and DBSCAN respectively. The reason we choose those three algo-
rithms is that KNN is the most popular neighborhood querying algorithm in database,
K-means and DBSCAN are two popular clustering algorithms in data mining. The other
important reason is that the results of those three algorithms all depends on the neigh-
borhood relationship between points. We also generate 29 synthetic datasets with the
number of points ranging from 100 to 100000 for testing the performance of our per-
turbation algorithm.

5 http://cs.joensuu.fi/sipu/datasets/

Privacy Preserving Publication of Locations Based on Delaunay Triangulation

601

3.2 Utility Results

The deﬁnition of utility varies for different privacy preserving data mining algorithms.
In this paper, we make use of the two well-known criteria, i.e., the precision and recall
rates [10]. We will give the deﬁnitions of precision and recall for privacy preserving
KNN, K-means, DBSCAN in the following three subsections and also give the experi-
mental results respectively.

Utility of Privacy Preserving KNN. For KNN, the precision and recall rate is deﬁned
as follows:

P recisionKN N =

RecallKN N =

||Q(pi) ∩ Q(pi(cid:2))||

||Q(pi(cid:2))||
||Q(pi) ∩ Q(pi(cid:2))||

||Q(pi)||

where Q(pi) is the set of points that are the K nearest neighbors of pi, pi(cid:2) is the per-
turbated point of pi. Note P recisionKN N = RecallKN N since ||Q(pi(cid:2))|| = ||Q(pi)||
for ﬁxed K. Therefore we only report precision for KNN. We perform 100 rounds of
perturbations and query KN N on each point and get the average value of precision:

(cid:2)m

(cid:2)n

APKN N =

j=1

||Q(pi)∩Q(pj
i(cid:2) )||

||Q(pj

i(cid:2) )||

i=1

m × n

where n is the number of query times (in this paper, we perform query on each
point, therefore n = 240 for Flame dataset) and m is the number of rounds of pertur-
bation (m = 100 in this paper), pj
i(cid:2) is the perturbated point of pi after the jth round
of perturbation. Therefore APKN N is the average precision rate per query. We test
P recisionKN N for K = 1, ..., 100. For comparison we also perform the uniform
purturbation with uniform distance rmax where
{d(pi, p(cid:2)

rmax = max

i ∈ ∂Ri}

i)|p(cid:2)

i

Figure 10 shows the precision rate of two perturbation methods for KNN algorithm.
We can see precision rate based on Delaunay triangulation AP DT
KN N is always better
than that of uniform perturbation AP Unif orm
KN N is 20 percent
higher than AP Unif orm
becomes
smaller. AP DT
= 3.93% when K = 100. Also when K become
larger, both AP Unif orm
KN N seem to converge. This is reasonable since the
K nearest neighbors may only change for the far away points (for example, the Kth
nearest point) no matter how the points are perturbated.

. When K becomes larger, AP DT

KN N − AP Unif orm

KN N − AP Unif orm

. When K < 10, AP DT

KN N
and AP DT

KN N

KN N

KN N

KN N

Utility of Privacy Preserving K-means. For K-means, we adopt B-CUBED algorithm
to compute the precision and recall rate of each point for clustering results:

P recisionpi

K−means =

||Ci ∩ Ci(cid:2)||

||Ci(cid:2)||

602

J. Luo, J. Liu, and L. Xiong

p(cid:2)

i

Ri

θ

pi

Fig. 9. Illustration of perturbation from pi to p(cid:2)

i Fig. 10. The utility of privacy preserving KNN.
x axis is K and y axis is APKNN . Red circle
curve is for uniform perturbation and black tri-
angle curve is for Delaunay triangulation based
perturbation.

Recallpi

K−means =

||Ci ∩ Ci(cid:2)||

||Ci||

where pi ∈ Ci, p(cid:2)
i is the perturbated point of pi. 100 rounds of pertur-
bations are performed. Therefore we can get the average value of precision and recall
rates per point:

i ∈ Ci(cid:2) and p(cid:2)

(cid:2)m

j=1

(cid:2)m

j=1

APK−means =

ARK−means =

i=1

(cid:2)n
m × n
(cid:2)n
m × n

i=1

||Ci∩C j
i ||
||C j
i ||

||Ci∩C j
i ||
||Ci||

i(cid:2) ∈ Cj

where n is the number of points and m is the number of rounds of perturbation, pi ∈
Ci, pj
i(cid:2) is the perturbated point of pi after the jth round of perturbation.
In this paper, we use R15 dataset for K-means algorithms. Since we already know there
are 15 clusters, we set k = 15 and get the results as shown in Table 1.

i(cid:2) and pj

Table 1. Average precision and recall rate for 15-means clustering on R15 dataset

DT

Uniform

AP 0.99951371 0.99419382
AR 0.99951316 0.9942013

We can see precision and recall rate of privacy preserving 15-means for DT based
perturbation are better than those for uniform perturbation with uniform radius rmax.
Since the precision and recall rate for uniform perturbation are already very high, it’s
very difﬁcult to achieve higher precision and recall rate for DT based perturbation.

Privacy Preserving Publication of Locations Based on Delaunay Triangulation

603

Utility of Privacy Preserving DBSCAN. For DBSCAN, the utility P recisionDBSCAN
is deﬁned as the same as P recisionK−means since they are both clustering algorithms.
The difference is that we don’t need to set the number of cluster K in DBSCAN. For
Jain dataset, there are two clusters for original dataset. DBSCAN requires two parame-
ters: ε and the minimum number of points required to form a cluster (minP ts). In our
experiments, we set ε = 2.4 and minP ts = 20 such that DBSCAN algorithm produces
two clusters over original Jain dataset. The results for the utility of uniform perturbation
and DT based perturbation are shown in Table 2.

Table 2. Average precision and recall rate for DBSCAN clustering on Jain dataset

DT Uniform

AP 1 0.76515634
AR 1 0.9349843

We can see the points in each cluster keep exactly same after DT based perturbation

while that could change a lot after uniform perturbation with uniform radius rmax.

3.3 Privacy

We deﬁne the privacy for DT based perturbation as follows: P =
where
Rj
i means the perturbation area for ith point after jth round of perturbation. Therefore
P means the average perturbation area for one point. However, P depends on the whole
area of point sets. In order to cancel out this effect, we deﬁne the privacy ratio Pr as
follows: Pr = P/Area(CH(S)) where CH(S) is the convex hull of point set S and
Area(CH(S)) is the area of the convex hull of S. The experimental results of privacy
for three datasets R15, Jain, F lame are listed in Table 3.

j=1

i=1 Rj

i

(cid:2)m

(cid:2)n
m×n

Table 3. Privacy for DT based perturbation

Jain

Flame

R15

P

0.0235319
Area(CH(S)) 639.819

0.0259528 0.000893764
132.049

138.938

Pr

3.6779E-05 1.96539E-04 6.43283E-06

We can see the average perturbation areas for Jain and Flame datasets are similar
while the average perturbation area for R15 dataset are much smaller which could be
caused by the higher average neighboring point density for each point in R15 dataset.
The other possible reason is there could be many degenerate cases in R15 dataset such
that many four points groups are cocircular (or almost cocircular).

604

J. Luo, J. Liu, and L. Xiong

(a)

(b)

(c)

Fig. 11. x axis is the number of points and y axis is the running time of computing (a) Delaunay
triangulations, (b) arrangement of perturbation areas, (c) total running time

3.4 Performance of Our Perturbation Algorithm

To test the performance of our perturbation algorithm, the 29 synthetic datasets are used
with various number of points from 100 to 100000. We perform all experiments on our
Thinkpad laptop with the following conﬁgurations: Ubuntu 13.04 operating system, 2
Gbyte of memory, 2.6GHz intel core i3 CPU. Since our perturbation algorithm mainly
consists of two parts: computing Delaunay triangulation and computing the arrange-
ment of perturbation areas, we give the results of running time for both parts and the
total running time as well.

Figure 11(a) shows the running time for Delaunay triangulation. It almost ﬁts the

theoretical bound of O(n log n) running time.

Figure 11(b) shows the running time for computing the arrangement of perturbation
areas. Although, theoretically the running time is O(n2) for the worst case, in practice,
the running time is almost linear.

Figure 11(c) shows the total running time. Since the computation of perturbation
areas is the dominant factor (for example, for 100000 points dataset, computing Delau-
nay triangulation only takes only around 2 seconds while computing the arrangement of
perturbation areas takes 4690 seconds), the total running time is also linear. Therefore,
in practice, our algorithm is very efﬁcient.

4 Conclusions and Future Work

In this paper, we present a novel method to address the problem of location privacy. Our
method achieves both high assurance privacy and good performance. Speciﬁcally, our
method perturbates each point distinctively according to its own environment instead of
uniform perturbation. In this way, the attackers are more difﬁcult to guess original loca-
tion. Furthermore our perturbation method guarantees that the Delaunay triangulation
of point set does not change, which means we can guarantee the utility of privacy pre-
serving data ming algorithms. We also develop a privacy model to analyze the degree of
privacy protection and evaluate the utilities of our approach through three popular data
mining algorithms. Extensive experiments show our method is effective and efﬁcient
for location based privacy preserving data mining.

Privacy Preserving Publication of Locations Based on Delaunay Triangulation

605

Several promising directions for future work exist. First of all, the perturbation region
or the perturbation distance for each point could be larger. We need to prove it theoret-
ically and ﬁnd the optimal values in terms of perturbation distance and area. Also we
can apply our method on other data mining algorithms to see whether our method is
a universal method for location based privacy preserving data mining algorithms. This
is signiﬁcant since many current methods are only good for one kind of data mining
algorithm.

References

1. Buchin, K., Buchin, M., Gudmundsson, J., L¨ofﬂer, M., Luo, J.: Detecting commuting pat-

terns by clustering subtrajectories. Int. J. Comput. Geometry Appl. 21(3), 253–282 (2011)

2. Cover, T., Hart, P.: Nearest neighbor pattern classiﬁcation. IEEE Transactions on Information

Theory 13(1), 21–27 (1967)

3. De Berg, M., Cheong, O., Van Kreveld, M., Overmars, M.: Computational geometry: algo-

rithms and applications. Springer-Verlag New York Incorporated (2008)

4. Ester, M., Kriegel, H.-P., Sander, J., Xu, X.: A density-based algorithm for discovering clus-

ters in large spatial databases with noise. In: KDD, pp. 226–231 (1996)

5. Garcia-Lopez, J., Ramos, P.A.: Fitting a set of points by a circle. In: Symposium on Compu-

tational Geometry, pp. 139–146 (1997)

6. Goodman, J., O’Rourke, J.: Handbook of discrete and computational geometry. Chapman &

Hall/CRC (2004)

7. Kalnis, P., Ghinita, G., Mouratidis, K., Papadias, D.: Preventing location-based identity in-
ference in anonymous spatial queries. IEEE Trans. Knowl. Data Eng. 19(12), 1719–1733
(2007)

8. Lin, D., Bertino, E., Cheng, R., Prabhakar, S.: Location privacy in moving-object environ-

ments. Transactions on Data Privacy 2(1), 21–46 (2009)

9. MacQueen, J., et al.: Some methods for classiﬁcation and analysis of multivariate obser-
vations. In: Proceedings of the Fifth Berkeley Symposium on Mathematical Statistics and
Probability, California, USA, vol. 1, p. 14 (1967)

10. Manning, C.D., Raghavan, P., Sch¨utze, H.: Introduction to Information Retrieval. Cambridge

University Press, New York (2008)

11. Rastogi, V., Hong, S., Suciu, D.: The boundary between privacy and utility in data publishing.

In: VLDB, pp. 531–542 (2007)

12. Rivlin, T.: Approximation by circles. Computing 21(2), 93–104 (1979)
13. Sweeney, L.: Achieving k-anonymity privacy protection using generalization and suppres-
sion. International Journal of Uncertainty, Fuzziness and Knowledge-Based Systems 10(5),
571–588 (2002)

14. Sweeney, L.: k-anonymity: A model for protecting privacy. International Journal of Uncer-

tainty, Fuzziness and Knowledge-Based Systems 10(5), 557–570 (2002)

15. Xiao, X., Tao, Y., Chen, M.: Optimal random perturbation at multiple privacy levels.

PVLDB 2(1), 814–825 (2009)


