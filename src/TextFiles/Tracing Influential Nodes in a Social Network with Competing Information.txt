Tracing Inﬂuential Nodes in a Social Network

with Competing Information

Bolei Zhang, Zhuzhong Qian, Xiaoliang Wang, and Sanglu Lu

National Key Laboratory for Novel Software Technology

Nanjing University

Nanjing 210023, China

zhangbolei@dislab.nju.edu.cn, {qzz,waxili,sanglu}@nju.edu.cn

Abstract. We consider the problem of competitive inﬂuence maximiza-
tion where multiple pieces of information are spreading simultaneously in
a social network. In this problem, we need to identify a small number of
inﬂuential nodes as ﬁrst adopters of our information so that the informa-
tion can be spread to as many nodes as possible with competition against
adversary information. We ﬁrst propose a generalized model of compet-
itive information diﬀusion by explicitly characterizing the preferences of
nodes. Under this generalized model, we show that the inﬂuence spread-
ing process is no longer submodular, which implies that the widely used
greedy algorithm does not have performance guarantee. So we propose a
simple yet eﬀective heuristic algorithm by tracing the information back
according to a properly designed random walk on the network, based
on the postulation that all initially inactive nodes can be inﬂuenced by
our information. Extensive experiments are conducted to evaluate the
performance of our algorithm. The results show that our algorithm out-
performs many other algorithms in most cases, and is very scalable due
to its low running time.

1

Introduction

Online social networks such as Facebook and Twitter are becoming an impor-
tant medium for fast and widespread dissemination of ideas, innovations and
products [6, 7]. Substantial attention has been gained to investigating the infor-
mation spreading in these networks [1–4]. One interesting problem with practical
importance, which is formally referred to as inﬂuence maximization, is to ﬁnd a
small set of inﬂuential nodes (seed nodes) properly, through which the informa-
tion can be spread to as many nodes as possible under a cascade adoption in the
network. Kempe et al. [1] ﬁrst formulated the inﬂuence maximization problem by
modeling the information diﬀusion as a discrete stochastic process. They further
show that the inﬂuence spreading process has the properties of monotonicity and
submodularity (i.e. having a diminishing marginal return property). Due to such
properties, the greedy algorithm based on a hill-climbing strategy can achieve
(1 − 1/e) of the optimal solution.

J. Pei et al. (Eds.): PAKDD 2013, Part II, LNAI 7819, pp. 37–48, 2013.
c(cid:2) Springer-Verlag Berlin Heidelberg 2013

38

B. Zhang et al.

However, in many real world scenarios, there may be competing relationships
between multiple pieces of information in the social network, such as the com-
petition between iPhone vs. Android, Chrome vs. Firefox vs. IE, etc. For such
competing pieces of information, one node usually accepts only one of them and
discards all the others. In most cases, a node will accept the information which
comes ﬁrst. But when diﬀerent pieces of information reach a node at almost the
same time, the node needs to choose one of the competing information according
to personal preference.

In deciding which information to adopt, several adoption models have been
proposed to simulate such process when competitive information reaches a node
simultaneously, with respect to diﬀerent scenarios. For instance, Borodin et al.
[14] consider that a node will choose uniformly at random one of the incoming in-
formation; Budak et al. [9] assume that the “good” information always beats the
misinformation, while Xinran He et al. [13] address that people are more likely
to believe the negative information. In contrast to all these works, in this paper,
we present a generalized model for competitive information diﬀusion, where the
preferences of nodes are characterized explicitly by a probability distribution
and the information to be adopted is determined according to the distribution.
As will be mentioned later, our model generalizes the adoption models proposed
in [9, 13, 14].

Based on this generalized model, we present a comprehensive study of the
competitive inﬂuence maximization problem [10]. In the presence of adversary
information, the goal is to choose a set of seed nodes such that our information
can be spread to as many nodes as possible. We show that, under this model,
the inﬂuence spreading process is no longer submodular, which implies that the
typical greedy algorithm cannot guarantee the worst-case performance anymore.
Rather than applying the greedy approach, we propose a simple heuristic algo-
rithm using a properly designed random walk on the social network. In this
algorithm, by postulating that the speciﬁed information has been spread to ev-
ery node in the network, we identify the most inﬂuential nodes by tracing the
information back based on the random walk to ﬁnd where it is most likely from.
Extensive experiments are conducted to evaluate the performance and scalabil-
ity of our algorithm on real social networks with high-clustering and scale-free
properties. As shown by the results, our algorithm outperforms many other algo-
rithms in most cases. Besides, compared with the greedy algorithm which is still
eﬀective, our algorithm achieves a comparable performance but is much more
scalable due to its much less running time.

The rest of this paper is organized as follows: In Section 2, we show previous
works on information diﬀusion processes in social networks. In Section 3, we
introduce our generalized model and formalize the competitive inﬂuence maxi-
mization problem. The main algorithm is presented in Section 4. In Section 5,
we compare the performance and scalability of our algorithm with some other
heuristics. Section 6 concludes this paper.

Tracing Inﬂuential Nodes in a Social Network with Competing Information

39

2 Related Work

Extensive researches have studied the problem of inﬂuence maximization. It is
the problem of identifying a small number of nodes as seed set so that the infor-
mation spreading is maximized. Kempe et al. [1] ﬁrst formulated inﬂuence max-
imization as a discrete optimization problem with Independent Cascade Model
(ICM) and Linear Threshold Model (LTM). Both models have the properties
of monotonicity and submodularity. With such properties, greedy algorithm us-
ing hill-climbing strategies can achieve (1 − 1/e) of the optimal. However, this
algorithm needs Monte Carlo method to simulate the network massive times
so is computationally expensive. Many following works have been proposed to
improve the eﬃciency of this algorithm [2–5], but scalability remains a key chal-
lenge. Moreover, they ignore the eﬀects of competing information.

Recent researches show that there exists competing campaigns in real social
networks. A lot of them have focused on deciding which information to choose
when competing innovations or products reach at the same time. Barathi et
al. [10] studied a similar problem where there are multiple players spreading
their information to compete in one social network. How would each player
choose the set of early adopters to begin the competing campaign? The authors
augmented ICM by adding continuous time for each edge so information will not
compete on the nodes. They also assumed that diﬀusion probability for diﬀerent
players is the same and show that the inﬂuence spreading process is submodular
for the last player. Borodin et al. [14] considered the competitive information
diﬀusion under threshold models. In their model, a node will choose randomly
uniformly one of the incoming information to adopt. Budak et al. [9] investigated
the problem of limiting misinformation in a social network. In the presence of
misinformation, which k nodes should be chosen as “good” information adopters
to limit the spreading of misinformation. In their diﬀusion model, the good
information always beats the misinformation when they reach a person at the
same time. The problem is submodular when the limiting campaign information
is accepted by users with probability 1. Xinran He et al. [13] also studied the
limiting problem but they thought misinformation always wins because people
are more likely to believe negative opinions. This problem is submodular under
LTM. Most of previous works try to give special cases of the diﬀusion model and
prove the inﬂuence spreading process is submodular. However, in our generalized
model, the competing inﬂuence maximization might not have such property and
the general cases remain unexplored.

3 Competitive Information Diﬀusion in Social Networks

In this section, we ﬁrst present our generalized model for competitive information
diﬀusion. Then we will formulate the competitive inﬂuence maximization as a
discrete optimization problem.

40

B. Zhang et al.

3.1 Diﬀusion Models

The social network is often represented as a directed graph G = (V, E) where
nodes represent individuals and edges represent social relationships between
them. We use Independent Cascade Model (ICM) as the basic model for in-
formation diﬀusion. In a information cascade, we say that a node is active if it
adopts the information, otherwise it is called inactive. Initially, only the seed
nodes in S are active. The diﬀusion process starts from the set S and unfolds
in discrete steps as follows: In each step t, the newly active nodes in St try to
activate their neighbors with probability pe independently, where pe is an acti-
vation probability associated with each edge e ∈ E. The newly activated nodes
are added into St+1. This process continues until no more nodes are activated
at some step t, i.e. St = ∅.

tries to activate each of its inactive outgoing edge with probability pi

We augment the ICM to present a generalized model called Weighted Compet-
itive Independent Cascade Model (WCICM). In this model, competing informa-
tion cascades start from disjoint seed sets S1, S2, ..., Sr and spread in the social
network to compete. We say a node is in color i if it adopts the ith information.
Initially, the nodes in Si are in color i and there is no color for the inactive
nodes. The process unfolds in discrete steps as follows: at step t, a node u in
S(t)
uv. If
i
edge (u, v) is activated, it is colored as cuv = i at diﬀusion step Tuv = t. If there
is no other incoming edge to v at this step, then v will be colored as cv = i
at diﬀusion step Tv = t. But if multiple processes reach v at the same step, v
chooses one of them to adopt. In deciding which information to choose, users’
decision is characterized explicitly by a probability distribution. By assigning
a weight φ(i) for information with color i, v adopts color i with probability
, that is, the decision of v adopting
P r[v adopts color i] =
color i is determined by the weight of color i versus the total weight of incoming
information. If the weights are the same, v will choose uniformly at random one
of the information. Or if the weight is positive for one information and 0 for
others, this information will always win. So our model can generalize previous
models introduced in [9, 13, 14].

(cid:2)

(u,v)∈E∧cuv =i φ(i)
(cid:2)

(s,v)∈E φ(csv)

3.2 Problem Formulation

Consider the problem when r players compete in a social network G. Each of
them selects a disjoint set of seed nodes Si to start the competing campaign
sequentially. The information is spread in the network under the WCICM de-
scribed above. Suppose the ﬁrst r− 1 players’ strategies have been ﬁxed, namely
we have the knowledge of S1, S2, ..., Sr−1. We need to identify a seed set Sr of
size k for the last player. The goal is to maximize the expected number of nodes
in color r after information cascade. This competitive inﬂuence maximization
problem can be formulated as:

σ(Sr) s.t. |Sr| = k

max
Sr⊆V

(1)

Tracing Inﬂuential Nodes in a Social Network with Competing Information

41

where σ(Si) is the expected number of nodes in color i when all information
diﬀusion processes stop.

4 Competitive Inﬂuence Maximization

In this section, we ﬁrst show the NP-hardness of the problem and prove it does
not exhibit the submodular property. Then we will present a heuristic using
properly designed random walk on the social network to ﬁnd the inﬂuential
nodes.

4.1 Hardness of Competitive Inﬂuence Maximization

Consider a special case of the competitive inﬂuence maximization problem when
there are no competing adversaries. Then it is exactly the problem of inﬂuence
maximization problem under the ICM, which can be reduced from the NP-
complete Set Cover problem in [1].

Theorem 1. The competitive inﬂuence maximization problem is NP-hard under
the WCICM.

Inﬂuence spreading of single seed set is monotone and submodular under the
ICM. Typically, a function σ(·) is said to be submodular if it satisﬁes: σ(S∪{v})−
σ(S) ≥ σ(T ∪{v})− σ(T ) for all elements v when S ⊆ T . With this property, the
greedy algorithm using hill-climbing method can achieve near optimal solution
with performance guarantee. However, in a competing campaign, the inﬂuence
spreading process is not submodular.

Claim. There exists counter example which is not submodular in the competitive
inﬂuence maximization under the WCICM.

Proof. Figure 1 shows a counter example: Adversary information starts from

node S1 with color 1. Deﬁne S = ∅ and T = {w} with color 2. We use identical

weight for each information, so a node will choose uniformly if two precesses reach
it at the same time. The edge in color i means the probability of information
diﬀusion of Si on this edge is 1. Initially, we have σ(S) = 0 and σ(T ) = 2.5
before adding v. When node v is set as color 2, we have σ(S ∪ {v}) = 1 and
σ(T ∪{v}) = 4. So there is σ(S ∪{v})− σ(S) < σ(T ∪{v})− σ(T ), which implies
that the process does not exhibit the property of submodularity.

4.2 Random Walk to Find Inﬂuential Nodes

Since the inﬂuence spreading process under WCICM does not exhibit submod-
ular property, the greedy algorithm does not have performance guarantee. We
propose a heuristic using a properly designed random walk to ﬁnd the inﬂuen-
tials. In this algorithm, we assume an ideal situation where all initially inactive

42

B. Zhang et al.

2

1

v

1

1S

2

w

Fig. 1. Counter example where the competitive inﬂuence spreading process does not
exhibit submodular property

nodes have been inﬂuenced by our information with color r. Under this postu-
lation, the information on each node traces back to ﬁnd where it most likely
to be from. The nodes aggregating most information can be identiﬁed as our
seed nodes. To trace back, information random walks in the reverse direction
of where it was propagated from. The transfer probability of the information
walking from node u to node v is:

Puv =

(cid:2)

wvu

s:(s,u)∈E wsu

(2)

where wvu is the weight of directed edge (v, u). So Puv is the weighted proportion
of edge (v, u) among all incoming edges of u. It is easy to see that
v Puv = 1,
and the transition probability of node u is only dependent on its current state.
So this is a Markov process with transition matrix P .

(cid:2)

Speciﬁcally, if we deﬁne wuv as 1 for any u and v, then this process is Pagerank
[15] with reverse directions. However, Pagerank neglects the impacts of compet-
ing information. In this work, the weight of each edge is determined by how much
v can inﬂuence u. Generally, if moving the information on u to v can increase
the probability of v inﬂuencing u, then the edge (v, u) has higher weight. So we
deﬁne the weight of (v, u) as:

wvu = P r[v activates u|v ∈ Sr]

(3)

This means that the weight of (v, u) can be represented as the probability that v
can inﬂuence u given that v is a seed node. In a competing campaign, if v is a seed
node: a), the information from v can reach u ﬁrst of all, P r[v activates u] = 1;
b), the information from v will reach u with adversary information at the same
time; c), the information from v won’t reach u or the information will reach u
after some adversary information, P r[v activates u] = 0. Above all three cases,
the probability depends on when will adversary information reach u. However,
it is hard to estimate the diﬀusion step of adversary information in a stochastic
diﬀusion process.

One possible solution is to simulate the network massive times to get deter-
ministic graphs each time. We can view the information diﬀusion on edges and
nodes as the results of coin ﬂip with bias. In a deterministic graph, the diﬀu-
sion step of adversary information can be obtained using a BFS linear scan of

Tracing Inﬂuential Nodes in a Social Network with Competing Information

43

the graph. The result is the average information value after convergence of each
outcomes of deterministic graphs. However, simulating the graph still takes too
much time. To get the inﬂuential nodes more eﬃciently, we follow the idea of
Shortest Path Model (SPM) introduced in [16]. In this model, a node can only
be activated through the shortest path between the initially active seed set. So
the diﬀusion step of each node is the shortest path between the node and the
seed nodes.

Claim. Assume the inactive node can only be inﬂuenced by the nearest seed
node, a node w will be colored as i if ∃v ∈ Si such that ∀u ∈ Sj (j (cid:9)= i ∧ j ∈
{0, 1, ..., r}), |SP (v, w)| < |SP (u, w)| where SP (v, w) denotes the shortest path
from node v to node w.

Figure 2 presents one example of the diﬀusion process. The nodes 0 and 9 are
adversary seed nodes. The diﬀusion step is labeled in the brackets above each
node. The value is the length of shortest path from the seed nodes. The nodes
that are unreachable from seed nodes have step ∞, they are nodes 4 and 5.

(0)
0

(+∞)
5

(1)
6

(2)
1

(3)
8

(2)
2

(1)
7

(3)
3

(0)
9

(+∞)
4

Fig. 2. One sample example of information diﬀusion process of adversary information

When multiple pieces of information reach u at the same time, the informa-
tion from v would compete with adversary information to inﬂuence u. Since
the information diﬀusion process is probabilistic, we need to get the propaga-
tion probability of the edge. In most cases, the activation probability p is often
not uniformly distributed, and there might be multiple edges between a pair of
nodes. Suppose the edges between node v and u are (v, u)1, (v, u)2, ..., each with
probability pi
vu to be activated independently. Then the propagation probability
of edge (u, v) is

ppvu = 1 − (cid:3)

i:(v,u)i∈E

(1 − pi

vu)

(4)

Suppose v is a seed node with color r, and the adversary information from node
w will reach u at diﬀusion step Twu, then the probability of v can inﬂuence u is

44

B. Zhang et al.

(cid:2)

w:(w,u)∈E∧Twu=1

P r[v activates u|v ∈ Sr] =

φ(cvu) ∗ ppvu
φ(cwu) ∗ ppwu + φ(cvu) ∗ ppvu
(5)
which is the weight of directed edge (v, u): wvu. For a large scale-free social
network, it is almost impossible that the transition matrix P is periodic. The
random walk will converge to a stationary distribution. In the experiment, we
show that the distribution converges very fast. The detail of this algorithm is
presented in Algorithm 1. We call this algorithm CompeteRank.

Algorithm 1. CompeteRank(G, S[r−1], k, p, max iterations, min delta)
Sadversary ← (cid:2)
foreach v ∈ V /Sadversary do Tv ← ∞, Iv ←
foreach v ∈ Sadversary do Tv ← 0;
for v ∈ V do

i∈{1,2,...,r−1} Si;

|V −Sadversary| ;

// Get the diffusion step of each node

1

for s ∈ Sadversary do

Get shortest path SP (s, v), u is the second last node on SP (s, v);
if |SP (s, v)| < Tv then

Tv ← |SP (s, v)|;
v.weights ← ppuv ∗ φ(cuv);
else if |SP (v, s)| = Tv then
v.weights ← v.weights + ppuv ∗ φ(cuv);

// Compute the transition matrix P

// Random walk to find influentials

for u ∈ V /Sadversary do
for v : (v, u) ∈ E do

wuv ←
Puv ←

ppvu∗φ(cvu)
wvu

u.weights+ppvu∗φ(cvu) ;
(cid:2)

s:(s,u)∈E wsu ;

for i ← 1 to max iterations do
v ← Iv;
(cid:4)

foreach v ∈ V do I
for u ∈ V /Sadversary do
for v : (v, u) ∈ E do

Iu ← Iu + I

v ∗ Pvu;
(cid:4)

dif f ← (cid:3)
if dif f < min delta then

v − Iv|;
(cid:4)

v∈V

|I

break;

pick the ﬁrst k nodes as Sr;

5 Evaluation

5.1 Experiment Setup

We use 3 social network data sets from [17] to evaluate our algorithms. The
ﬁrst one is ca-GrQc: an academic collaboration network from scientiﬁc collabo-
rations between authors’ papers submitted to General Relativity and Quantum

Tracing Inﬂuential Nodes in a Social Network with Competing Information

45

Cosmology category with 5242 nodes and 28980 edges. The nodes in the network
represent authors and the edges indicate coauthor relationships. Each coauthor
paper is represented as a single chance for one author to inﬂuence another. The
second one is ca-HepTh: a collaboration network from papers submitted to High
Energy Physics with 9877 nodes and 51971 edges. The third one is ca-CondMat:
also a collaboration network from papers submitted to Condense Matter cate-
gory with 23133 nodes and 186936 edges. All of them are scale-free networks with
high clustering. Without loss of generality, we use identical activation probabil-
ity for the edges as 0.1 or 0.01. In CompeteRank, max iterations = 1000 and
min delta = 0.00001 are considered to be reasonable threshold values. Since
the inﬂuence spreading is a stochastic process, we use Monte-Carlo method to
simulate the graph for R = 1000 times to get the average inﬂuence value of
the competing seed sets under the WCICM. The algorithms compared to Com-
peteRank are:

– Greedy: This algorithm uses a hill-climbing strategy to greedily ﬁnd the

node that has maximal inﬂuence at each step.

– Degree Centrality: The heuristic identiﬁes the nodes with highest degree.
– Early Infectees: It chooses seeds that are expected to be infected ﬁrst.
The graph is simulated R times, and the nodes are ordered by the number
of simulations they are ﬁrstly infected.

– Largest Infectees: This heuristic chooses seeds that are expected to the
most nodes if they were to be infected themselves. A more detailed descrip-
tion can be referred to [9]. The graph should also be simulated R times.

5.2 Competitive Inﬂuence Spreading

We ﬁrst evaluate the inﬂuence spreading of diﬀerent algorithms on the data sets.
The adversary seed nodes are chosen using Degree Centrality with ﬁxed size as
100. Since we do not care the inﬂuence spreading of adversary nodes, they can
be assumed from single player. Figure 3 presents the results of our experiments.
Figure 3(a) and Figure 3(b) are the results of ca-GrQc and ca-HepTh data set
with p = 0.1. We use identical weight for diﬀerent information, so when multiple
pieces of information reach a node at the same time, it will choose randomly uni-
formly one of them. In this case, Greedy, Largest and CompeteRank all perform
very well. Even the inﬂuence spreading function is not submodular, Greedy is
still eﬀective. This might be the reason that counter examples rarely exist. Early
performs very poor in both experiments. So blocking the inﬂuence spreading of
adversary nodes does not help much in the spreading of our information. Com-
peteRank outperforms the Degree over about 50% sometimes. The gap is even
larger than inﬂuence maximization of single set. This is because Degree neglects
the eﬀect of adversary information.

Figure 3(c) is the result of ca-CondMat data set with p = 0.01. We do not
include the Greedy algorithm in this experiment since it takes too much time.
When p is small, the eﬀect of competing nodes also becomes smaller. So Largest

46

B. Zhang et al.

e
z
S

i

 
t

 

e
S
e
v
i
t
c
A

 1000

 900

 800

 700

 600

 500

 400

 300

 200

 100

 0

CompeteRank
Largest
Degree
Early
Greedy

 0

 5  10  15  20  25  30  35  40  45  50  55  60  65  70  75  80  85  90  95  100

Seed Set Size

e
z
S

i

 
t

 

e
S
e
v
i
t
c
A

 1300

 1200

 1100

 1000

 900

 800

 700

 600

 500

 400

 300

 200

 100

 0

CompeteRank
Largest
Degree
Early
Greedy

 0

 5  10  15  20  25  30  35  40  45  50  55  60  65  70  75  80  85  90  95  100

Seed Set Size

(a) ca-GrQc data set. p = 0.1. φ(1) =
φ(2)

(b) ca-HepTh set. p = 0.1. φ(1) = φ(2)

e
z
S

i

 
t

 

e
S
e
v
i
t
c
A

 250

 200

 150

 100

 50

 0

CompeteRank
Largest
Degree
Early

 0

 5

 10  15  20  25  30  35  40  45  50  55  60  65  70  75  80  85  90  95  100

e
z
S

i

 
t

 

e
S
e
v
i
t
c
A

 160

 150

 140

 130

 120

 110

 100

 90

 80

 70

 60

 50

 40

 30

 20

 10

 0

CompeteRank
Largest
Degree
Early
Greedy

 0

 5

 10  15  20  25  30  35  40  45  50  55  60  65  70  75  80  85  90  95  100

Seed Set Size

Seed Set Size

(c) ca-CondMat data set. p = 0.01.
φ(1) = φ(2)

(d) ca-HepTh data set. p = 0.01. φ(1) =
1, φ(2) = 0

Fig. 3. Inﬂuence Spreading of Seed Sets

is not eﬀective as before while Degree achieves much better performance. Clearly,
our CompeteRank performs the best of all.

In Figure 3(d), we show the results of ca-HepTh with p = 0.01. We have φ(1) =
1 and φ(2) = 0, so adversary information always beats our information when
they reach a node at the same time. In this case, CompeteRank performs even
better than the Greedy algorithm. And both of them signiﬁcantly outperform
others heuristics.

5.3 Convergence and Scalability

In Figure 4(a) we show the iterations for our algorithm to converge. We use
Iv = 1 for the each of the node initially. The algorithm can converge to a
reasonable tolerance in about 50 iterations in all three cases. Generally, the social
networks are expander-like graphs. The random walk on an expander which has
an eigenvalue separation is rapidly-mixing.

Figure 4(b) presents the running time of our algorithms. In this experiment,
we use identical p = 0.01 for all the data sets to select 100 seed nodes. It is
evident that Greedy takes too much time. What is worse, some improvements
like the “CELF” proposed by Leskovec et al. [2] does not work here, because
the inﬂuence spreading process is not submodular. Degree is the most eﬃcient

Tracing Inﬂuential Nodes in a Social Network with Competing Information

47

i

n
o
i
t
a
r
e
t
I
 
s
u
o
v
e
r
P
m
o
r
f
 
e
c
n
e
r
e
f
f
i

 

D

 
l
a
t
o
T

 100000

 10000

 1000

 100

 10

ca-GrQc
ca-HepTh
ca-CondMat

 10

 20

 30

 40

 50

 60

Number of Iterations

)
s
(
e
m
T

i

 1e+007

 1e+006

 100000

 10000

 1000

 100

 10

 1

 0.1

Greedy
CompeteRank
Early
Largest
Degree

ca-GrQc

ca-HepTh

Data Set

ca-CondMat

(a) Convergence of CompeteRank on dif-
ferent data sets

(b) Running time of diﬀerent algorithms.
The number of adversary node is ﬁxed as
100 with p = 0.01

Fig. 4. Convergence and Scalability

of all. The running time of CompeteRank, Largest and Early are similar with
an acceptable running time. Moreover, the time of CompeteRank does not grow
much with the increase size of data sets.

6 Conclusion

In this work, we studied the problem of competitive inﬂuence maximization in
a social network. We introduced a generalized model called WCICM for com-
petitive information diﬀusion which could characterize users’ preference for each
information explicitly. In this model, the inﬂuence spreading process is no longer
submodular, so greedy approach does not have performance guarantee. We pro-
posed a simple yet eﬀective heuristic algorithm called CompeteRank. In this
algorithm, the inﬂuential nodes can be identiﬁed by tracing the information
back according to a properly designed random walk on the network, based
on the postulation that all the nodes have been inﬂuenced. Extensive exper-
iments on diﬀerent data sets were conducted. The results revealed that even
without submodular property, the greedy algorithm can still be eﬀective. How-
ever, the computation cost is too expensive. Our algorithm is very comparable
to the greedy approach and outperforms other well-known heuristics in most
cases. Some of them, like Largest and Degree, only perform well in certain cir-
cumstances. We also analyzed the convergence and scalability of our algorithm.
The results showed that CompeteRank can converge very fast with low running
time.

Acknowledgment. The authors would like to thank Bin Tang for his in-
sightful remarks. This work is partially supported by the National Natural
Science Foundation of China under Grant No. 61073028, 61021062, 61202113,
61003213; the National Basic Research Program of China (973) under Grant No.
2009CB320705; Jiangsu Natural Science Foundation under Grant No.
BK2011510.

48

B. Zhang et al.

References

1. Kempe, D., Kleinberg, J.M., Tardos, ´E.: Maximizing the spread of inﬂuence

through a social network. In: KDD, pp. 137–146 (2003)

2. Leskovec, J., Krause, A., Guestrin, C., Faloutsos, C., VanBriesen, J.M., Glance,
N.S.: Cost-eﬀective outbreak detection in networks. In: KDD, pp. 420–429 (2007)
3. Chen, W., Wang, Y., Yang, S.: Eﬃcient inﬂuence maximization in social networks.

In: KDD, pp. 199–208 (2009)

4. Chen, W., Wang, C., Wang, Y.: Scalable inﬂuence maximization for prevalent viral

marketing in large-scale social networks. In: KDD, pp.1029–1038 (2010)

5. Zhang, Y., Gu, Q., Zheng, J., Chen, D.: Estimate on Expectation for Inﬂuence
Maximization in Social Networks. In: Zaki, M.J., Yu, J.X., Ravindran, B., Pudi,
V. (eds.) PAKDD 2010, Part I. LNCS, vol. 6118, pp. 99–106. Springer, Heidelberg
(2010)

6. Tang, J., Sun, J., Wang, C., Yang, Z.: Social inﬂuence analysis in large-scale net-

works. In: KDD, pp. 807–816 (2009)

7. Jo, Y., Hopcroft, J.E., Lagoze, C.: The web of topics: discovering the topology of

topic evolution in a corpus. In: WWW, pp. 257–266 (2011)

8. Gomez-Rodriguez, M., Leskovec, J., Krause, A.: Inferring networks of diﬀusion and

inﬂuence. In: KDD, pp. 1019–1028 (2010)

9. Budak, C., Agrawal, D., El Abbadi, A.: Limiting the spread of misinformation in

social networks. In: WWW, pp. 665–674 (2011)

10. Bharathi, S., Kempe, D., Salek, M.: Competitive Inﬂuence Maximization in Social
Networks. In: Deng, X., Graham, F.C. (eds.) WINE 2007. LNCS, vol. 4858, pp.
306–311. Springer, Heidelberg (2007)

11. Kostka, J., Oswald, Y.A., Wattenhofer, R.: Word of Mouth: Rumor Dissemination
in Social Networks. In: Shvartsman, A.A., Felber, P. (eds.) SIROCCO 2008. LNCS,
vol. 5058, pp. 185–196. Springer, Heidelberg (2008)

12. Pathak, N., Banerjee, A., Srivastava, J.: A Generalized Linear Threshold Model

for Multiple Cascades. In: ICDM, pp. 965–970 (2010)

13. He, X., Song, G., Chen, W., Jiang, Q.: Inﬂuence Blocking Maximization in Social
Networks under the Competitive Linear Threshold Model. In: SDM, pp. 463-474
(2012)

14. Borodin, A., Filmus, Y., Oren, J.: Threshold Models for Competitive Inﬂuence in
Social Networks. In: Saberi, A. (ed.) WINE 2010. LNCS, vol. 6484, pp. 539–550.
Springer, Heidelberg (2010)

15. Page, L., Brin, S., Motwani, R., Winograd, T.: The PageRank Citation Ranking:

Bringing Order to the Web. Technical Report. Stanford InfoLab (1999)

16. Kimura, M., Saito, K.: Tractable Models for Information Diﬀusion in Social Net-
works. In: F¨urnkranz, J., Scheﬀer, T., Spiliopoulou, M. (eds.) PKDD 2006. LNCS
(LNAI), vol. 4213, pp. 259–271. Springer, Heidelberg (2006)
17. Collaboration networks, http://snap.stanford.edu/data/


