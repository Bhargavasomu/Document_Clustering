Using Association Rules to Solve the Cold-Start

Problem in Recommender Systems

Gavin Shaw, Yue Xu, and Shlomo Geva

Faculty of Science & Technology, Queensland University of Technology, Australia

g4.shaw@student.qut.edu.au,

{yue.xu,s.geva}@qut.edu.au

Abstract. Recommender systems are widely used online to help users
ﬁnd other products, items etc that they may be interested in based on
what is known about that user in their proﬁle. Often however user proﬁles
may be short on information and thus it is diﬃcult for a recommender
system to make quality recommendations. This problem is known as
the cold-start problem. Here we investigate using association rules as a
source of information to expand a user proﬁle and thus avoid this prob-
lem. Our experiments show that it is possible to use association rules to
noticeably improve the performance of a recommender system under the
cold-start situation. Furthermore, we also show that the improvement in
performance obtained can be achieved while using non-redundant rule
sets. This shows that non-redundant rules do not cause a loss of informa-
tion and are just as informative as a set of association rules that contain
redundancy.

1 Introduction

Recommender systems are designed to understand a user’s interests, learn from
them and recommend items (whether they be products, books, movies etc) that
will be of interest to the user. This requires them to personalise their recom-
mendations. Recommendation systems usually work most eﬀectively when user
proﬁles are extensive and/or the applicable dataset has a high information den-
sity. When the dataset is sparse or user proﬁles are short, then recommender
systems struggle to provide quality recommendations. This is often known as
the cold-start problem.

We propose expanding a user proﬁle (eg. so it contains more ratings) through
the use of association rules derived from the dataset. By doing so we expand
proﬁles based on patterns and associations of items, topics, categories etc and
thus give more information to a recommender system. This would reduce the
eﬀect of the cold-start problem and result in better quality recommendations
earlier on. We also investigate the performance of both non-redundant rules and
rules that contain redundancy. The idea behind non-redundant rules is that the
removed redundant rules should not cause a loss of information [11] [12]. If there
is no information loss, then the performance should be similar to that of a ruleset
with redundant rules.

M.J. Zaki et al. (Eds.): PAKDD 2010, Part I, LNAI 6118, pp. 340–347, 2010.
c(cid:2) Springer-Verlag Berlin Heidelberg 2010

the

cold-start problem heavily aﬀects

Much work has been done in the area of recommender systems. A survey un-
dertaken in [1] details many diﬀerent approaches that have been proposed. It is
shown that
content-based and
collaborative-based systems [1]. In the case of collaborative-based systems, pro-
posed solutions include getting the user to rate speciﬁc items [1]. However this
places a burden on the user. Our proposed approach does not. Thus work focus-
ing on solving the cold-start problem includes collaborative & content hybrids
[2] [7], ontology based systems [5] and taxonomy driven recommender systems
[10] [13]. However, all of these proposals have drawbacks. Hybrid systems can
lack novelty, resulting in recommendations that are excessively content centric
[13]. Onotolgy based system requires a well deﬁned ontology to be created, some-
thing that can be diﬃcult and limiting. Taxonomy based systems work better,
but still have low performance. Also the HTR system proposed in [10] performs
only marginally better than the TPR system proposed in [13], although it is
more time eﬃcient. The taxonomy based approach in [13] does have the advan-
tage of being able to be applied to many domains. Work in [4] proposed a system
that uses fuzzy cross-level rules to enhance a collaborative based recommender
to solve this cold-start problem. Our work focuses on the cold-start problem of
users not items.

Using Association Rules to Solve the Cold-Start Problem

341

The paper is organised as follows. Section 2 discusses related works. Our
proposed approach for solving the cold-start problem is presented in Section 3.
In Section 4 we outline our experiments to test our approach. Lastly, Section 5
concludes the paper.

2 Related Work

Here we brieﬂy review works related to our proposed approach. We consider
works that have focused on recommender systems and redundancy in associa-
tion rules.

Much work in the ﬁeld of association rule mining has focused on ﬁnding more
eﬃcient ways to discover all of the rules. However, complete rule enumeration is
often intractable in datasets with a very large number of multi-valued attributes.
One approach is to determine which rules are redundant and remove them, re-
ducing the number of rules a user has to deal with while not reducing information
content [6] [11] [12]. The MinMax algorithm proposed in [6] uses the closure of
the Galois connection to deﬁne non-redundant rules. These non-redundant rules
have a minimal antecedent and maximal consequent and were selected as the
most relevant because they are the most general. The ReliableBasis algorithm
proposed in [11] [12] argued that MinMax still contained redundant rules. They
propose that by using the same technique as MinMax, but relaxing the deﬁ-
nition for redundancy, further redundant rules could be removed. Work in [11]
shows a reduction of over 80% can be achieved in some situations. Recent work
in [8] [9] proposed taking the MinMax and ReliableBasis approaches developed
for single level datasets and extend them to remove hierarchical redundancy
found in multi-level datasets. The proposed extensions, MinMax with HRR and

342

G. Shaw, Y. Xu, and S. Geva

ReliableBasis with HRR [8] [9] were developed to ﬁnd rules that not only had
a minimal antecedent and maximum consequent, but also comprimsed of high
level concepts or items. These approaches have been shown to yield further re-
ductions in the size of rule sets. In this paper we demostrate an application
where non-redundant rule sets can be used in place of other rule sets which are
redundant.

3 Using Association Rules to Expand User Proﬁles

In this section we outline our proposed approach and investigation into solving
the cold-start problem in recommender systems.

For our investigation we use the Taxonomy-driven Product Recommender
(TPR) system ﬁrst proposed in [13]. The user proﬁles are created through the
process described in [13] (which has been omitted here due to space) to generate
taxonomy-driven proﬁles. A taxonomy T containing topics (or categories) t in
a multi-level structure, where each topic has one parent or supertopic, but may
have many children or subtopics. Thus the taxonomy can be visualised as a tree.
By doing this the proﬁles represent the user’s interests in topics, rather than
items. Although we have used the taxonomy in the proﬁle generation, we still
have the issue of short proﬁles. By using the rules to expand the proﬁle we bring
other topics in that similar users have shown an interest in.

From the user proﬁles we can construct a transactional dataset, where each
transaction is a user and each topic is an attribute. Thus each transaction consists
of the topics that a user is interested in. We then mine the transactional dataset
for frequent patterns and derive association rules from these patterns. This will
give us association rules between topics that interest users. These rules allow us
to discover topics that frequently appear together as part of a user’s interest. This
rule set will then be used to expand user proﬁles to solve the cold-start problem.
Finally, we expand the user proﬁles. For this we take the set of user proﬁles
P and the association rule set we derived in the second step. For each user
proﬁle p(ux) we extract all of the topics t within and generate a list of all the
combinations possible from the group of topics. Each combination represents a
possible antecedent of an association rule. We take each combination and search
the set of association rules for any rules that have a matching antecedent. If
such a rule exists we can then take the topics in its consequent and add them to
the proﬁle p(ux). Each new topic added is assigned a weight, which is calculated
based on the weights of the topics in that rule’s antecedent.

i=1 W eightti

× Rconf

(cid:2)|A|

W eighttx =

(1)
where |A| represents the number of topics in the antecedent of the rule R : A →
C. Then as per the design of the TPR approach the values of the topics in the
expanded proﬁle need to be normalised. All topic scores within a proﬁle p are
normalised through the following formula.

|A|

Using Association Rules to Solve the Cold-Start Problem

343

N ormalisedW eighttx = W eighttx

(cid:2)n

i=1 W eightti

× Limit

(2)

where Limit is the value to which a proﬁle of normalised topic values is to sum
to. Thus this generates a set of expanded user proﬁles which we show in our
experiments have the potential to improve recommendations over proﬁles that
have not been expanded.

We have outlined our proposal for using association rules to expand user
proﬁles in order to improve recommender system quality. However, it is possible
that we may want to place limitations on the expansion of user proﬁles.

1. Restrict the expansion to short proﬁles. The idea behind this proposal is
to expand users who have very few ratings and thus suﬀer from the cold-
start problem. Users with many ratings do not have this problem. Thus a
restriction should be imposed on how many topics can be in the user proﬁle
p before there is too many to warrant expansion.

2. Restrict the number of rules used when expanding a user proﬁle. It is en-
tirely possible that when deriving the association rules from the transactional
dataset that a large list may be generated. It is also possible that from this,
when expanding a user proﬁle that a large number of rules and their con-
sequents will be considered for inclusion in the expanded user proﬁle. This
may lead to poorer performance as many more topics are added and more
items from a wider selection become recommended. Our experiments will
test the eﬀect of using 1 to 5 rules during expansion.

4 Experiments and Evaluation of User Proﬁle Expansion

Here we outline the experiments we undertook to study the value of our proposal
to use association rules in expanding user proﬁles to improve recommendation
quality, as well as the eﬀect redundant and non-redundant rule sets have. We aim
to show that non-redundant rule sets give a similar improvement when compared
to rule sets containing redundant rules.

4.1 Evaluation Metrics and Datset

In order to evaluate the performance of the baseline set of proﬁles and the
expanded set of proﬁles we follow the same approach detailed in [10]. The past
ratings of each user u ∈ U have been randomly divided into training and test
components. For the experiments, the recommender system will recommend a
list of n items for user ui based on the training set and will be evaluated against
the test set. For our experiments we use exactly the same training and test sets
as used in [10].

To evaluate redundant and non-redundant rule sets we use 4 diﬀerent rule
mining algorithms to extract a set of rules. The algorithms used are the ones
previously introduced in Section 2; MinMax [6], ReliableBasis [11] [12], MinMax
with HRR [8] [9] and ReliableBasis with HRR [8] [9].

344

G. Shaw, Y. Xu, and S. Geva

In our work we use precision, recall and F1-measure to determine the overall
performance of the recommender system [3]. This allows us to compare the
standard approach against our proposal of using association rules for user proﬁle
expansion.

For this investigation we use the BookCrossing dataset (obtained from
http://www.informatik.uni-freiburg.de/˜cziegler/BX/) which contains users,
books and the ratings given to those books by the user. The taxonomy tree and
descriptors are orginally sourced from Amazon.com and are exactly the same
as those used in [10]. From this we build a transactional dataset that contains
92,005 users (transactions) and 12,147 topics from the taxonomy. The dataset
is populated using the descriptors that belonged to 270,868 unique books. This
dataset is then mined to derive the association rules from it. For our experiments
here, all ratings of items are considered to be positive. From the BookCrossing
dataset we also build the base set of user proﬁles P. This set of proﬁles contains
85,415 distinct users. As already mentioned the ratings for each user are divided
into a training set and a test set. The set of user proﬁles P is based on the
training set. The average number of ratings in a user proﬁle is 27.08. This set of
user proﬁles will serve as the baseline input in our experiments and is also the
set that will be expanded.

4.2 Experiment Results

To validate our proposal we conducted a series of experiments to see whether
using association rules to expand user proﬁles improves recommendation quality.
From the transactional dataset we set the minimum conﬁdence threshold to 50%
and are able to derive 37,827 association rules using the MinMax algorithm [6].
We then go through the user proﬁles in the training set and for any proﬁle
p ∈ P (train) that has 5 or less ratings we attempt to expand our approach.
This yields a total of 15,912 user proﬁles which we consider to be short proﬁles.
We chose to restrict proﬁle expansion to those with 5 ratings or less as these
are the users most likely to suﬀer from the cold-start problem. This falls in
line with the ﬁrst restriction proposed in section 3. Long proﬁles do not usually
suﬀer from the cold-start problem, so expanding them is likely to result in a high
computation cost for minimal gain. We then make up to 10 recommendations
for these 15,912 users and measure the overall performance of the recommender
system. We compare our approach against the baseline of the same 15,912 user
proﬁles with no expansion. All experiments use the TPR recommender[13].

As shown in Table 1 the baseline set of user proﬁles (no expansion) scores
only 0.00619, 0.0571 and 0.0112 for precision, recall and F1-measure respectively.
When using expanded proﬁles we manage to achieve up to 0.00815, 0.0754 and
0.0147 for precision, recall and F1-measure. This is an improvement of around
31.5% over the baseline. Also the eﬃciency of the recommender is not negatively
impacted, as while our expanded proﬁles naturally take longer to make recom-
mendations for, it is no diﬀerent to that of a longer proﬁle without expansion.

Using Association Rules to Solve the Cold-Start Problem

345

Table 1. Results for TPR using the short user proﬁles with rules ranked by conﬁdence

Approach
Baseline

Precision % Recall % F1-Measure %
0.00619

0.0112
Expanded (1 Top Rule) 0.00649 4.77% 0.0595 4.28%
0.0117
Expanded (2 Top Rules) 0.00714 15.21% 0.0655 14.66% 0.0128
Expanded (3 Top Rules) 0.00732 18.15% 0.0672 17.77% 0.0132
Expanded (4 Top Rules) 0.00792 27.79% 0.0729 27.75% 0.0143
Expanded (5 Top Rules) 0.00815 31.54% 0.0749 31.22% 0.0147

0.0571

4.72%
15.16%
18.12%
27.79%
31.51%

To test the hypothesis that non-redundant rule sets perform as well as rule
sets that contain redundancy we conducted a series of experiments to determine
the improvement in a recommender system obtained using various rule sets.

We mine the transactional dataset using four diﬀerent rule mining algorithms
all with the same minimum support and conﬁdence thresholds. Initially we used
the MinMax algorithm to extract all of the possible rules, including redundant
ones by using the proposed recovery algorithms [6]. However, the entire ruleset
and the non-redundant ruleset generated by the MinMax algorithm are actually
identical. This means that none of the rules discovered by the MinMax algorithm
are considered redundant and thus the ruleset derived using MinMax becomes
our baseline ruleset, which based on the ReliableBasis redundancy deﬁnition,
contains redundant rules.

The other three algorithms all derive smaller rule sets indicating that they
deem some of the rules that MinMax derived to actually be redundant. The
ReliableBasis with HRR [8] [9] derives the smallest set of rules and thus Reli-
ableBasis and MinMax with HRR still contain some redundant rules. Table 2
shows the size of each ruleset derived using these algorithms. Again we follow
the same procedure previously outlined. The same 15,912 ’short proﬁle’ users
are then used to test the performance of the TPR recommender.

Table 3 clearly shows that the performance of the four algorithms is not that
diﬀerent, except for the case of the top 3 rules, where ReliableBasis with HRR
(RBHRR) outperformed the worst rule mining algorithm, MinMax (MM) by
8%. We believe Table 3 strongly support our hypothesis that non-redundant rule
sets can be used in place of larger rule sets which contain redundancy, without
degrading performance. It also supports the theory behind these algorithms.

Table 2. Size of ruleset derived for each algorithm

No. of rules Reduction

Algorithm
MinMax

ReliableBasis

37,827
36,852
37,555
ReliableBasis with HRR 36,604

MinMax with HRR

2.58%
0.72%
3.23%

346

G. Shaw, Y. Xu, and S. Geva

Table 3. Results for TPR using the short user proﬁles with diﬀerent derived rule sets
and rules ranked by conﬁdence

Approach
Baseline

Expanded (1 Top Rule) - MM
Expanded (1 Top Rule) - RB

Expanded (1 Top Rule) - MMHRR 0.0066
Expanded (1 Top Rule) - RBHRR 0.0066

0.0571

Precision % Recall % F1-Measure %
0.00619
0.0112
0.00649 4.77% 0.0596 4.28% 0.01171
0.00649 4.77% 0.0596 4.28% 0.01171
0.0119
0.0119

6.49% 0.0606 6.04%
6.49% 0.0606 6.04%

4.72%
4.72%
6.45%
6.45%

Expanded (2 Top Rules) - MM 0.00714 15.21% 0.0655 14.66% 0.0129
Expanded (2 Top Rules) - RB
0.00714 15.21% 0.0655 14.66% 0.0129
Expanded (2 Top Rules) - MMHRR 0.00717 15.72% 0.0658 15.21% 0.01293
Expanded (2 Top Rules) - RBHRR 0.0072 16.13% 0.066 15.65% 0.01298

Expanded (3 Top Rules) - MM 0.00732 18.15% 0.0673 17.77% 0.0132
Expanded (3 Top Rules) - RB
0.00734 18.46% 0.0674 18.1% 0.01323
Expanded (3 Top Rules) - MMHRR 0.00772 24.65% 0.0711 24.57% 0.01393
Expanded (3 Top Rules) - RBHRR 0.00782 26.17% 0.0721 26.17% 0.01411

Expanded (4 Top Rules) - MM 0.00792 27.79% 0.073 27.75% 0.01428
Expanded (4 Top Rules) - RB
0.0144
Expanded (4 Top Rules) - MMHRR 0.00805 29.92% 0.0741 29.78% 0.0145
Expanded (4 Top Rules) - RBHRR 0.00802 29.41% 0.0738 29.21% 0.01446

0.00798 28.8% 0.0736 28.8%

Expanded (5 Top Rules) - MM 0.00815 31.54% 0.0749 31.22% 0.0147
Expanded (5 Top Rules) - RB
0.00819 32.15% 0.0754 31.97% 0.0148
Expanded (5 Top Rules) - MMHRR 0.00808 30.43% 0.0743 30.07% 0.01458
Expanded (5 Top Rules) - RBHRR 0.00811 30.83% 0.0745 30.51% 0.01462

15.16%
15.16%
15.67%
16.08%

18.12%
18.42%
24.64%
26.17%

27.79%
28.8%
29.91%
29.39%

31.51%
32.13%
30.39%
30.8%

5 Conclusions

In this paper we proposed the idea of using association rules to expand user
proﬁles in order to improve recommendations. We outline an approach whereby
the rules can be discovered and used, increasing the number of topics in a user
proﬁle that only has a few existing ratings. Our experiments show that the pro-
posed approach can improve the performance of a recommender system under
the cold-start problem. We also argued that the performance of non-redundant
and redundant rulesets in this application should be very similar. Results ob-
tained show that non-redundant rulesets, which contain fewer rules, performing
on par with larger rulesets still containing redundancy.

Acknowledgements. Computational resources and services used in this work were
provided by the HPC and Research Support Unit, Queensland University of
Technology, Brisbane, Australia.

Using Association Rules to Solve the Cold-Start Problem

347

References

1. Adomavicius, G., Tuzhilin, A.: Toward the Next Generation of Recommender Sys-
tems: A Survey of the State-of-the-Art and Possible Extensions. IEEE Transactions
on Knowledge and Data Engineering 17, 734–749 (2005)

2. Burke, R.: Hybrid Recommender Systems: Survey and Experiments. User Mod-

elling and User-Adapted Interaction 12, 331–370 (2002)

3. Herlocker, J.L., Konstan, J.A., Terveen, L.G., Riedl, J.T.: Evaluating Collaborative
Filtering Recommender Systems. ACM Transactions on Information Systems 22,
5–53 (2004)

4. Leung, C.W., Chan, S.C., Chung, F.: Applying Cross-Level Association Rule Min-
ing to Cold-Start Recommendations. In: IEEE/WIC/ACM International Confer-
ence on Web Intelligence and Intelligent Agent Technology - Workshops, Silicon
Valley, California, USA, November 2007, pp. 133–136 (2007)

5. Middleton, S.E., Alani, H., Shadbolt, N.R., Roure, D.C.D.: Exploiting Synergy
Between Ontologies and Recommender Systems. In: The Semantic Web Workshop,
World Wide Web Conference (WWW 2002), Hawaii, USA, May 2002, pp. 41–50
(2002)

6. Pasquier, N., Taouil, R., Bastide, Y., Stumme, G.: Generating a Condensed Rep-
resentation for Association Rules. Journal of Intelligent Information Systems 24,
29–60 (2005)

7. Schein, A.I., Popescul, A., Ungar, L.H., Pennock, M.: Methods and Metrics for
Cold-Start Recommendations. In: 25th Annual International ACM SIGIR Confer-
ence on Research and Development in Information Retrieval (SIGIR 2002), Tam-
pere, Finland, August 2002, pp. 253–260 (2002)

8. Shaw, G., Xu, Y., Geva, S.: Eliminating Association Rules in Multi-level Datasets.
In: 4th International Conference on Data Mining (DMIN 2008), Las Vegas, USA,
July 2008, pp. 313–319 (2008)

9. Shaw, G., Xu, Y., Geva, S.: Extracting Non-Redundant Approximate Rules from
Multi-Level Datasets. In: 20th IEEE International Conference on Tools with Arti-
ﬁcial Intelligence (ICTAI 2008), Dayton, Ohio, USA, November 2008, pp. 333–340
(2008)

10. Weng, L.T., Xu, Y., Li, Y., Nayak, R.: Exploiting Item Taxonomy for Solving Cold-
start Problem in Recommendation Making. In: IEEE International Conference on
Tools with Artiﬁcial Intelligence (ICTAI 2008), Dayton, Ohio, USA, November
2008, pp. 113–120 (2008)

11. Xu, Y., Li, Y.: Generating Concise Association Rules. In: 16th ACM International
Conference on Information and Knowledge Management (CIKM 2007), Lisbon,
Portugal, November 2007, pp. 781–790 (2007)

12. Xu, Y., Li, Y., Shaw, G.: Concise Representations for Approximate Association
Rules. In: IEEE International Conference on Systems, Man & Cybernetics (SMC
2008), Singapore, October 2008, pp. 94–101 (2008)

13. Ziegler, C.N., Lausen, G., Schmidt-Thieme, L.: Taxonomy-driven Computation
of Product Recommendations. In: International Conference on Information and
Knowledge Management (CIKM 2004), Washington, D.C., USA, November 2004,
pp. 406–415 (2004)


