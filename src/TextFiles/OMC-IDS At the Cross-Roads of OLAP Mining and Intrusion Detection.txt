OMC-IDS: At the Cross-Roads of OLAP Mining

and Intrusion Detection

Hanen Brahmi1, Imen Brahmi1, and Sadok Ben Yahia1,2

1 LIPAH, Computer Science Department, Faculty of Sciences of Tunis, Tunis, Tunisia

2 Institut telecom, telecom SudParis, umr 5157 cnrs Samovar, France

{hanenbrahmi,imen.brahmi}@gmail.com

sadok.benyahia@fst.rnu.tn

Abstract. Due to the growing threat of network attacks, the eﬃcient
detection as well as the network abuse assessment are of paramount im-
portance. In this respect, the Intrusion Detection Systems (IDS) are in-
tended to protect information systems against intrusions. However, IDS
are plugged with several problems that slow down their development,
such as low detection accuracy and high false alarm rate. In this paper,
we introduce a new IDS, called OMC-IDS, which integrates data mining
techniques and On Line Analytical Processing (OLAP) tools. The associ-
ation of the two ﬁelds can be a powerful solution to deal with the defects
of IDS. Our experiment results show the eﬀectiveness of our approach in
comparison with those ﬁtting in the same trend.

Keywords: Intrusion detection system, Data warehouse, OLAP, Audit
data cube, Association rules, Classiﬁcation.

1

Introduction

As far as interconnections among computer systems grow rapidly, network se-
curity is becoming a major challenge. An Intrusion Detection System (IDS)
has been of use to monitor the network traﬃc thereby detect whether a sys-
tem is being targeted by network attacks [14]. Even that IDSs have become a
standard component in security infrastructures, they still have a number of sig-
niﬁcant drawbacks [14]. Indeed, the volume of the audit data which an IDS has
to monitor is huge and grows rapidly. In addition, they ﬂag out lower accuracy
and higher false alarm rates. Moreover, current IDS do not provide support for
historical data analysis and data summarization [13]. Supporting a historical
network database in conjunction with an IDS raises two important technical
challenges [8]: (i) since network traﬃc monitors generate data continuously and
at high-rate, the database needs to support a high data insertion rate [8]; (ii)
to facilitate the security analysis, the database must quickly answer historical
queries [8,13].

Recently, Data Warehouses (DW) and On Line Analytical Processing (OLAP)
technologies have gained a widespread acceptance as a support for decision mak-
ing [7]. In a DW architecture, data are manipulated through OLAP tools which

P.-N. Tan et al. (Eds.): PAKDD 2012, Part II, LNAI 7302, pp. 13–24, 2012.
c(cid:2) Springer-Verlag Berlin Heidelberg 2012

14

H. Brahmi, I. Brahmi, and S. Ben Yahia

oﬀer visualization and navigation mechanisms of multidimensional data views,
commonly called data cubes [7]. Along with the increasing complexity of networks,
protecting a system against new and complex attacks, while keeping an automatic
and adaptive framework, is a thriving issue. One answer to the problem could rely
on the association of OLAP and data mining to allow elaborated analysis tasks
exceeding the simple exploration of the traﬃc data. DW and OLAP techniques
can help the security oﬃcer in detecting attacks, monitoring current activities on
the network, historical data analysis about critical attacks in the past and gener-
ating reports on trend analysis [13]. While, data mining is known for its ability to
discover knowledge from audit data [14].

In this paper, we investigate another way of tackling the aforementioned prob-
lems. Thus, we introduce a new IDS based on a DW perspective to enhance the
accuracy of detection as well as to minimize the false alarm rates. To that end, our
proposed system integrates the OLAP and data mining techniques to improve the
performance and usability of an IDS. Firstly, we model the network traﬃc data as a
multidimensional structure, called audit data cube. Secondly, we introduce a novel
algorithm that provides a concise representation of multidimensional association
rules mined from the audit data cube. Finally, a classiﬁer is used to decide whether a
new connection record is an attack or not using the set of multidimensional detec-
tion rules. Through extensive carried out experiments on the standard intrusion
detection DARPA dataset, we show the eﬀectiveness of our proposal on the IDS
performance aspects related to the false alarms as well as the detection rates.

The remaining of the paper is organized as follows. Section 2 sheds light on
some representative related work applying the data mining techniques into the
IDS. We introduce our new IDS based on the OLAP and data mining techniques
in Section 3. We also relate the encouraging results of the carried out experiments
in Section 4. Finally, Section 5 concludes and points out avenues of future work.

2 Scrutiny of the Related Work

Before data mining techniques are introduced into the intrusion detection ﬁeld,
the latter was heavily dependent on a manually maintained knowledge basis to
reﬂect the ever-changing situations. However, this traditional way is diﬃcult and
expensive [14]. Otherwise, within data mining techniques, the rules (or signa-
tures) of normal and abnormal activities can be created automatically. It is also
possible to detect new types of attacks through an incremental learning process.
Additionally, data mining techniques provide the means to easily perform data
summarization and visualization, that would be of great help to the security
analyst in identifying areas of concern [14]. In the following, we survey the most
prominent approaches dedicated to apply data mining techniques within the in-
trusion detection ﬁeld.

- The MADAM-ID system [10] is considered as the ﬁrst research work that
shows how data mining techniques can be used to construct IDS in a more
systematic and automated manner. Firstly, all network traﬃc is abstracted to
connection records. The latter are classiﬁed into “normal” and “intrusion”.

OMC-IDS System

15

- The ADAM system [2] is one of the best-known approaches that use associ-
ation rules mining and classiﬁcation algorithms to detect intrusions. The main
moan that can be addressed to ADAM stands in its high dependency on training
data for normal activities. However, the attack-free training data is diﬃcult to
aﬀord, since there is no guarantee that we can prevent all attacks in real world
networks.
- The MINDS system [6] allows the development of scalable data mining al-
gorithms and tools for detecting attacks and threats against computer systems.
In fact, the system clusters audit data using a density-based local outliers algo-
rithm to detect intrusions. In addition, it applies an association pattern analysis
to summarize the network connections that are highly ranked as anomalous by
the algorithm.

On the one hand, although the data mining techniques could provide beneﬁcial
characteristics to IDS, there is a compelling need to develop methods and tools
that can help in historical data analysis. On the other hand, within a typical
network environment, many diﬀerent audit streams, collected from multiple cy-
ber sensors, are shown to be useful for detecting intrusions. Such data includes:
(i) raw network traﬃc data; (ii) netﬂow data; (iii) system calls; and so on.
Consequently, it is important to have an architecture that can integrate these
heterogenous data sources into a uniﬁed framework. The research works of [13]
focus on the OLAP techniques to represent network traﬃc data and relate it to
the corresponding IDS alerts. In contrast, we propose to couple OLAP and data
mining techniques for intrusion detection. The main idea behind our approach is
to take advantage from OLAP as well as data mining techniques and to integrate
them to the same analysis framework in order to improve the performance of an
IDS. In this paper, we introduce a new IDS, called OMC-IDS (Olap Mining
and Classiﬁcation-based IDS ), which aﬀords a support for historical data anal-
ysis and data summarization as well as the capacity to handle any kind of data
for intrusion detection.

3 OMC-IDS: Intrusion Detection Based on Olap Mining

and Classiﬁcation

The OMC-IDS enriches the OLAP techniques with data mining facilities to
beneﬁt from their cross capabilities they oﬀer. Indeed, the audit data collected
from diﬀerent heterogenous resources goes through four stages. Firstly, the data
is ﬁltered to remove irrelevant information and a relational database is created
containing the meaningful remaining data. This database facilities information
extraction and data summarization based on individual attributes such as day,
source, destination, etc. Secondly, an audit data cube is constructed using the
available dimensions. Thirdly, the OMC-IDS system integrates OLAP technology
and association rule mining in order to extract interesting information under
diﬀerent perspectives and levels of granularity. Finally, OMC-IDS uses a classiﬁer
to classify each connection record either as one of the attack types or normal.

16

H. Brahmi, I. Brahmi, and S. Ben Yahia

In the following, we focus on the study of the three last steps of the OMC-IDS

system.

3.1 Audit Data Cube: Construction and Manipulation

The data feeding a data warehouse and OLAP systems is usually organized into
multidimensional data views commonly called data cubes. The latter contain
fact tables related to several dimension tables. A fact table represents the focus
of analysis and typically includes attributes called measures. These are usually
numerical values that facilitate a quantitative evaluation of various aspects of
interest. Dimensions include attributes that form hierarchies. As long as a hierar-
chy is traversed from ﬁner to coarser levels, measures are aggregated. Hierarchies
can be included in a ﬂat table forming the so-called STAR schema [7].

Fig. 1. A STAR schema for the IDS data warehouse

We propose to model the audit data as a multidimensional structure based on
the STAR schema shown in Figure 1. The fact table “Connections” contains the
attribute “#Connection” that measures the number of connections. The dimen-
sion “Time” includes information of date and time when the network packet was
captured. The dimension “Service” contains the name and the class of service
(or protocol) that was attacked. “Source Host” describes the source of IP ad-
dresses and port number. Likewise, the dimension “Destination Host” describes
the destination of IP address and port. Similarly, the dimension “Attack” con-
tains both the name of the attack and its type. Furthermore, hierarchies would
give an extra edge for analysis purpose, since they allow decision-making users to
see quantiﬁed data at diﬀerent levels of abstraction. Therefore, security analysts
must deal with hierarchies to exploit OLAP systems to their fullest capabilities.
To do so, we deﬁne a concept hierarchy for each dimension in the audit data
cube. For example, “Hour → Day → Week → Month → Year” is the hierar-
chy on the “Time” dimension. The dimension “Attack” can be organized into
the hierarchy “Name → Class”, e.g., “Smurf → DoS ”. In addition, the hierar-
chies can be pre-deﬁned or generated by partitioning the dimension into ranges.
For instance, the dimension “Duration” could be partitioned into categories as
“Low”, “Medium” and “High”.

OMC-IDS System

17

Using the STAR schema described in Figure 1, a corresponding audit data
cube would be a six dimensional structure in which a cell contains aggregates of
the operations measures. For instance, a cell could correspond to short duration
attacks over the FTP service in the period 1 pm to 2 pm on Oct. 20th 2011.
The audit data cube can be constructed by using the SQL aggregation functions
(e.g., Count, Sum, Min, Max). For example, the Count value refers to the
number of connections. The audit data can be manipulated with great ﬂexibility
and viewed from diﬀerent perspectives by the use of data cubes. Indeed, OLAP
operations (e.g., Roll-up, Drill-down, Slice and Dice) oﬀer analytical mod-
eling capabilities that can be applied on the audit data. The Roll-up operation
allows the going from speciﬁc to general by climbing up the aggregation hierar-
chy. Otherwise, going from generalized data to more speciﬁc by stepping down
the aggregation hierarchy is called Drill-down. The Slice and Dice opera-
tions reduce the dimensionality of data by projecting the data on a subset of
dimensions for selected values of other dimensions.

3.2 Multidimensional Association Rule Mining

The association rule extraction is a technique of data mining to discover in-
teresting correlation relationships among data. In fact, the formalization of the
association rule mining problem was initially introduced by Agrawal et al. [1].
Given a set of records, the objective of mining association rules is to extract all
rules of the form X ⇒ Y that satisfy a user-speciﬁed minimum support and min-
imum conﬁdence thresholds, i.e., minSup1 and minConf 2. X is the antecedent
of the rule and Y is its consequent.

In the recent years, the problem of mining association rules from data cubes
is knowing an increasing interest. The association rule mining can make OLAP
more useful and easier to apply in the overall scheme of decision support systems.
Further, OLAP is closely interlinked with association rules and shares with them
the goal of ﬁnding patterns in the data. Indeed, data cube structures make good
use of aggregated data, at the desired granularity levels, in the computation of
the support and the conﬁdence [3].

The multidimensional association rules is shown to be useful in increasing the
detection accuracy and decreasing the false positives rate [12]. Consequently, the
IDS performances can be greatly improved whenever the association rules are
mined from the audit data cube. However, the number of the mined rules can
be quite large, which aﬀects the speed of IDS and hampers its whole perfor-
mance [6,12]. Some of these rules are redundant since they contain patterns that
correspond to the subsets of other patterns.

Example 1. Let R and R1 tow multidimensional association rules. R: {Src Port
= 21 ∧ Dst IP = 192.63.11.11 ∧ service = telnet ∧ Duration = Long} ⇒ {Attack
= Smurf } and R1: {Src Port = 21 ∧ service = telnet} ⇒ {Attack = Smurf }. R
and R1 share similar features, i.e., the patterns “Src Port = 21” and “service =
1 minSup refers to the minimum support threshold pre-deﬁned by the user.
2 minConf refers to the minimum conﬁdence threshold pre-deﬁned by the user.

18

H. Brahmi, I. Brahmi, and S. Ben Yahia

telnet”. If the respective supports of these two patterns are equal, then the rule
R1 is redundant w.r.t R.
To eﬀectively mine the non-redundant multidimensional association rules from
the audit data cube, we use the concept of closure [11] deﬁned as follows:
Deﬁnition 1. A pattern X is a closed pattern if there exists no pattern X(cid:3)
such that: (i) X(cid:3)
is a proper superset of X; and (ii) every connection record in
a network traﬃc containing X also contains X(cid:3)
. The closure γ of a pattern X
is the maximal superset of X having the same support value as that of X.
In this respect, we introduce the AMAR (Audit Multidimensional Association
Rules mining) algorithm intended to mine a concise representation of multidi-
mensional association rules from an audit data cube AC. The pseudo-code is
shown by Algorithm 1.

Algorithm 1. The AMAR algorithm.

Input: AC, D, HD , minSup, minConf .
Output: Set of multidimensional non-redundant association rules, i.e., X ⇒ Y, with

corresponding Supp and Conf.

Begin

1
2

C1 := {1-candidate};
k := 1; /* |1-candidate| is the cardinality of attributes corresponding to D and
While Ck (cid:5)= ∅ and k ≤ |1-candidate| do

3 HD .*/

4
5
6
7
8

9
10
11
12

13
14
15
16
17
18
19

20
21
22
23

24

25

CCk := ∅;
FCk := ∅;
Foreach candidate pattern A ∈ Ck do
Foreach candidate closed pattern A ∈ CCk do

CCk := CCk ∪ γ(A);
Supp := ComputeSupport(A);
If Supp ≥ minSup then

FCk := FCk ∪ A;

Foreach A ∈ FCk do

Foreach B (cid:5)= ∅ and B ⊂ A do
Conf := ComputeConfidence(A − B, B);
If Conf ≥ minConf then

X := A − B;
Y := B;
return (X ⇒ Y, Supp, Conf);

Ck+1 := ∅;
Foreach A ∈ FCk do

Foreach B ∈ FCk that shares (k-1) items with A do

If All Z ⊂ {A ∪ B} of k items are inter-dimensional and closed
frequent then

Ck+1 := Ck+1 ∪ {A ∪ B};

k := k + 1;

26

End

Usually the user is interested in speciﬁed subsets of attributes in order to
extract interesting relationships among them. So, (s)he needs to exclude the set
of irrelevant attributes from the examination. To that end, AMAR allows the
user to guide the analysis process by: (i) deﬁning the set of dimensions D to
be analyzed; (ii) choosing the hierarchies levels HD associated to the analy-
sis dimensions; and (iii) setting the minSup and the minConf thresholds. As

OMC-IDS System

19

sketched by Algorithm 1, we proceed by a bottom-up level wise search for fre-
quent closed k-patterns, where the level k is the number of items in the set.
We denote by Ck the sets of k-patterns that are potentially closed, CCk the
sets of closed k-patterns that are potentially frequent and FCk the sets of fre-
quent closed k-patterns. During the initialization step (line 2), our algorithm
captures the 1-candidates from the user deﬁned analysis dimensions D over the
audit data cube AC. These 1-candidates correspond to the attributes of D, where
each one complies with the chosen hierarchies HD.

Within the ﬁrst step, AMAR applies the closure concept (cf. Deﬁnition 1).
The second step (lines 9-12) of our algorithm derives the frequent closed pat-
terns FCk from the closed candidate patterns CCk that have a support greater
or equal to minSup. The third step (lines 13-19) allows the extraction of asso-
ciation rules with a conﬁdence greater or equal to minConf . The computation
of support and conﬁdence are performed respectively by the ComputeSupport
and ComputeConfidence functions. Both functions directly pick up required
precomputed aggregates from the data cube via MDX (MultiDimensional eX-
pression) queries [3]. The fourth step (lines 20-24) uses the set of frequent closed
k-patterns FCk to derive a new set of (k+1)-candidates, denoted by Ck+1. One
(k+1)-candidate is the union of two k-patterns A and B from FCk that respects
three conditions: (i) A and B must have k-1 common patterns; (ii) all non empty
sub-patterns from A ∪ B must be instances of inter-dimensional3 patterns in D;
and (iii) all non empty sub-patterns from A ∪ B must be frequent closed pat-
terns.

Table 1. A snapshot of an audit
data cube with four dimensions

Table 2. Multidimensional association rule
list

Service Src Port Dst Port Attack #Con
44
26
15
20
64

143 Neptune
143 Satan
110 Neptune
143 Satan

63587
6161
6161
63587
63587

1 Neptune

Imap
Imap
Pop3
Pop3

Tcpmux

Rules

143 ⇒ Satan

Sup Conf
ID
R1
0.5
0.3
R2 143 ∧ 63587 ⇒ Imap ∧ Neptune
0.3
0.7
Satan ⇒ Imap ∧ 143 ∧ 6161
R3
0.2
0.6
R4 63587 ∧ Neptune ⇒ Tcpmux ∧ 1 0.4
0.6
R5 Pop3 ∧ 143 ⇒ 63587 ∧ Satan
1.0
0.1
R6 Pop3 ∧ 63587 ⇒ 143 ∧ Satan
0.1
1.0

Example 2. Table 1 sketchs an example of an audit data cube with four di-
mensions. The last row measures the number of connections using the aggre-
gation function Count. The set of closed patterns, with their corresponding
supports, is as follows: {(“Pop3”: 0.2), (“143”:0.5), (“63587”:0.7), (“6161”:
0.2), (“Neptune”: 0.7), (“Pop3, 143, 63587, Satan”: 0.1), (“Pop3, 110, 6161,
Neptune”: 0.08), (“63587, 143”: 0.3), (“143, Satan”: 0.2), (“Imap, 143”: 0.4),
(“63587, Neptune”: 0.6), (“Imap, 143, 6161, Satan”: 0.1), (“Imap, 143, 63587,
Neptune”: 0.2), (“Tcpmux, 1, 63587, Neptune”: 0.3)}. We extract the set of
multidimensional association rules using the AMAR algorithm. Throughout our
example, we set the minSup to 10% and the minConf to 50%. The algorithm
generated 40 rules. Some of the extracted rules are illustrated in table 2.
3 An inter-dimensional pattern is composed of items coming from diﬀerent dimensions.

20

H. Brahmi, I. Brahmi, and S. Ben Yahia

4 Classiﬁcation

Intrusion detection can be considered as a classiﬁcation problem where each
connection is identiﬁed either as one of the attack types or normal based on
some existing data [13]. Some of the association rules extracted by the AMAR
algorithm are not useful since they do not imply an intrusion type in their con-
sequent part. Therefore, we select the set of rules whose consequents include an
intrusion label. For instance, according to the set of rules illustrated by Table 2,
the rules R3 and R4 are excluded to retain only the rules R1, R2, R5 and R6.
Then, we apply a decomposition axiom introduced in [4] (cf. Deﬁnition 2) to
obtain new rules of the form “feature1 ∧ feature2 ∧ . . .∧ featuren ⇒ intrusion”.

2 , since it includes an intrusion label in its consequent part.

Even though, the obtained rules are redundant, their generation is mandatory
to guarantee a maximal cover of the necessary rules.
Deﬁnition 2. Given an association rule R, a decomposition axiom is deﬁned
as follows: If R : X ⇒ Y then R1 : X ⇒ Z is a derivable valid rule, ∀Z ⊂ Y .
Example 3. Let us consider the rule R2: {Dst Port = 143 ∧ Src Port = 63587}
⇒ {Service = Imap ∧ Attack = Neptune}. Using the decomposition axiom, R2 is
2: {Dst Port = 143 ∧ Src Port = 63587} ⇒ {Service = Imap}
transformed in R(cid:3)
2 : {Dst Port = 143 ∧ Src Port = 63587} ⇒ {Attack = Neptune}. We
and R(cid:3)(cid:3)
retain the rule R(cid:3)(cid:3)
Whenever the rules imply the same intrusion, we retain the rule which poses less
constraints and can match more audit records.
Example 4. Let us consider two rules R: {Service = frag ∧ Src IP = 209.30.71.165
∧ Src port = 110 ∧ Dst port = 32} ⇒ {Attack = Pod} and R1: {Service = frag,
Dst port = 32} ⇒ {Attack = Pod}. Both rules R and R1 imply the same intru-
sion label (i.e., “Attack = Pod ”). R1 is considered to be more interesting than R,
since it is needless to satisfy the features “Src IP = 209.30.71.165” and “Src port
= 110” to highlight the attack “Pod ”. Hence, R1 implies less constraints and
can match more connection records than R.
Once the detection rules are generated, the OMC-IDS system applies a clas-
siﬁer [5] to classify the new connection records. Indeed, while having a new
connection record CN ew, the detection of an intrusion consists in traversing the
detection rules from up to down in the classiﬁer. The ﬁrst reached rule, whose
antecedent’s part corresponds (i.e., included or equal) to the features of CN ew,
will be of use. Thus, CN ew will obtain the conclusion of the rule which indicates
an attack.

Example 5. Let us consider a new connection record CN ew: “service = frag,
Src IP = 209.30.71.165, Dst port = 32”. If we have in the classiﬁer just the
rule R (c.f. Example 4), we cannot classify CN ew since the attribute “Src port
= 110” does not permit the matching. However, the rule R1 (c.f. Example 4),
which has a smaller antecedent than R, can classify CN ew.
The latter example shows that the AMAR algorithm provides the relevant set
of detection rules of need for the classiﬁcation step of OMC-IDS. In fact, the use
of such set of rules is of beneﬁt for classifying new connection records.

OMC-IDS System

21

5 Experimental Results

To evaluate the eﬀectiveness and eﬃciency of our proposed system OMC-IDS,
we carried out extensive experiments on a PC equipped with a 3 GHz Pentium
IV and 2 Go of main memory running under Linux Fedora Core 6. Indeed,
we compare our approach with the pioneering approaches falling within the
intrusion detection-based classiﬁcation trend, namely, ADAM [2] and C4.54 [9].
During the carried out experiments, we use the DARPA19985 dataset. The
latter consists of training data and test data. The training data are generated
in the ﬁrst seven weeks and testing data are derived in the rest two weeks. The
attacks consisting of a total of 33 diﬀerent attack types are divided into four
diﬀerent attack categories, namely DoS, R2L, U2R and Probing. To build the
audit data cube, we use the seven weeks’ training data. To that end, we adopt
the STAR schema showed in Figure 1. The audit data cube construction is done
using the Analysis Services of SQL Server 2008.

Through these experiments, we put the focus on the assessment of the IDS

performances in terms of detection and false alarms rates.

1. The Detection Rate (DR) is the number of correctly detected intrusions;
2. The False alarms Rate (FR) is the number of normal instances that were

incorrectly considered as attacks.

Table 3. The DR (%) of OMC-IDS with respect to the dimension’s variation

Dimensions DoS Probe U2R R2L
86.4 66.6 74.9
96.8
83.2 67.8 76.7
97.9
98.2
91.1 69.8 79.5
98.5 95.3 71.5 81.3
99.5 95.2 74.9 86.6

2-D
3-D
4-D
5-D
6-D

Table 3 shows the DR of OMC-IDS with respect to the dimension’s variation
for the four attack categories. The dimensions variation was established using
the AMAR algorithm. From the results, we can remark that the dataset with six
dimensions gives the best performances to detect the DoS class with 99.5% DR
whereas the dataset with ﬁve dimensions gives the worst DR with 98.5%. More-
over, the dataset with ﬁve dimensions generates the best performance to detect
the Probe class with 95.3% DR. The 6-D dataset gives the best performance to
detect the U2R class with 74.9% DR and 5-D generates the worst performance
with only 71.5%. Finally, the DR of R2L class on the 6-D dataset is the highest
one, i.e., 86.6% while on the 5-D we have the worst performance with only 81.3%
DR. As consequence, OMC-IDS allows the detection of the attacks with best DR
as far as the number of dimensions is the highest one, i.e., six dimensions. Even

4 Available in Weka: http://www.cs.waikato.ac.nz/ml/weka/
5 Available at http://www.ll.mit.edu/mission/communications/ist/corpora/ideval/da-

ta/1998data.html

22

H. Brahmi, I. Brahmi, and S. Ben Yahia

though, the DR decreases according to the decrease of the dimension number, it
is still high.

The main challenge of IDS is to increase the value of the DR, while decreasing
the value of FR. Figure 2 presents the DR and the FR, obtained respectively by,
OMC-IDS, ADAM and C4.5-based systems. It can be seen that our approach
drastically outperforms the other ones. In fact, Figure 2 (a) shows that OMC-IDS
achieves a total DR above 99%, 97%, 86% and 74%, respectively corresponding
to the detection of four attack categories (i.e., DoS, Probe, R2L and U2R).

)

%

t

(
 
s
e
a
R
n
o

 

i
t
c
e
e
D

t

)

%

(
 
s
e

t

a
R

 
f
i
t
i
s
o
p
e
s
a
F

 

l

 110

 100

 90

 80

 70

 60

 50

 8
 7
 6
 5
 4
 3
 2
 1
 0

(a)

OMC-IDS
C4.5-based
ADAM

)

%

t

(
 
s
e
a
R
n
o

 

S
O
D

e
b
o
r
P

R
2
U

L
2
R

(c)

OMC-IDS
C4.5-based
ADAM

i
t
c
e
e
D

t

)

%

(
 
s
e

t

a
R

 
f
i
t
i
s
o
p
e
s
a
F

 

l

(b)

OMC-IDS
C4.5-based
ADAM

d
o
P

f
r
u
m
S

p
e
e
w
s
p

I

p
e
e
w
s
t
r
o
P

t
i
k
t
o
o
R

y
a
p
S

l

e
u
d
o
m
d
a
o
a
L

t

n
e

i
l

c
z
e
r
a
W

(d)

OMC-IDS
C4.5-based
ADAM

 115
 110
 105
 100
 95
 90
 85
 80
 75
 70

 8
 7
 6
 5
 4
 3
 2
 1
 0

S
O
D

e
b
o
r
P

L
2
R

R
2
U

d
o
P

f
r
u
m
S

p
e
e
w
s
p

I

p
e
e
w
s
t
r
o
P

t
i
k
t
o
o
R

y
a
p
S

l

e
u
d
o
m
d
a
o
a
L

t

n
e

i
l

c
z
e
r
a
W

Fig. 2. Performance of OMC-IDS vs. ADAM and C4.5-based

Compared to ADAM, we remark that OMC-IDS provides a higher successful
DR. Indeed, we achieved an average DR of 89% compared to 71%, over the four
attack categories. On one hand, the high value of DR is explained by the use
of pruning techniques that reduce the search space. In fact, the closed patterns
have been shown to present the best compactness rates [11]. Thus, the mecha-
nism adopted by the AMAR algorithm is more eﬀective than that adopted by
ADAM which is hampered by the ineﬀectiveness of the redundant association
rules. On the other hand, the use of multidimensional association rules helps in
improving the performance of detecting attacks. For example, let us consider the
multidimensional association rule “{Src Port = 21 ∧ Dst Port = 63 ∧ Src IP =
209.30.71.165 ∧ Dst IP = 180.66.11.11 ⇒ Attack = Satan}”. Obviously, the lat-
ter rule has higher accuracy than a single dimensional association rule “{Dst IP
= 180.66.11.11 ⇒ Attack = Satan}”. Consequently, we conclude that OMC-
IDS is more eﬃcient than ADAM due to the use of OLAP tools. In fact, the
mining of multidimensional association rules from audit data cubes enhances the
IDS process. Among the three tested systems, the C4.5-based IDS has the lowest

OMC-IDS System

23

DR for the four attack classes. For instance, whenever OMC-IDS and ADAM
have 74% and 65% DR for the U2R attacks, respectively, C4.5-based system
has 54% DR. This is due to the stealthy nature of those attacks. Moreover, it is
shown that C4.5 can classify more accurately on smaller datasets [9]. The results
illustrated by Figure 2 (a) are conﬁrmed by Figure 2 (b). The latter presents
the DR of eight diﬀerent attacks, including Pod, Smurf, Ipsweep, Portsweep,
Warezclient, Spay, Rootkit and Loadmodule.

In addition, Figure 2 (c) shows that the FR ranges from 0.2% to 1%. The
lowest FR is achieved for DoS attacks. The highest FR of R2L attacks generated
by OMC-IDS is equal to 0.2%, which is a very low value compared to ADAM
and C4.5-based systems. Precisely, according to Figure 2 (d), it is clear that the
improvement of OMC-IDS with respect to ADAM is of 2%, 1.2%, 2% and 3%,
respectively corresponding to the FR of the attacks Smurf, Ipsweep, Loadmodule
and Warezclient.

)

%

(
 
s
e

t

a
R
n
o

 

i
t
c
e
e
D

t

 100

 95

 90

 85

 80

 75

 70

 0

 2

C4.5
ADAM
OMC-IDS

 4

 8
False Positif Rates (%)

 6

 10

Fig. 3. The ROC curves of OMC-IDS vs. ADAM and C4.5-IDS

Within intrusion detection, the ROC (Receiver Operating Characteristic) curve
is often used to assess the performance of IDSs. Figure 3 compares the ROC
curve of OMC-IDS vs. those of ADAM and C4.5-based systems. It can be seen
that the DR grows quickly to its peak value within a small increase of FR. In
addition, the result ensures that our system can achieve the highest DR with the
lowest FR. Thus, we conclude that OMC-IDS is more eﬀective than ADAM
and C4.5-based systems due to the use of the OLAP techniques that helped in
improving the performance of detecting attacks.

6 Conclusion and Perspectives

On Line Analytical Processing (OLAP) provides tools to explore data cubes
in order to extract interesting information. In this paper, we have shown the
potential of coupling OLAP and data mining techniques in order to improve
IDSs. To that end, we designed a new architecture, called OMC-IDS, to model
network traﬃc using a multidimensional data structure based on the STAR
schema. Carried out experiments showed that OMC-IDS outperforms the pi-
oneering approaches, i.e., ADAM and C4.5-based systems. Future work will

24

H. Brahmi, I. Brahmi, and S. Ben Yahia

include exploring the alert correlations to expand the capabilities of our sys-
tem. We can combine data from multiple sources to obtain a better analysis of
the alert correlations.

References

1. Agrawal, R., Imielinski, T., Swami, A.: Mining Association Rules between Sets
of Items in Large Databases. In: Proceedings of the ACM-SIGMOD International
Conference on Management of Data, Washington, USA, pp. 207–216 (1993)

2. Barbara, D., Couto, J., Jajodia, S., Popyack, L., Wu, N.: ADAM: Detecting In-
trusions by Data Mining. In: Proc. of the 2nd Annual IEEE SMC Information
Assurance Workshop, West Point, NY, pp. 11–16 (2001)

3. Ben Messaoud, R., Rabas´eda, S.L., Missaoui, R., Boussaid, O.: OLEMAR: An
Online Environment for Mining Association Rules in Multidimensional Data, vol. 2,
pp. 14–47 (2008)

4. Yahia, S.B., Nguifo, E.M.: Revisiting Generic Bases of Association Rules. In: Kam-
bayashi, Y., Mohania, M., W¨oß, W. (eds.) DaWaK 2004. LNCS, vol. 3181, pp.
58–67. Springer, Heidelberg (2004)

5. Brahmi, I., Ben Yahia, S., Slimai, Y.: IDS-GARC: D´etection d’Intrusions Bas´ee sur
les R`egles Associatives G´en´eriques de Classiﬁcation. In: Actes du 9`eme Colloque
Africain sur la Recherche en Informatique, Rabat, Maroc, pp. 667–674 (2008)

6. Chandola, V., Eilertson, E., Ertoz, L., Simon, G., Kumar, V.: Data Mining for Cy-
ber Security. In: Singhal, A. (ed.) Data Warehousing and Data Mining Techniques
for Computer Security, pp. 83–103. Springer (2006)

7. Chaudhuri, S., Dayal, U.: An Overview of Data Warehousing and OLAP Technol-

ogy. SIGMOD Record 26(1), 65–74 (1997)

8. Geambasu, R., Bragin, T., Jung, J., Balazinska, M.: On-Demand View Material-
ization and Indexing for Network Forensic Analysis. In: Proceedings of the 3rd
USENIX International Workshop on Networking Meets Databases, Cambridge,
MA, pp. 4:1–4:7 (2007)

9. Gyanchandani, M., Yadav, R.N., Rana, J.L.: Intrusion Detection Using C4.5: Per-
formance Enhancement by Classiﬁer Combination. In: Proceedings of the Interna-
tional Conference on Advances in Computer Science, pp. 130–133 (2010)

10. Lee, W.: A Data Mining Framework for Constructing Features and Models for
Intrusion Detection Systems. Phd thesis, Columbia University, New York, NY,
USA (1999)

11. Pasquier, N., Bastide, Y., Taouil, R., Lakhal, L.: Eﬃcient Mining of Association
Rules Using Closed Itemset Lattices. Journal of Information Systems 24(1), 25–46
(1999)

12. Ping-Ping, M., Qiu-Ping, Z.: Association Rules Applied to Intrusion Detection.

Wuhan University Journal of Natural Sciences 7(4), 426–430 (2002)

13. Singhal, A.: Warehousing and Data Mining Techniques for Cyber Security. Ad-

vances in Information Security, vol. 31. Springer (2007)

14. Singhal, A., Jajodia, S.: Data Mining for Intrusion Detection. In: Maimon,
(eds.) Data Mining and Knowledge Discovery Handbook,

O., Rokach, L.
pp. 1171–1180. Springer (2010)


