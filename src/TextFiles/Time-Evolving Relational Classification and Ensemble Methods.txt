Time-Evolving Relational Classiﬁcation

and Ensemble Methods

Ryan Rossi and Jennifer Neville

Purdue University,

West Lafayette, IN 47906, USA
{rrossi,neville}@purdue.edu

Abstract. Relational networks often evolve over time by the addition,
deletion, and changing of links, nodes, and attributes. However, accu-
rately incorporating the full range of temporal dependencies into
relational learning algorithms remains a challenge. We propose a novel
framework for discovering temporal-relational representations for classi-
ﬁcation. The framework considers transformations over all the evolving
relational components (attributes, edges, and nodes) in order to accu-
rately incorporate temporal dependencies into relational models. Addi-
tionally, we propose temporal ensemble methods and demonstrate their
eﬀectiveness against traditional and relational ensembles on two real-
world datasets. In all cases, the proposed temporal-relational models
outperform competing models that ignore temporal information.

1

Introduction

Temporal-relational information is present in many domains such as the Internet,
citation and collaboration networks, communication and email networks, social
networks, biological networks, among many others. These domains all have at-
tributes, links, and/or nodes changing over time which are important to model.
We conjecture that discovering an accurate temporal-relational representation
will disambiguate the true nature and strength of links, attributes, and nodes.
However, the majority of research in relational learning has focused on mod-
eling static snapshots [2, 6] and has largely ignored the utility of learning and
incorporating temporal dynamics into relational representations.

Temporal relational data has three main components (attributes, nodes, links)
that vary in time. First, the attribute values (on nodes or links) may change over
time (e.g., research area of an author). Next, links might be created and deleted
throughout time (e.g., host connections are opened and closed). Finally, nodes
might appear and disappear over time (e.g., through activity in an online social
network).

Within the context of evolving relational data, there are two types of predic-
tion tasks. In a temporal prediction task, the attribute to predict is changing
over time (e.g., student GPA), whereas in a static prediction task, the predic-
tive attribute is constant (e.g., paper topic). For these prediction tasks, the
space of temporal-relational representations is deﬁned by the set of relational

P.-N. Tan et al. (Eds.): PAKDD 2012, Part I, LNAI 7301, pp. 1–13, 2012.
c(cid:2) Springer-Verlag Berlin Heidelberg 2012

2

R. Rossi and J. Neville

elements that change over time (attributes, links, and nodes). To incorporate
temporal information in a representation that is appropriate for relational mod-
els, we consider two transformations based on temporal weighting and temporal
granularity. Temporal weighting aims to represent the temporal inﬂuence of the
links, attributes and nodes by decaying the weights of each with respect to time,
whereas the choice of temporal granularity restricts attention to links, attributes,
and nodes within a particular window of time. The optimal temporal-relational
representation and the corresponding temporal classiﬁer depends on the partic-
ular temporal dynamics of the links, attributes, and nodes present in the data,
as well as the network domain (e.g., social vs. biological networks).

In this work, we address the problem of selecting the most optimal temporal-
relational representation to increase the accuracy of predictive models. We con-
sider the full space of temporal-relational representations and propose (1) a
temporal-relational classiﬁcation framework, and (2) a set of temporal ensemble
methods, to leverage time-varying links, attributes, and nodes in relational net-
works. We illustrate the diﬀerent types of models on a variety of classiﬁcation
tasks and evaluate each under various conditions. The results demonstrate the
ﬂexibility and eﬀectiveness of the temporal-relational framework for classiﬁca-
tion in time-evolving relational domains. Furthermore, the framework provides a
foundation for automatically searching over temporal-relational representations
to increase the accuracy of predictive models.

2 Related Work

Recent work has started to model network dynamics in order to better pre-
dict link and structure formation over time [7, 10], but this work focuses on
unattributed graphs. Previous work in relational learning on attributed graphs
either uses static network snapshots or signiﬁcantly limits the amount of tem-
poral information incorporated into the models. Sharan et al. [18] assumes a
strict representation that only uses kernel estimation for link weights, while GA-
TVRC [9] uses a genetic algorithm to learn the link weights. SRPTs [11] incor-
porate temporal and spatial information in the relational attributes. However,
the above approaches focus only on one speciﬁc temporal pattern and do not
consider diﬀerent temporal granularities. In contrast, we explore a larger space
of temporal-relational representations in a ﬂexible framework that can capture
temporal dependencies over links, attributes, and nodes.

To the best of our knowledge, we are the ﬁrst to propose and investigate
temporal-relational ensemble methods for time-varying relational classiﬁcation.
However, there has been recent work on relational ensemble methods [8, 14,
15] and non-relational ensemble methods for evolving streams [1]. Preisach et
al. [14] use voting and stacking methods to combine relational data with multiple
relations. In contrast, Eldardiry and Neville [8] incorporates prediction averaging
in the collective inference process to reduce both learning and inference variance.

Time-Evolving Relational Classiﬁcation and Ensemble Methods

3

3 Temporal-Relational Classiﬁcation Framework

Below we outline a temporal-relational classiﬁcation framework for prediction
tasks in dynamic relational networks. Relational data is represented as an at-
tributed graph D = (G, X) where the graph G = (V, E) represents a set of N
nodes, such that vi ∈ V corresponds to node i and each edge eij ∈ E corresponds
(cid:3)
to a link (e.g., email) between nodes i and j. The attribute set:

(cid:2)

X =

XV = [X 1, X 2, ..., X mv ],
XE = [X mv+1, X mv+2, ..., X mv+me]

contains mv observed attributes on the nodes (XV) and me observed attributes
on the edges (XE). Dynamic relational data evolves over time by the addition,
deletion, and changing of nodes, edges, and attributes. Let Dt = (Gt, Xt) refer
to the dataset at time t, where Gt = (V, Et) and Xt = (XV
t ). In our classiﬁ-
cation framework, we consider relational data observed over a range of timesteps
t = {1, ..., T} (e.g., citations over a period of years, emails over a period of days).
Given this time-varying relational data, the task is to learn a model to predict
either a static attribute Y or a dynamic attribute at a particular timestep Yt,
while exploiting both the relational and temporal dependencies in the data.

t , XE

We deﬁne our temporal-relational classiﬁcation framework with respect to
a set of possible transformations of links, attributes, or nodes (as a function
of time). The temporal weighting (e.g., exponential decay of past information)
and temporal granularity (e.g., window of timesteps) of the links, attributes and
nodes form the basis for any arbitrary transformation with respect to the tempo-
ral information (See Table 1). The discovered temporal-relational representation
can be applied for mining temporal patterns, classiﬁcation, and as a means for
constructing temporal-ensembles. An overview of the temporal-relational repre-
sentation discovery is provided below:

Table 1. Temporal-Relational Representation

1. For each Relational Component

− Links, Attributes, or Nodes

2. Select the Temporal Granularity

(cid:2) Timestep ti
(cid:2) Window {tj, tj+1, ..., ti}
T = {t0, ..., tn}
(cid:2) Union

3. Select the Temporal Influence

(cid:2) Weighted
(cid:2) Uniform
Repeat steps 1-3 for each component.

4. Select the Relational Classifier

(cid:2) Relational Bayes Classiﬁer (RBC)
(cid:2) Relational Probability Trees (RPT)

Edges
Attributes
Nodes

Uniform Weighting
p
e
t
s
e
m
T

p
e
t
s
e
m
T

w
o
d
n
W

n
o
i

w
o
d
n
W

i

n
o
i

n
U

n
U

i

i

i

Table 1 provides an intuitive view of the possible temporal-relational rep-
resentations. For instance, the TVRC model is a special case of the proposed

4

R. Rossi and J. Neville

framework where the links, attributes, and nodes are unioned and the links are
weighted. Below we provide more detail on steps 2-4.

3.1 Temporal Granularity

Traditionally, relational classiﬁers have attempted to use all the data available in
a network [18]. However, since the relevance of data may change over time (e.g.,
links become stale), learning the appropriate temporal granularity (i.e., range of
timesteps) can improve classiﬁcation accuracy. We brieﬂy deﬁne three general
classes for varying the temporal granularity of the links, attributes, and nodes.

1. Timestep. The timestep models only use a single timestep ti for learning.
2. Window. The window models use a sliding window of (multiple) timesteps
{tj, tj+1, ..., ti} for learning. When the size of window is varied, the space of

3. Union. The union model uses all previous temporal information for learning

possible models in this category is by far the largest.
at time ti, i.e., T = {0, ..., ti}.

The timestep and union models are separated into distinct classes for clarity in
evaluation and for understandability in pattern mining.

3.2 Temporal Inﬂuence: Links, Attributes, Nodes

We model the inﬂuence of relational components over time using temporal
weighting. Speciﬁcally, when considering a temporal dataset Dt = (Gt, Xt), we
will construct a weighted network Gt = (V, Et, W E
t ).
Here Wt refers to a function that assigns weights on the edges and attributes
that are used in the classiﬁers below.
t (i, j) = 1 if eij ∈ Et and 0 otherwise. Similarly, we
i = xm
t and 0 otherwise. Then we consider two

Initially, we deﬁne W E
i ) = 1 if X m

t ) and Xt = (XV

deﬁne W X
diﬀerent approaches to revise these initial weights:

t (xm

i ∈ Xm

t , XE

t , W X

1. Weighting. These temporal weights can be viewed as probabilities that a
relational component is still active at the current time step t, given that
it was observed at time (t − k). We investigated three temporal weighting
functions:

– Exponential Kernel. The exponential kernel weights the recent past highly
and decays the weight rapidly as time passes [3]. The kernel function KE
for temporal data is deﬁned as: KE(Di; t, θ) = (1 − θ)t−iθWi
historical information longer: KL(Di; t, θ) = θWi( t∗−ti+1
t∗−to+1 )

– Linear Kernel. The linear kernel decays more grdually and retains the

– Inverse Linear Kernel. This kernel lies between the exponential and lin-

ear kernels when moderating historical information:
KIL(Di; t, θ) = θWi(

1

ti−to+1 )

Time-Evolving Relational Classiﬁcation and Ensemble Methods

5

(a) Graph and attribute weighting

(b) Incorporating link weights

(c) Using link & attribute weights

Fig. 1. (a) Temporally weighting the attributes and links. (b) The feature calcula-
tion that includes only the temporal link weights. (c) The feature calculation that
incorporates both the temporal attribute weights and the temporal link weights.

2. Uniform. These weights ignore the temporal inﬂuence of a relational com-
t (i, j) = 1 if eij ∈
ponent, and weight them uniformly over time, i.e., W E
Et(cid:3) : t(cid:3) ∈ T and 0 otherwise. A relational component can be assigned uni-
form weights within the selected temporal granularity or over the entire time
window (e.g., traditional classiﬁers assign uniform weights, but they don’t
select the appropriate temporal granularity).

We note that diﬀerent weighting functions can be chosen for diﬀerent relational
components (edges, attributes, nodes) with varying temporal granularities. For
instance, the temporal inﬂuence of the links might be predicted using the expo-
nential kernel while the attributes are uniformly weighted but have a diﬀerent
temporal granularity than the links.

3.3 Temporal-Relational Classiﬁers

Once the temporal granularity and temporal weighting are selected for each rela-
tional component, then a temporal-relational classiﬁer can learned. In this work,
we use modiﬁed versions of the RBC [13] and RPT [12] to model the transformed
temporal-relational representation. However, we note that any relational model

6

R. Rossi and J. Neville

that can be modiﬁed to incorporate node, link, and attribute weights is suitable
for this phase. We extended RBCs and RPTs since they are interpretable, di-
verse, simple, and eﬃcient. We use k-fold x-validation to learn the “best” model.
Both classiﬁers are extended for learning and prediction over time.

Weighted Relational Bayes Classiﬁer. RBCs extend naive Bayes classi-
ﬁers [5] to relational settings by treating heterogeneous relational subgraphs
as a homogeneous set of attribute multisets. The weighted RBC uses standard
maximum likelihood learning. More speciﬁcally, the suﬃcient statistics for each
conditional probability distribution are computed as weighted sums of counts
based on the link and attribute weights. More formally, for a class label C, at-
tributes X, and related items R, the RBC calculates the probability of C for an
item i of type G(i) as follows:
(cid:4)

P (Ci|X, R) ∝

P (X i

m|C)

Xm∈XG(i)

(cid:4)
j∈R

(cid:4)
Xk∈XG(j)

P (X j

k|C)P (C)

Weighted Relational Probability Trees. RPTs extend standard probability
estimation trees to a relational setting. We use the standard learning
algorithm [12] except that the aggregate functions are computed after the ap-
propriate links and attributes weights are included for the selected temporal
granularity (shown in Figure 1). For prediction, if the model is applied to pre-
dict attribute Yt at time t, we ﬁrst calculate the weighted data Dt . Then the
learned model from time (t − 1) is applied to Dt. The weighted classiﬁer is
appropriately augmented to incorporate the weights from Dt.

4 Temporal Ensemble Methods

Ensemble methods have traditionally been used to improve predictions by con-
sidering a weighted vote from a set of classiﬁers [4]. We propose temporal ensem-
ble methods that exploit the temporal dimension of relational data to construct
more accurate predictors. This is in contrast to traditional ensembles that do
not explicitly use the temporal information. The temporal-relational classiﬁca-
tion framework and in particular the temporal-relational representations of the
time-varying links, nodes, and attributes form the basis of the temporal ensem-
bles (i.e., as a wrapper over the framework). The proposed temporal ensemble
techniques are drawn from one of the ﬁve methodologies described below.

1. Transforming the Temporal Nodes and Links: The ﬁrst method learns
an ensemble of classiﬁers, where each of the classiﬁers are learned from, and
then applied to, link and node sets that are sampled from each discrete
timestep according to some probability. This sampling strategy is performed
after selecting a temporal weighting and temporal granularity, and trans-
forming the data to the appropriate temporal-relational representation. We
note that the sampling probabilities for each timestep can be modiﬁed to
bias the sampling toward the present or the past.

Time-Evolving Relational Classiﬁcation and Ensemble Methods

7

2. Sampling or Transforming the Temporal Feature Space: The second
method transforms the temporal feature space by localizing randomization
(for attributes at each timestep), weighting, or by varying the temporal gran-
ularity of the features, and then learning an ensemble of classiﬁers with dif-
ferent feature sets. Additionally, we might use only one temporal weighting
function but learn models with diﬀerent decay parameters or resample from
the temporal features.

3. Adding Noise or Randomness: The third method is based on adding
noise along the temporal dimension of the data, to increase generalization
and performance. Speciﬁcally, we randomly permute the nodes feature values
across the timesteps (i.e., a nodes recent behavior is observed in the past and
vice versa) or links between nodes are permuted across time, and then learn
an ensemble of models from several versions of the data.

4. Transforming the Time-Varying Class Labels: The fourth method in-
troduces variance in the data by randomly permuting the previously learned
labels at t-1 (or more distant) with the true labels at t, again learning an
ensemble of models from several versions of the data.

5. Multiple Classiﬁcation Algorithms and Weightings: The ﬁfth method
constructs and ensemble by randomly selecting from a set of classiﬁcation
algorithms (i.e., RPT, RBC, wvRN, RDN), while using the same temporal-
relational representation, or by varying the representation with respect to
the temporal weighting or granularity. Notably, an ensemble that uses both
RPT and RBC models signiﬁcantly increases accuracy, most likely due to
the diversity of these temporal classiﬁers (i.e., correctly predicting diﬀerent
instances). Additionally, the temporal-classiﬁers might be assigned weights
based on assessment of accuracy from cross-validation (or a Bayesian model
selection approach).

5 Methodology

For evaluating the framework, we use both static (Y is constant over time) and
temporal prediction tasks (Yt changes over time).

5.1 Datasets

PyComm Developer Communication Network. We analyze email and
bug communication networks extracted from the python-dev mailing list archive
(www.python.org) for the period 01/01/07−09/30/08. The network consists of
13181 email messages, among 1914 users. Bug reports were also extracted and
used to construct a bug discussion network consisting of 69435 bug comments
among 5108 users. The size of the timesteps are three months. We also ex-
tracted text from emails and bug messages and use it to dynamically model
topics between individuals and teams. Additionally, we discover temporal cen-
trality attributes (i.e., clustering coeﬃcient, betweenness). The prediction task
is whether a developer is eﬀective (i.e., if a user closed a bug in that timestep).

8

R. Rossi and J. Neville

Cora Citation Network. The Cora dataset contains authorship and citation
information about CS research papers extracted automatically from the web.
The prediction tasks are to predict one of seven machine learning papers and to
predict AI papers given the topic of its references. In addition, these techniques
are evaluated using the most prevalent topics its authors are working on through
collaborations with other authors.

5.2 Temporal Models

The space of temporal-relational models are evaluated using a representative
sample of classiﬁers with varying temporal weightings and granularities. For ev-
ery timestep t, we learn a model on Dt (i.e., some set of timesteps) and apply
the model to Dt+1. The utility of the temporal-relational classiﬁers and repre-
sentation are measured using the area under the ROC curve (AUC). Below, we
brieﬂy describe a few classes of models that were evaluated.

– TENC: The TENC models predict the temporal inﬂuence of both the links

and attributes [16].

– TVRC: This model weights only the links using all previous timesteps.
– Union Model: The union model uses all links and nodes up to and including

t for learning.

– Window Model: The window model uses the data Dt−1 for prediction on

Dt (unless otherwise speciﬁed).

We also compare simpler models such as the RPT (relational information only)
and the DT (non-relational) that ignore any temporal information. Additionally,
we explore many other models, including the class of window models, various
weighting functions (besides exponential kernel), and built models that vary the
set of windows in TENC and TVRC.

6 Empirical Results

In this section, we demonstrate the eﬀectiveness of the temporal-relational frame-
work and temporal ensemble methods on two real-world datasets. The main
ﬁndings are summarized below:

(cid:3) Temporal-relational models signiﬁcantly outperform relational and non-

relational models.

(cid:3) The classes of temporal-relational models each have advantages and disad-
vantages in terms of accuracy, eﬃciency, and interpretability. Models based
strictly on temporal granularity are more interpretable but less accurate than
models that learn the temporal inﬂuence. The more complex models that
combine both are generally more accurate, but less eﬃcient.

(cid:3) Temporal ensemble methods signiﬁcantly outperform non-relational and re-
lational ensembles. In addition, the temporal ensembles are an eﬃcient and
accurate alternative to searching over the space of temporal models.

Time-Evolving Relational Classiﬁcation and Ensemble Methods

9

6.1 Single Models1

0
0

.

1

.

0

.

0

8
9

6
9

4
9

C
U
A

TVRC
RPT
Intrinsic
Int+time
Int+graph
Int+topics

We evaluate the temporal-relational frame-
work using single-models and show that in
all cases the performance of classiﬁcation im-
proves when the temporal dynamics are ap-
propriately modeled.
Temporal, Relational, and Non-
Relational Information. The utility of the
temporal (TVRC), relational (RPT), and
non-relational
information (decision tree;
DT) is assessed using the most primitive
models. Figure 2 compares TVRC with the
RPT and DT models that use more fea-
tures but ignore the temporal dynamics of
the data. We ﬁnd the TVRC to be the sim-
plest temporal-relational classiﬁer that still
outperforms the others. Interestingly, the discovered topic features are the only
additional features that improve performance of the DT model. This is signiﬁ-
cant as these attributes are discovered by dynamically modeling the topics, but
are included in the DT model as simple non-relational features (i.e., no temporal
weighting or granularity).

Fig. 2. Comparing
primitive
temporal model (TVRC) to com-
peting
and
non-relational (DT) models

relational

(RPT),

a

2
9

.

0

.

0

Exploring Temporal-Relational Models.
We focus on exploring a representative set of
temporal-relational models from the proposed
framework. To more appropriately evaluate
the models, we remove highly correlated at-
tributes (i.e., that are not necessarily temporal
patterns, or motifs), such as “assignedto” in
the PyComm prediction task. In Figure 3, we
ﬁnd that TENC outperforms the other models
over all timesteps. This class of models are sig-
niﬁcantly more complex than TVRC since the
temporal inﬂuence of both links and attributes
are learned.

5
9
.
0

0
9
.
0

5
8
.
0

C
U
A

0
8
.
0

5
7

.

0

0
7

.

0

5
6

.

0

TENC
TVRC
TVRC+Union
Window Model
Union Model

T=1

T=2

T=3

T=4

the

temporal

We then explored learning the appropri-
ate temporal granularity. Figure 3 shows the
results from two models in the TVRC class
where we tease apart the superiority of TENC
(i.e., weighting or granularity). However, both
TVRC models outperform one another on diﬀerent timesteps, indicating the ne-
cessity for a more precise temporal-representation that optimizes the temporal
granularity by selecting the appropriate decay parameters for links and attributes

Fig. 3. Exploring
of
Signiﬁcantly diﬀerent
relational
the
evaluated.

space
relational models.
temporal-
from
are

representations

framework

proposed

1 For brevity, some plots and comparisons were omitted [17].

10

R. Rossi and J. Neville

(i.e., TENC). Similar results were found using Cora and other base classiﬁers
such as RBC. Models based strictly on varying the temporal granularity were
also explored. More details can be found in [17].

6.2 Temporal-Ensemble Models

Instead of directly learning the optimal
temporal-relational
representation to in-
crease the accuracy of classiﬁcation, we use
temporal ensembles by varying the relational
representation with respect to the temporal
information. These ensemble models reduce
error due to variance and allow us to assess
which features are most relevant to the do-
main with respect to the relational or tem-
poral information.

0
0

.

1

8
9

.

0

C
U
A

6
9

.

0

4
9

.

0

2
9

.

0

TVRC
RPT
DT

T=1         T=2        T=3          T=4         Avg

Fig. 4. Comparing temporal, rela-
tional, and traditional ensembles

Temporal, Relational, and Traditional
Ensembles. We ﬁrst resampled the in-
stances (nodes, links, features) repeatedly and then learn TVRC, RPT, and DT
models. Across almost all the timesteps, we ﬁnd the temporal-ensemble that uses
various temporal-relational representations outperforms the relational-ensemble
and the traditional ensemble (see Figure 4). The temporal-ensemble outperforms
the others even when the minimum amount of temporal information is used (e.g.,
time-varying links). More sophisticated temporal-ensembles can be constructed
to further increase accuracy. We have investigated ensembles that use signiﬁ-
cantly diﬀerent temporal-relational representations (i.e., from a wide range of
model classes) and ensembles that use various temporal weighting parameters.
In all cases, these ensembles are more robust and increase the accuracy over
more traditional ensemble techniques (and single classiﬁers). Further, the average
improvement of the temporal-ensembles is signiﬁcant at p < 0.05 with a 16%
reduction in error, justifying the proposed temporal ensemble methodologies.

In the next experiment, we construct en-
sembles using the feature classes. We use the
primitive models (with the transformed fea-
ture space) in order to investigate (more ac-
curately) the most signiﬁcant feature class
(communication, team, centrality, topics)
and also to identify the minimum amount
of temporal information required to outper-
form relational ensembles.

In Figure 5, we ﬁnd several striking tem-
poral patterns. First, the team features are
localized in time and are not changing fre-
quently. For instance, it is unlikely that a
developer changes their assigned teams and

TVRC
RPT
DT

0
.
1

9
.
0

C
U
A

8
.
0

7
.
0

6
0

.

Communication

Team

Centrality

Topics

Fig. 5. Comparing attribute classes
w.r.t. temporal, relational, and tra-
ditional ensembles

p
o
r
D
C
U
A

 

0.10

0.08

0.06

0.04

0.02

0.00

t
n
u
o
c
−
d
e
n
g
s
s
a

i

v
e
r
p
−
t
n
u
o
c
−
d
e
n
g
s
s
a

i

Time-Evolving Relational Classiﬁcation and Ensemble Methods

11

DT
TVRC
RPT

t
n
u
o
c
−
n
o
s
s
u
c
s
d
−

i

i

l
i

a
m
e

l
i

a
m
e
−
y
t
i
l

a
r
t
n
e
c
−
e
e
r
g
e
d

t
n
u
o
c
−
n
o
i
t
a
c
n
u
m
m
o
c
−

i

l
l

a

i

t
n
u
o
c
−
n
o
s
s
u
c
s
d
−
g
u
b

i

i

n
o
s
s
u
c
s
d
−

i

l
i

a
m
e
−
y
t
i
l

a
r
t
n
e
c
−
c
b

i

n
o
s
s
u
c
s
d
−

i

l
l

a
−
y
t
i
l

a
r
t

n
e
c
−
n
e
g
e

i

i

n
o
s
s
u
c
s
d
−

i

l
i

a
m
e
−

f
f

e
o
c
−
t
s
u
c

l

t
n
u
o
c
−
m
a
e
t

v
e
r
p
−
d
e
s
o
c
s
a
h

l

i

n
o
s
s
u
c
s
d
−

i

l
l

a
−

f
f

e
o
c
−
t
s
u
c

l

i

i

n
o
s
s
u
c
s
d
−
g
u
b
−
y
t
i
l

a
r
t
n
e
c
−
c
b

i

n
o
s
s
u
c
s
d
−

i

l
l

a
−
s
c
p
o

i

t

m
a
e
t
−
e
d
o
c
n
u

i

i

n
o
s
s
u
c
s
d
−

i

l
l

a
−
y
t
i
l

a
r
t
n
e
c
−
c
b

i

n
o
s
s
u
c
s
d
−

i

l
l

a
−
y
t
i
l

a
r
t

n
e
c
−
e
e
r
g
e
d

i

i

n
o
s
s
u
c
s
d
−
g
u
b
−
s
c
p
o

i

t

m
a
e
t
−
r
e
t
n
k
t

i

i

n
o
s
s
u
c
s
d
−

i

l
i

a
m
e
−
s
c
p
o

i

t

Fig. 6. Randomization. The signiﬁcant attributes used in the temporal ensemble are
compared to the relational and traditional ensembles. The change in AUC is measured.

Topic 1 Topic 2 Topic 3 Topic 4 Topic 5

logged
patch
issue
bugs
bug

gt
ﬁle
lt
line
os

dev

wrote
guido
import

code
pep
mail

ﬁx

ﬁxed
days

problem import
print
call
read
socket
path
data
error
open

release
tests
work
people
make
pm module
ve

time
docu

created

docs

support added windows
problem
module
traceback methods
things
good
exception
van

doesnt mailto
report
recent

check
doc

ms

dict
add
def

ﬁle
run
main
local
src

directory

code
object
class
case

test
lib
view
svn

method

trunk

type
list
set

objects
change
imple

rev

modules

build
amp
error
usr

functions
argument

include
home

C
U
A

5
9
.
0

0
9
.
0

5
8
.
0

0
8
.
0

5
7
.
0

0
7
.
0

5
6
.
0

TENC
TVRC
Window Model
Union Model

T=1

T=2

T=3

T=4

AVG

Fig. 7. Evaluation of temporal-relational classiﬁers using only the latent topics of the
communications to predict eﬀectiveness. LDA is used to automatically discover the
latent topics as well as annotating the communication links and individuals with their
appropriate topic in the temporal networks.

therefore modeling the temporal dynamics only increases accuracy by a relatively
small percent. However, the temporal-ensemble is still more accurate than tra-
ditional ensemble methods that ignore temporal patterns. This indicates the ro-
bustness of the temporal-relational representations. More importantly, the other
classes of attributes are evolving considerably and this fact is captured by the
signiﬁcant improvement of the temporal ensemble models. Similar performance
is also obtained by varying the temporal granularity (see previous examples).

Randomization. We use randomization to identify the signiﬁcant attributes
in the temporal-ensemble models. Randomization provides a means to rank and
eliminate redundant attributes (i.e., two attributes may share the same

12

R. Rossi and J. Neville

signiﬁcant temporal pattern). We randomize each attribute in each timestep
and measure the change in AUC. The results are shown in Figure 6.

We ﬁnd that the basic traditional ensemble relies on “assignedto” (in the
current time step) while the temporal ensemble (and even less for the relational
ensemble) relies on the previous “assignedto” attributes. This indicates that
relational information in the past is more useful than intrinsic information in the
present—which points to an interesting hypothesis that a colleagues behavior
(and interactions) precedes their own behavior. Organizations might use this
to predict future behavior with less information and proactively respond more
quickly. Additionally, the topic attributes are shown to be the most useful for the
temporal ensembles (Fig. 7), indicating the utility of using topics to understand
the context and strength of relationships.

7 Conclusion

We proposed and validated a framework for temporal-relational classiﬁers, en-
sembles, and more generally, representations for temporal-relational data. We
evaluated an illustrative set of temporal-relational models from the proposed
framework. Empirical results show that the models signiﬁcantly outperform
competing classiﬁcation models that use either no temporal information or a
very limited amount. The proposed temporal ensemble methods (i.e., tempo-
rally sampling, randomizing, and transforming features) were shown to sig-
niﬁcantly outperform traditional and relational ensembles. Furthermore, the
temporal-ensemble methods were shown to increase the accuracy over traditional
models while providing an eﬃcient alternative to exploring the space of temporal-
models. The results demonstrated the eﬀectiveness, scalability, and ﬂexibility of
the temporal-relational representations for classiﬁcation and ensembles in time-
evolving domains. In future work, we will theoretically analyze the framework
and the proposed ensemble methods.

Acknowledgments. This research is supported by NSF under contract number
SES-0823313 and by the Department of Defense through a National Defense Science
& Engineering Graduate Fellowship (NDSEG). The views and conclusions contained
herein are those of the authors and should not be interpreted as necessarily representing
the oﬃcial policies or endorsements either expressed or implied, of the NSF or the U.S.
Government.

References

1. Bifet, A., Holmes, G., Pfahringer, B., Kirkby, R., Gavald`a, R.: New ensemble meth-

ods for evolving data streams. In: SIGKDD, pp. 139–148 (2009)

2. Chakrabarti, S., Dom, B., Indyk, P.: Enhanced hypertext categorization using hy-

perlinks. In: SIGMOD, pp. 307–318 (1998)

3. Cortes, C., Pregibon, D., Volinsky, C.: Communities of Interest. In: Hoﬀmann,
F., Adams, N., Fisher, D., Guimar˜aes, G., Hand, D.J. (eds.) IDA 2001. LNCS,
vol. 2189, pp. 105–114. Springer, Heidelberg (2001)

Time-Evolving Relational Classiﬁcation and Ensemble Methods

13

4. Dietterich, T.G.: Ensemble Methods in Machine Learning. In: Kittler, J., Roli, F.

(eds.) MCS 2000. LNCS, vol. 1857, pp. 1–15. Springer, Heidelberg (2000)

5. Domingos, P., Pazzani, M.: On the optimality of the simple bayesian classiﬁer

under zero-one loss. Machine Learning 29, 103–130 (1997)

6. Domingos, P., Richardson, M.: Mining the network value of customers. In:

SIGKDD, pp. 57–66 (2001)

7. Dunlavy, D., Kolda, T., Acar, E.: Temporal link prediction using matrix and tensor

factorizations. TKDD 5(2), 10 (2011)

8. Eldardiry, H., Neville, J.: Across-model collective ensemble classiﬁcation. AAAI

(2011)

9. G¨une¸s, ˙I., C¸ ataltepe, Z., ¨O˘g¨ud¨uc¨u, S¸.G.: GA-TVRC: A Novel Relational Time
Varying Classiﬁer to Extract Temporal Information Using Genetic Algorithms. In:
Perner, P. (ed.) MLDM 2011. LNCS, vol. 6871, pp. 568–583. Springer, Heidelberg
(2011)

10. Lahiri, M., Berger-Wolf, T.: Structure prediction in temporal networks using fre-

quent subgraphs. In: CIDM, pp. 35–42 (2007)

11. McGovern, A., Collier, N., Matthew Gagne, I., Brown, D., Rodger, A.: Spatiotem-
poral Relational Probability Trees: An Introduction. In: ICDM, pp. 935–940 (2008)
12. Neville, J., Jensen, D., Friedland, L., Hay, M.: Learning relational probability trees.

In: SIGKDD, pp. 625–630 (2003)

13. Neville, J., Jensen, D., Gallagher, B.: Simple estimators for relational Bayesian

classifers. In: ICML, pp. 609–612 (2003)

14. Preisach, C., Schmidt-Thieme, L.: Relational ensemble classiﬁcation. In: ICDM,

pp. 499–509. IEEE (2006)

15. Preisach, C., Schmidt-Thieme, L.: Ensembles of relational classiﬁers. KIS 14(3),

249–272 (2008)

16. Rossi, R., Neville, J.: Modeling the evolution of discussion topics and communica-

tion to improve relational classiﬁcation. In: SOMA-KDD, pp. 89–97 (2010)

17. Rossi, R.A., Neville, J.: Representations and ensemble methods for dynamic rela-

tional classiﬁcation. CoRR abs/1111.5312 (2011)

18. Sharan, U., Neville, J.: Temporal-relational classiﬁers for prediction in evolving

domains. In: ICML (2008)


